# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  ffac2798999c5b84f1b4605a1280994bb665a406
Bug 1290116 P1 Expose a ServiceWorkerRegistrationInfo::IsIdle() method. r=asuth

diff --git a/dom/workers/ServiceWorkerRegistrationInfo.cpp b/dom/workers/ServiceWorkerRegistrationInfo.cpp
--- a/dom/workers/ServiceWorkerRegistrationInfo.cpp
+++ b/dom/workers/ServiceWorkerRegistrationInfo.cpp
@@ -218,17 +218,17 @@ ServiceWorkerRegistrationInfo::TryToActi
  * TryToActivate should not be called directly, use TryToActivateAsync instead.
  */
 void
 ServiceWorkerRegistrationInfo::TryToActivate()
 {
   AssertIsOnMainThread();
   bool controlling = IsControllingDocuments();
   bool skipWaiting = mWaitingWorker && mWaitingWorker->SkipWaitingFlag();
-  bool idle = !mActiveWorker || mActiveWorker->WorkerPrivate()->IsIdle();
+  bool idle = IsIdle();
   if (idle && (!controlling || skipWaiting)) {
     Activate();
   }
 }
 
 void
 ServiceWorkerRegistrationInfo::Activate()
 {
@@ -514,9 +514,15 @@ ServiceWorkerRegistrationInfo::Transitio
   // We are transitioning from waiting to active normally, so go to
   // the activating state.
   mActiveWorker = mWaitingWorker.forget();
   mActiveWorker->UpdateState(ServiceWorkerState::Activating);
   NotifyListenersOnChange(WhichServiceWorker::WAITING_WORKER |
                           WhichServiceWorker::ACTIVE_WORKER);
 }
 
+bool
+ServiceWorkerRegistrationInfo::IsIdle() const
+{
+  return !mActiveWorker || mActiveWorker->WorkerPrivate()->IsIdle();
+}
+
 END_WORKERS_NAMESPACE
diff --git a/dom/workers/ServiceWorkerRegistrationInfo.h b/dom/workers/ServiceWorkerRegistrationInfo.h
--- a/dom/workers/ServiceWorkerRegistrationInfo.h
+++ b/dom/workers/ServiceWorkerRegistrationInfo.h
@@ -166,15 +166,19 @@ public:
   // The worker is transitioned to the Activated state.
   void
   SetActive(ServiceWorkerInfo* aServiceWorker);
 
   // Transition the current waiting worker to be the new active worker.  The
   // worker is updated to the Activating state.
   void
   TransitionWaitingToActive();
+
+  // Determine if the registration is actively performing work.
+  bool
+  IsIdle() const;
 };
 
 } // namespace workers
 } // namespace dom
 } // namespace mozilla
 
 #endif // mozilla_dom_workers_serviceworkerregistrationinfo_h
