# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  ce17a57b2f694b22ea90485a4144e3dc453009c3
Bug 1210941 P1 Create the LOAD_BYPASS_SERVICE_WORKER flag. r=jduell

diff --git a/netwerk/base/nsIChannel.idl b/netwerk/base/nsIChannel.idl
--- a/netwerk/base/nsIChannel.idl
+++ b/netwerk/base/nsIChannel.idl
@@ -24,17 +24,17 @@ interface nsIStreamListener;
  * by calling nsIChannel::open or nsIChannel::asyncOpen.
  *
  * After a request has been completed, the channel is still valid for accessing
  * protocol-specific results.  For example, QI'ing to nsIHttpChannel allows
  * response headers to be retrieved for the corresponding http transaction.
  *
  * This interface must be used only from the XPCOM main thread.
  */
-[scriptable, uuid(cc3bff29-324e-4704-9eeb-1b8a62c4a9dc)]
+[scriptable, uuid(2c389865-23db-4aa7-9fe5-60cc7b00697e)]
 interface nsIChannel : nsIRequest
 {
     /**
      * The original URI used to construct the channel. This is used in
      * the case of a redirect or URI "resolution" (e.g. resolving a
      * resource: URI to a file: URI) so that the original pre-redirect
      * URI can still be obtained.  This is never null.  Attempts to
      * set it to null must throw.
@@ -187,17 +187,17 @@ interface nsIChannel : nsIRequest
     /**
      * Performs content security check and calls asyncOpen().
      */
     void asyncOpen2(in nsIStreamListener aListener);
 
     /**************************************************************************
      * Channel specific load flags:
      *
-     * Bits 23-31 are reserved for future use by this interface or one of its
+     * Bits 26-31 are reserved for future use by this interface or one of its
      * derivatives (e.g., see nsICachingChannel).
      */
 
     /**
      * Set (e.g., by the docshell) to indicate whether or not the channel
      * corresponds to a document URI.
      */
     const unsigned long LOAD_DOCUMENT_URI = 1 << 16;
@@ -268,16 +268,23 @@ interface nsIChannel : nsIRequest
      * credentials explicitely. For form login 403 response instead of 401 is
      * usually used to prevent an auth dialog. But any code other then 401/7
      * will leave original credentials in the cache and there is then no way
      * to override them for the same user name.
      */
     const unsigned long LOAD_EXPLICIT_CREDENTIALS = 1 << 24;
 
     /**
+     * Set to force bypass of any service worker interception of the channel.
+     */
+    const unsigned long LOAD_BYPASS_SERVICE_WORKER = 1 << 25;
+
+    // nsICachingChannel load flags begin at bit 26.
+
+    /**
      * Access to the type implied or stated by the Content-Disposition header
      * if available and if applicable. This allows determining inline versus
      * attachment.
      *
      * Setting contentDisposition provides a hint to the channel about the
      * disposition.  If a normal Content-Disposition header is present its
      * value will always be used.  If it is missing the hinted value will
      * be used if set.
