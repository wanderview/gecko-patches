# HG changeset patch
# Parent f165c10a05371c005331772dfeb36b283742c958
# User Ben Kelly <ben@wanderview.com>
Bug 1133939 P1 interdiff 008 fix comment from review feedback


diff --git a/xpcom/io/nsPipe3.cpp b/xpcom/io/nsPipe3.cpp
--- a/xpcom/io/nsPipe3.cpp
+++ b/xpcom/io/nsPipe3.cpp
@@ -611,17 +611,17 @@ nsPipe::GetReadSegment(nsPipeReadState& 
 {
   ReentrantMonitorAutoEnter mon(mReentrantMonitor);
 
   if (aReadState.mReadCursor == aReadState.mReadLimit) {
     return NS_FAILED(mStatus) ? mStatus : NS_BASE_STREAM_WOULD_BLOCK;
   }
 
   // The input stream locks the pipe while getting the buffer to read from,
-  // but then unlocks while actually data copying is taking place.  In
+  // but then unlocks while actual data copying is taking place.  In
   // order to avoid deleting the buffer out from under this lockless read
   // set a flag to indicate a read is active.  This flag is only modified
   // while the lock is held.
   MOZ_ASSERT(!aReadState.mActiveRead);
   aReadState.mActiveRead = true;
 
   aSegment = aReadState.mReadCursor;
   aLength = aReadState.mReadLimit - aReadState.mReadCursor;
