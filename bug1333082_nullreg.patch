# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  f80dc9fc34680105b714a49b4704bb843f5f7004
Bug 1333082 Handle nullptr mRegistration in ServiceWorkerUpdateJob::ContinueAfterInstallEvent(). r=asuth

diff --git a/dom/workers/ServiceWorkerUpdateJob.cpp b/dom/workers/ServiceWorkerUpdateJob.cpp
--- a/dom/workers/ServiceWorkerUpdateJob.cpp
+++ b/dom/workers/ServiceWorkerUpdateJob.cpp
@@ -534,27 +534,34 @@ ServiceWorkerUpdateJob::Install(ServiceW
 
 void
 ServiceWorkerUpdateJob::ContinueAfterInstallEvent(bool aInstallEventSuccess)
 {
   if (Canceled()) {
     return FailUpdateJob(NS_ERROR_DOM_ABORT_ERR);
   }
 
-  MOZ_ASSERT(mRegistration->GetInstalling());
+  // If we haven't been canceled we should have a registration.  There appears
+  // to be a path where it gets cleared before we call into here.  Assert
+  // to try to catch this condition, but don't crash in release.
+  MOZ_DIAGNOSTIC_ASSERT(mRegistration);
+  if (!mRegistration) {
+    return FailUpdateJob(NS_ERROR_DOM_ABORT_ERR);
+  }
 
   // Continue executing the Install algorithm at step 12.
 
   // "If installFailed is true"
   if (NS_WARN_IF(!aInstallEventSuccess)) {
     // The installing worker is cleaned up by FailUpdateJob().
     FailUpdateJob(NS_ERROR_DOM_ABORT_ERR);
     return;
   }
 
+  MOZ_DIAGNOSTIC_ASSERT(mRegistration->GetInstalling());
   mRegistration->TransitionInstallingToWaiting();
 
   Finish(NS_OK);
 
   // Step 20 calls for explicitly waiting for queued event tasks to fire.  Instead,
   // we simply queue a runnable to execute Activate.  This ensures the events are
   // flushed from the queue before proceeding.
 
