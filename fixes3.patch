# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  2bb56c9ca6dd5eeb901d0a9bd62f41e942d774ec

diff --git a/dom/base/nsGlobalWindow.cpp b/dom/base/nsGlobalWindow.cpp
--- a/dom/base/nsGlobalWindow.cpp
+++ b/dom/base/nsGlobalWindow.cpp
@@ -11642,17 +11642,20 @@ nsGlobalWindow::NewResume()
 
     // The timeout mWhen is set to the absolute time when the timer should
     // fire.  Recalculate the delay from now until that deadline.  If the
     // the deadline has already passed or falls within our minimum delay
     // deadline, then clamp the resulting value to the minimum delay.  The
     // mWhen will remain at its absolute time, but we won't fire the OS
     // timer until our calculated delay has passed.
     int32_t remaining = 0;
-    if (t->mWhen > now) {
+    if (t->mWhen.IsNull()) {
+      remaining = t->mInterval;
+      t->mWhen = now + TimeDuration::FromMilliseconds(t->mInterval);
+    } else if (t->mWhen > now) {
       remaining = static_cast<int32_t>((t->mWhen - now).ToMilliseconds());
     }
     uint32_t delay = std::max(remaining, DOMMinTimeoutValue());
 
     t->mTimer = do_CreateInstance("@mozilla.org/timer;1");
     if (!t->mTimer) {
       t->remove();
       continue;
