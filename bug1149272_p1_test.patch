# HG changeset patch
# Parent bfacc4c7e3385a004a69aa611ba322828ba727ea
# User Ben Kelly <ben@wanderview.com>
Bug 1149272 P1 Add a test to benchmark pipe destruction. r=froydnj


diff --git a/xpcom/tests/gtest/TestPipes.cpp b/xpcom/tests/gtest/TestPipes.cpp
--- a/xpcom/tests/gtest/TestPipes.cpp
+++ b/xpcom/tests/gtest/TestPipes.cpp
@@ -2,16 +2,17 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include <algorithm>
 #include "gtest/gtest.h"
 #include "Helpers.h"
 #include "mozilla/ReentrantMonitor.h"
+#include "mozilla/TimeStamp.h"
 #include "nsCOMPtr.h"
 #include "nsCRT.h"
 #include "nsIAsyncInputStream.h"
 #include "nsIAsyncOutputStream.h"
 #include "nsICloneableInputStream.h"
 #include "nsIInputStream.h"
 #include "nsIOutputStream.h"
 #include "nsIPipe.h"
@@ -857,8 +858,38 @@ TEST(Pipes, Close_During_Read_Partial_Se
 {
   TestCloseDuringRead(1024, 512);
 }
 
 TEST(Pipes, Close_During_Read_Full_Segment)
 {
   TestCloseDuringRead(1024, 1024);
 }
+
+TEST(Pipes, DestroyPerf)
+{
+  const uint32_t kNumPipes = 100000;
+  nsTArray<nsCOMPtr<nsIInputStream>> readerList;
+
+  nsTArray<char> inputData;
+  testing::CreateData(3, inputData);
+
+  for (uint32_t i = 0; i < kNumPipes; ++i) {
+    nsCOMPtr<nsIInputStream> reader;
+    nsCOMPtr<nsIOutputStream> writer;
+
+    nsresult rv = NS_NewPipe(getter_AddRefs(reader), getter_AddRefs(writer),
+                             4*1024, 32*1024);
+    ASSERT_TRUE(NS_SUCCEEDED(rv));
+
+    testing::WriteAllAndClose(writer, inputData);
+
+    readerList.AppendElement(reader);
+  }
+
+  TimeStamp start(TimeStamp::Now());
+  readerList.Clear();
+  TimeStamp end(TimeStamp::Now());
+
+  TimeDuration diff = end - start;
+  printf_stderr("Pipes.DestroyPerf took total:%fus mean:%fus\n",
+                diff.ToMicroseconds(), (diff.ToMicroseconds() / kNumPipes));
+}
