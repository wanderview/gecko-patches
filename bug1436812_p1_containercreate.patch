# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  0688131fcd7fc603450ffd40fa83d255aa161e00
Bug 1436812 P1 Add ServiceWorkerContainer::Create() factory method. r=asuth

diff --git a/dom/base/Navigator.cpp b/dom/base/Navigator.cpp
--- a/dom/base/Navigator.cpp
+++ b/dom/base/Navigator.cpp
@@ -1497,17 +1497,18 @@ Navigator::GetConnection(ErrorResult& aR
 }
 
 already_AddRefed<ServiceWorkerContainer>
 Navigator::ServiceWorker()
 {
   MOZ_ASSERT(mWindow);
 
   if (!mServiceWorkerContainer) {
-    mServiceWorkerContainer = new ServiceWorkerContainer(mWindow);
+    nsCOMPtr<nsIGlobalObject> go(do_QueryInterface(mWindow));
+    mServiceWorkerContainer = ServiceWorkerContainer::Create(go);
   }
 
   RefPtr<ServiceWorkerContainer> ref = mServiceWorkerContainer;
   return ref.forget();
 }
 
 size_t
 Navigator::SizeOfIncludingThis(mozilla::MallocSizeOf aMallocSizeOf) const
diff --git a/dom/serviceworkers/ServiceWorkerContainer.cpp b/dom/serviceworkers/ServiceWorkerContainer.cpp
--- a/dom/serviceworkers/ServiceWorkerContainer.cpp
+++ b/dom/serviceworkers/ServiceWorkerContainer.cpp
@@ -51,18 +51,26 @@ ServiceWorkerContainer::IsEnabled(JSCont
   nsIDocument* doc = window->GetExtantDoc();
   if (!doc || nsContentUtils::IsInPrivateBrowsing(doc)) {
     return false;
   }
 
   return DOMPrefs::ServiceWorkersEnabled();
 }
 
-ServiceWorkerContainer::ServiceWorkerContainer(nsPIDOMWindowInner* aWindow)
-  : DOMEventTargetHelper(aWindow)
+// static
+already_AddRefed<ServiceWorkerContainer>
+ServiceWorkerContainer::Create(nsIGlobalObject* aGlobal)
+{
+  RefPtr<ServiceWorkerContainer> ref = new ServiceWorkerContainer(aGlobal);
+  return ref.forget();
+}
+
+ServiceWorkerContainer::ServiceWorkerContainer(nsIGlobalObject* aGlobal)
+  : DOMEventTargetHelper(aGlobal)
 {
 }
 
 ServiceWorkerContainer::~ServiceWorkerContainer()
 {
   RemoveReadyPromise();
 }
 
diff --git a/dom/serviceworkers/ServiceWorkerContainer.h b/dom/serviceworkers/ServiceWorkerContainer.h
--- a/dom/serviceworkers/ServiceWorkerContainer.h
+++ b/dom/serviceworkers/ServiceWorkerContainer.h
@@ -4,17 +4,17 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #ifndef mozilla_dom_serviceworkercontainer_h__
 #define mozilla_dom_serviceworkercontainer_h__
 
 #include "mozilla/DOMEventTargetHelper.h"
 
-class nsPIDOMWindowInner;
+class nsIGlobalWindow;
 
 namespace mozilla {
 namespace dom {
 
 class Promise;
 struct RegistrationOptions;
 class ServiceWorker;
 
@@ -26,17 +26,18 @@ public:
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(ServiceWorkerContainer, DOMEventTargetHelper)
 
   IMPL_EVENT_HANDLER(controllerchange)
   IMPL_EVENT_HANDLER(error)
   IMPL_EVENT_HANDLER(message)
 
   static bool IsEnabled(JSContext* aCx, JSObject* aGlobal);
 
-  explicit ServiceWorkerContainer(nsPIDOMWindowInner* aWindow);
+  static already_AddRefed<ServiceWorkerContainer>
+  Create(nsIGlobalObject* aGlobal);
 
   virtual JSObject*
   WrapObject(JSContext* aCx, JS::Handle<JSObject*> aGivenProto) override;
 
   already_AddRefed<Promise>
   Register(const nsAString& aScriptURL,
            const RegistrationOptions& aOptions,
            ErrorResult& aRv);
@@ -62,16 +63,18 @@ public:
   void DisconnectFromOwner() override;
 
   // Invalidates |mControllerWorker| and dispatches a "controllerchange"
   // event.
   void
   ControllerChanged(ErrorResult& aRv);
 
 private:
+  explicit ServiceWorkerContainer(nsIGlobalObject* aGlobal);
+
   ~ServiceWorkerContainer();
 
   void RemoveReadyPromise();
 
   // This only changes when a worker hijacks everything in its scope by calling
   // claim.
   RefPtr<ServiceWorker> mControllerWorker;
 
