# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  f59ca00a6551fb0d1364c5b9f24eaa2299e82127
Bug 1256428 P16 Fix some issues calling purgeCache() in ServiceWorkerUpdateJob.cpp. r=jdm

diff --git a/dom/workers/ServiceWorkerUpdateJob.cpp b/dom/workers/ServiceWorkerUpdateJob.cpp
--- a/dom/workers/ServiceWorkerUpdateJob.cpp
+++ b/dom/workers/ServiceWorkerUpdateJob.cpp
@@ -141,23 +141,23 @@ ServiceWorkerUpdateJob2::FailUpdateJob(E
       serviceWorkerScriptCache::PurgeCache(mRegistration->mPrincipal,
                                            mServiceWorker->CacheName());
     }
 
     RefPtr<ServiceWorkerManager> swm = ServiceWorkerManager::GetInstance();
 
     if (mRegistration->mInstallingWorker) {
       mRegistration->mInstallingWorker->UpdateState(ServiceWorkerState::Redundant);
+      serviceWorkerScriptCache::PurgeCache(mRegistration->mPrincipal,
+                                           mRegistration->mInstallingWorker->CacheName());
       mRegistration->mInstallingWorker = nullptr;
       if (swm) {
         swm->InvalidateServiceWorkerRegistrationWorker(mRegistration,
                                                        WhichServiceWorker::INSTALLING_WORKER);
       }
-      serviceWorkerScriptCache::PurgeCache(mRegistration->mPrincipal,
-                                           mRegistration->mInstallingWorker->CacheName());
     }
 
     if (swm) {
       swm->MaybeRemoveRegistration(mRegistration);
     }
   }
 
   mServiceWorker = nullptr;
@@ -431,36 +431,27 @@ ServiceWorkerUpdateJob2::ContinueAfterIn
   }
 
   MOZ_ASSERT(mRegistration->mInstallingWorker);
 
   RefPtr<ServiceWorkerManager> swm = ServiceWorkerManager::GetInstance();
 
   // "If installFailed is true"
   if (NS_WARN_IF(!aInstallEventSuccess)) {
-    mRegistration->mInstallingWorker->UpdateState(ServiceWorkerState::Redundant);
-    mRegistration->mInstallingWorker = nullptr;
-    swm->InvalidateServiceWorkerRegistrationWorker(mRegistration,
-                                                   WhichServiceWorker::INSTALLING_WORKER);
-    swm->MaybeRemoveRegistration(mRegistration);
+    // The installing worker is cleaned up by FailUpdateJob().
     FailUpdateJob(NS_ERROR_DOM_ABORT_ERR);
     return;
   }
 
   // "If registration's waiting worker is not null"
   if (mRegistration->mWaitingWorker) {
     mRegistration->mWaitingWorker->WorkerPrivate()->TerminateWorker();
     mRegistration->mWaitingWorker->UpdateState(ServiceWorkerState::Redundant);
-
-    nsresult rv =
-      serviceWorkerScriptCache::PurgeCache(mRegistration->mPrincipal,
-                                           mRegistration->mWaitingWorker->CacheName());
-    if (NS_FAILED(rv)) {
-      NS_WARNING("Failed to purge the old waiting cache.");
-    }
+    serviceWorkerScriptCache::PurgeCache(mRegistration->mPrincipal,
+                                         mRegistration->mWaitingWorker->CacheName());
   }
 
   mRegistration->mWaitingWorker = mRegistration->mInstallingWorker.forget();
   mRegistration->mWaitingWorker->UpdateState(ServiceWorkerState::Installed);
   mRegistration->NotifyListenersOnChange();
   swm->StoreRegistration(mPrincipal, mRegistration);
   swm->InvalidateServiceWorkerRegistrationWorker(mRegistration,
                                                  WhichServiceWorker::INSTALLING_WORKER |
