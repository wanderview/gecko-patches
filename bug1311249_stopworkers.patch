# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  7452437b3ab571b1d60aed4e973d82a1471f72b2
Bug 1311249 Aggressively stop workers in fetch mochitests to avoid shutdown races. r=asuth

diff --git a/dom/tests/mochitest/fetch/fetch_test_framework.js b/dom/tests/mochitest/fetch/fetch_test_framework.js
--- a/dom/tests/mochitest/fetch/fetch_test_framework.js
+++ b/dom/tests/mochitest/fetch/fetch_test_framework.js
@@ -25,16 +25,17 @@ function testScript(script) {
   function workerTest() {
     return new Promise(function(resolve, reject) {
       var worker = new Worker("worker_wrapper.js");
       worker.onmessage = function(event) {
         if (event.data.context != "Worker") {
           return;
         }
         if (event.data.type == 'finish') {
+          worker.terminate();
           resolve();
         } else if (event.data.type == 'status') {
           ok(event.data.status, event.data.context + ": " + event.data.msg);
         }
       }
       worker.onerror = function(event) {
         reject("Worker error: " + event.message);
       };
@@ -46,16 +47,17 @@ function testScript(script) {
   function nestedWorkerTest() {
     return new Promise(function(resolve, reject) {
       var worker = new Worker("nested_worker_wrapper.js");
       worker.onmessage = function(event) {
         if (event.data.context != "NestedWorker") {
           return;
         }
         if (event.data.type == 'finish') {
+          worker.terminate();
           resolve();
         } else if (event.data.type == 'status') {
           ok(event.data.status, event.data.context + ": " + event.data.msg);
         }
       }
       worker.onerror = function(event) {
         reject("Nested Worker error: " + event.message);
       };
diff --git a/dom/tests/mochitest/fetch/nested_worker_wrapper.js b/dom/tests/mochitest/fetch/nested_worker_wrapper.js
--- a/dom/tests/mochitest/fetch/nested_worker_wrapper.js
+++ b/dom/tests/mochitest/fetch/nested_worker_wrapper.js
@@ -2,16 +2,19 @@
 var worker;
 
 addEventListener('message', function nestedWorkerWrapperOnMessage(evt) {
   removeEventListener('message', nestedWorkerWrapperOnMessage);
 
   worker = new Worker('worker_wrapper.js');
 
   worker.addEventListener('message', function(evt) {
+    if (evt.data.type === 'finish') {
+      worker.terminate();
+    }
     self.postMessage({
       context: 'NestedWorker',
       type: evt.data.type,
       status: evt.data.status,
       msg: evt.data.msg,
     });
   });
 
