# HG changeset patch
# Parent 88b83291b20e24a26bbc99eaf65c0db09a9e529a
# User Ben Kelly <ben@wanderview.com>
Bug 940273 P4 interdiff 046 fix code issues hidden by unified builds


diff --git a/dom/cache/CacheChild.cpp b/dom/cache/CacheChild.cpp
--- a/dom/cache/CacheChild.cpp
+++ b/dom/cache/CacheChild.cpp
@@ -1,16 +1,17 @@
 /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ts=8 sts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "mozilla/dom/cache/CacheChild.h"
 
+#include "mozilla/unused.h"
 #include "mozilla/dom/cache/ActorUtils.h"
 #include "mozilla/dom/cache/Cache.h"
 
 namespace mozilla {
 namespace dom {
 namespace cache {
 
 // Declared in ActorUtils.h
diff --git a/dom/cache/CacheStorageChild.cpp b/dom/cache/CacheStorageChild.cpp
--- a/dom/cache/CacheStorageChild.cpp
+++ b/dom/cache/CacheStorageChild.cpp
@@ -1,16 +1,17 @@
 /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ts=8 sts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "mozilla/dom/cache/CacheStorageChild.h"
 
+#include "mozilla/unused.h"
 #include "mozilla/dom/cache/CacheStorage.h"
 
 namespace mozilla {
 namespace dom {
 namespace cache {
 
 CacheStorageChild::CacheStorageChild(CacheStorage* aListener)
   : mListener(aListener)
diff --git a/dom/cache/Manager.cpp b/dom/cache/Manager.cpp
--- a/dom/cache/Manager.cpp
+++ b/dom/cache/Manager.cpp
@@ -24,16 +24,17 @@
 #include "nsAutoPtr.h"
 #include "nsIInputStream.h"
 #include "nsID.h"
 #include "nsIFile.h"
 #include "nsIThread.h"
 
 namespace {
 
+using mozilla::unused;
 using mozilla::dom::cache::Action;
 using mozilla::dom::cache::DBSchema;
 using mozilla::dom::cache::FileUtils;
 using mozilla::dom::cache::QuotaInfo;
 using mozilla::dom::cache::SyncDBAction;
 
 // An Action that is executed when a Context is first created.  It ensures that
 // the directory and database are setup properly.  This lets other actions
diff --git a/dom/cache/ShutdownObserver.cpp b/dom/cache/ShutdownObserver.cpp
--- a/dom/cache/ShutdownObserver.cpp
+++ b/dom/cache/ShutdownObserver.cpp
@@ -18,17 +18,16 @@
 #include "nsThreadUtils.h"
 
 namespace {
 
 using mozilla::DebugOnly;
 using mozilla::StaticRefPtr;
 using mozilla::dom::cache::Manager;
 using mozilla::dom::cache::ManagerId;
-using mozilla::services::GetObserverService;
 
 // A singleton that tracks active Cache Managers and provides a main thread
 // shutdown mechanism.  When called, the singleton cancels the Managers and
 // waits for them to exit.  This is somewhat complex because shutdown
 // occurs on the main thread while Cache Managers work on background threads.
 //
 // The basic implementation is to hold an array of known ManagerIds on
 // the main thread.  New Manager objects register their ManagerId when
