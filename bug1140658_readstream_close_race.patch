# HG changeset patch
# Parent 33e8258187dd9aa48d73a33223c5eb3a0eec69db
# User Ben Kelly <ben@wanderview.com>
Bug 1140658 P7 Close underlying file stream in ReadStream before reporting closed.

diff --git a/dom/cache/ReadStream.cpp b/dom/cache/ReadStream.cpp
--- a/dom/cache/ReadStream.cpp
+++ b/dom/cache/ReadStream.cpp
@@ -473,65 +473,60 @@ ReadStream::Forget()
   if (NS_FAILED(rv)) {
     NS_WARNING("Failed to dispatch Cache ReadStream Forget() runnable.");
   }
 }
 
 NS_IMETHODIMP
 ReadStream::Close()
 {
+  nsresult rv = mStream->Close();
   NoteClosed();
-  return mStream->Close();
+  return rv;
 }
 
 NS_IMETHODIMP
 ReadStream::Available(uint64_t* aNumAvailableOut)
 {
   nsresult rv = mSnappyStream->Available(aNumAvailableOut);
 
   if (NS_FAILED(rv)) {
-    NoteClosed();
+    Close();
   }
 
   return rv;
 }
 
 NS_IMETHODIMP
 ReadStream::Read(char* aBuf, uint32_t aCount, uint32_t* aNumReadOut)
 {
   MOZ_ASSERT(aNumReadOut);
 
   nsresult rv = mSnappyStream->Read(aBuf, aCount, aNumReadOut);
 
-  // Don't auto-close when end of stream is hit.  We want to close
-  // this stream on a particular thread in the parent case.
-
   if ((NS_FAILED(rv) && rv != NS_BASE_STREAM_WOULD_BLOCK) ||
       *aNumReadOut == 0) {
-    NoteClosed();
+    Close();
   }
 
   return rv;
 }
 
 NS_IMETHODIMP
 ReadStream::ReadSegments(nsWriteSegmentFun aWriter, void* aClosure,
                          uint32_t aCount, uint32_t* aNumReadOut)
 {
   MOZ_ASSERT(aNumReadOut);
 
   nsresult rv = mSnappyStream->ReadSegments(aWriter, aClosure, aCount,
                                             aNumReadOut);
 
-  // Don't auto-close when end of stream is hit.  We want to close
-  // this stream on a particular thread in the parent case.
-
   if ((NS_FAILED(rv) && rv != NS_BASE_STREAM_WOULD_BLOCK &&
                         rv != NS_ERROR_NOT_IMPLEMENTED) || *aNumReadOut == 0) {
-    NoteClosed();
+    Close();
   }
 
   return rv;
 }
 
 NS_IMETHODIMP
 ReadStream::IsNonBlocking(bool* aNonBlockingOut)
 {
