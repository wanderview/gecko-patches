# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  81fa73da607a7067893f849f8b5fbdc852f3e12d
Bug 1465670 P5 Fix test_serviceworker_interfaces.html to expect spec importScript behavior. r=asuth

diff --git a/dom/serviceworkers/test/serviceworker_wrapper.js b/dom/serviceworkers/test/serviceworker_wrapper.js
--- a/dom/serviceworkers/test/serviceworker_wrapper.js
+++ b/dom/serviceworkers/test/serviceworker_wrapper.js
@@ -78,24 +78,36 @@ function workerTestGetStorageManager(cb)
     removeEventListener('message', workerTestGetStorageManagerCB);
     cb(e.data.result);
   });
   client.postMessage({
     type: 'getStorageManager'
   });
 }
 
+var completeInstall;
+
 addEventListener('message', function workerWrapperOnMessage(e) {
   removeEventListener('message', workerWrapperOnMessage);
   var data = e.data;
-  self.clients.matchAll().then(function(clients) {
-    client = clients[0];
+  self.clients.matchAll({ includeUncontrolled: true }).then(function(clients) {
+    for (var i = 0; i < clients.length; ++i) {
+      if (clients[i].url.includes("message_receiver.html")) {
+        client = clients[i];
+        break;
+      }
+    }
     try {
       importScripts(data.script);
     } catch(e) {
       client.postMessage({
         type: 'status',
         status: false,
         msg: 'worker failed to import ' + data.script + "; error: " + e.message
       });
     }
+    completeInstall();
   });
 });
+
+addEventListener('install', e => {
+  e.waitUntil(new Promise(resolve => completeInstall = resolve));
+});
diff --git a/dom/serviceworkers/test/test_serviceworker_interfaces.html b/dom/serviceworkers/test/test_serviceworker_interfaces.html
--- a/dom/serviceworkers/test/test_serviceworker_interfaces.html
+++ b/dom/serviceworkers/test/test_serviceworker_interfaces.html
@@ -7,20 +7,23 @@
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
   <script type="text/javascript" src="../worker_driver.js"></script>
 </head>
 <body>
 <script class="testbody" type="text/javascript">
 
   function setupSW(registration) {
-    var worker = registration.waiting ||
+    var iframe;
+    var worker = registration.installing ||
+                 registration.waiting ||
                  registration.active;
     window.onmessage = function(event) {
       if (event.data.type == 'finish') {
+        iframe.remove();
         registration.unregister().then(function(success) {
           ok(success, "The service worker should be unregistered successfully");
 
           SimpleTest.finish();
         }, function(e) {
           dump("Unregistering the SW failed with " + e + "\n");
           SimpleTest.finish();
         });
@@ -58,27 +61,27 @@
       }
     }
 
     worker.onerror = function(event) {
       ok(false, 'Worker had an error: ' + event.data);
       SimpleTest.finish();
     };
 
-    var iframe = document.createElement("iframe");
+    iframe = document.createElement("iframe");
     iframe.src = "message_receiver.html";
     iframe.onload = function() {
       worker.postMessage({ script: "test_serviceworker_interfaces.js" });
     };
     document.body.appendChild(iframe);
   }
 
   function runTest() {
-    navigator.serviceWorker.ready.then(setupSW);
-    navigator.serviceWorker.register("serviceworker_wrapper.js", {scope: "."});
+    navigator.serviceWorker.register("serviceworker_wrapper.js", {scope: "."})
+      .then(setupSW);
   }
 
   SimpleTest.waitForExplicitFinish();
   onload = function() {
     // The handling of "dom.caches.enabled" here is a bit complicated.  What we
     // want to happen is that Cache is always enabled in service workers.  So
     // if service workers are disabled by default we want to force on both
     // service workers and "dom.caches.enabled".  But if service workers are
