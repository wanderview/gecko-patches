# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  559123dd66e83c98e72c99aa45afe110941804d7
Bug 1321878 P2 Add a wpt test to verify Performance timing API accounts for service worker time. r=asuth

diff --git a/testing/web-platform/tests/service-workers/service-worker/performance-timeline.https.html b/testing/web-platform/tests/service-workers/service-worker/performance-timeline.https.html
--- a/testing/web-platform/tests/service-workers/service-worker/performance-timeline.https.html
+++ b/testing/web-platform/tests/service-workers/service-worker/performance-timeline.https.html
@@ -3,9 +3,41 @@
 <script src="/resources/testharnessreport.js"></script>
 <script src="resources/test-helpers.sub.js"></script>
 <script>
 
 service_worker_test(
     'resources/performance-timeline-worker.js',
     'Test Performance Timeline API in Service Worker');
 
+promise_test(t => {
+  let script = 'resources/empty-but-slow-worker.js';
+  let scope = 'resources/dummy.txt?slow-sw-timing';
+  let url = new URL(scope, window.location).href;
+  let slowURL = url + '&slow';
+  let frame;
+  return service_worker_unregister_and_register(t, script, scope)
+    .then(reg => wait_for_state(t, reg.installing, 'activated'))
+    .then(_ => with_iframe(scope))
+    .then(f => {
+      frame = f;
+      return Promise.all([
+        frame.contentWindow.fetch(url).then(r => r && r,text()),
+        frame.contentWindow.fetch(slowURL).then(r => r && r,text())
+      ]);
+    })
+    .then(_ => {
+      function elapsed(u) {
+        let entry = frame.contentWindow.performance.getEntriesByName(u);
+        //let entry = performance.getEntriesByName(u);
+        dump(`### ### entry ${JSON.stringify(entry)} for ${u}\n`);
+        return entry[0] ? entry[0].duration : undefined;
+      }
+      let urlTime = elapsed(url);
+      let slowURLTime = elapsed(slowURL);
+      dump(`### ### url:${urlTime} slowURLTime:${slowURLTime}\n`);
+      assert_true(slowURLTime >= urlTime + 1000);
+      frame.remove();
+      return service_worker_unregister_and_done(t, scope);
+    })
+}, 'empty service worker fetch event included in performance timings');
+
 </script>
diff --git a/testing/web-platform/tests/service-workers/service-worker/resources/empty-but-slow-worker.js b/testing/web-platform/tests/service-workers/service-worker/resources/empty-but-slow-worker.js
new file mode 100644
--- /dev/null
+++ b/testing/web-platform/tests/service-workers/service-worker/resources/empty-but-slow-worker.js
@@ -0,0 +1,9 @@
+addEventListener('fetch', evt => {
+  dump(`### ### fetch ${evt.request.url}\n`);
+  if (evt.request.url.endsWith('slow')) {
+    let start = Date.now();
+    //while(Date.now() - start < 2000);
+  }
+
+  //return evt.responseWith(new Response('Hello world'));
+});
