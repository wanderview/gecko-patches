# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  024ae84917f88328c7267bbabf9a56847482c0de

diff --git a/dom/security/test/cors/file_CrossSiteXHR_server.sjs b/dom/security/test/cors/file_CrossSiteXHR_server.sjs
--- a/dom/security/test/cors/file_CrossSiteXHR_server.sjs
+++ b/dom/security/test/cors/file_CrossSiteXHR_server.sjs
@@ -63,40 +63,16 @@ function handleRequest(request, response
 
   if ("origin" in query && request.getHeader("Origin") != query.origin) {
     sendHttp500(response,
       "Origin had wrong value. Expected " + query.origin + " got " +
       request.getHeader("Origin"));
     return;
   }
 
-  if ("cookie" in query) {
-    cookies = {};
-    request.getHeader("Cookie").split(/ *; */).forEach(function (val) {
-      var [name, value] = val.split('=');
-      cookies[name] = unescape(value);
-    });
-    
-    query.cookie.split(",").forEach(function (val) {
-      var [name, value] = val.split('=');
-      if (cookies[name] != value) {
-        sendHttp500(response,
-          "Cookie " + name  + " had wrong value. Expected " + value +
-          " got " + cookies[name]);
-        return;
-      }
-    });
-  }
-
-  if ("noCookie" in query && request.hasHeader("Cookie")) {
-    sendHttp500(response,
-      "Got cookies when didn't expect to: " + request.getHeader("Cookie"));
-    return;
-  }
-
   // Send response
 
   if (query.hop) {
      query.hop = parseInt(query.hop, 10);
      hops = eval(query.hops);
      query.allowOrigin = hops[query.hop-1].allowOrigin;
      query.allowHeaders = hops[query.hop-1].allowHeaders;
   }
@@ -109,19 +85,16 @@ function handleRequest(request, response
   }
   
   if (query.allowOrigin && (!isPreflight || !query.noAllowPreflight))
     response.setHeader("Access-Control-Allow-Origin", query.allowOrigin);
 
   if (query.allowCred)
     response.setHeader("Access-Control-Allow-Credentials", "true");
 
-  if (query.setCookie)
-    response.setHeader("Set-Cookie", query.setCookie + "; path=/");
-
   if (isPreflight) {
     if (query.allowHeaders)
       response.setHeader("Access-Control-Allow-Headers", query.allowHeaders);
 
     if (query.allowMethods)
       response.setHeader("Access-Control-Allow-Methods", query.allowMethods);
   }
   else {
@@ -141,16 +114,44 @@ function handleRequest(request, response
              "/tests/dom/security/test/cors/file_CrossSiteXHR_server.sjs?" +
              "hop=" + (query.hop + 1) + "&hops=" + query.hops;
     response.setStatusLine(null, 307, "redirect");
     response.setHeader("Location", newURL);
 
     return;
   }
 
+  // only perform cookie operations on final URL in redirect chain
+  if ("cookie" in query) {
+    cookies = {};
+    request.getHeader("Cookie").split(/ *; */).forEach(function (val) {
+      var [name, value] = val.split('=');
+      cookies[name] = unescape(value);
+    });
+    
+    query.cookie.split(",").forEach(function (val) {
+      var [name, value] = val.split('=');
+      if (cookies[name] != value) {
+        sendHttp500(response,
+          "Cookie " + name  + " had wrong value. Expected " + value +
+          " got " + cookies[name]);
+        return;
+      }
+    });
+  }
+
+  if ("noCookie" in query && request.hasHeader("Cookie")) {
+    sendHttp500(response,
+      "Got cookies when didn't expect to: " + request.getHeader("Cookie"));
+    return;
+  }
+
+  if (query.setCookie)
+    response.setHeader("Set-Cookie", query.setCookie + "; path=/");
+
   // Send response body
   if (!isPreflight && request.method != "HEAD") {
     response.setHeader("Content-Type", "application/xml", false);
     response.write("<res>hello pass</res>\n");
   }
   if (isPreflight && "preflightBody" in query) {
     response.setHeader("Content-Type", "text/plain", false);
     response.write(query.preflightBody);
