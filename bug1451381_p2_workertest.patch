# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  ff9741b3154f8d26ae9e4d9043409df3188783e9
Bug 1451381 P2 Test Worker API for event listener leaks. r=baku

diff --git a/dom/workers/test/mochitest.ini b/dom/workers/test/mochitest.ini
--- a/dom/workers/test/mochitest.ini
+++ b/dom/workers/test/mochitest.ini
@@ -193,8 +193,9 @@ scheme=https
 [test_navigator_workers_hardwareConcurrency.html]
 [test_bug1278777.html]
 [test_setTimeoutWith0.html]
 [test_bug1301094.html]
 [test_subworkers_suspended.html]
 skip-if = toolkit == 'android' #bug 1366501
 [test_bug1317725.html]
 [test_sharedworker_event_listener_leaks.html]
+[test_worker_event_listener_leaks.html]
diff --git a/dom/workers/test/test_worker_event_listener_leaks.html b/dom/workers/test/test_worker_event_listener_leaks.html
new file mode 100644
--- /dev/null
+++ b/dom/workers/test/test_worker_event_listener_leaks.html
@@ -0,0 +1,52 @@
+<!--
+  Any copyright is dedicated to the Public Domain.
+  http://creativecommons.org/publicdomain/zero/1.0/
+-->
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Bug 1450358 - Test Worker event listener leak conditions</title>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="/tests/dom/events/test/event_leak_utils.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+</head>
+<body>
+<script class="testbody" type="text/javascript">
+// Manipulate Worker objects in the frame's context.
+// Its important here that we create a listener callback from
+// the DOM objects back to the frame's global in order to
+// exercise the leak condition.
+async function useWorker(contentWindow) {
+  contentWindow.messageCount = 0;
+
+  let w = new contentWindow.Worker("data:application/javascript,self.postMessage({})");
+  w.onerror = _ => {
+    contentWindow.errorCount += 1;
+  };
+  await new Promise(resolve => {
+    w.onmessage = e => {
+      contentWindow.messageCount += 1;
+      resolve();
+    };
+  });
+
+  is(contentWindow.messageCount, 1, "message should be received");
+}
+
+async function runTest() {
+  try {
+    await checkForEventListenerLeaks("Worker", useWorker);
+  } catch (e) {
+    ok(false, e);
+  } finally {
+    SimpleTest.finish();
+  }
+}
+
+SimpleTest.waitForExplicitFinish();
+addEventListener("load", runTest, { once: true });
+</script>
+</pre>
+</body>
+</html>
+
