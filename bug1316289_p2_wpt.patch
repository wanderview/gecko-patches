# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  02ba0c1c7e4769a4a1842839ef564cc010b4972d
Bug 1316289 P2 Add wpt test to verify timers are restored after being loaded from bfcache. r=smaug

diff --git a/testing/web-platform/meta/MANIFEST.json b/testing/web-platform/meta/MANIFEST.json
--- a/testing/web-platform/meta/MANIFEST.json
+++ b/testing/web-platform/meta/MANIFEST.json
@@ -38612,16 +38612,22 @@
         ],
         "WebCryptoAPI/generateKey/successes_RSASSA-PKCS1-v1_5.worker.js": [
           {
             "path": "WebCryptoAPI/generateKey/successes_RSASSA-PKCS1-v1_5.worker.js",
             "timeout": "long",
             "url": "/WebCryptoAPI/generateKey/successes_RSASSA-PKCS1-v1_5.worker"
           }
         ],
+        "html/browsers/browsing-the-web/history-traversal/persisted-user-state-restoration/resume-timer-on-history-back.html": [
+          {
+            "path": "html/browsers/browsing-the-web/history-traversal/persisted-user-state-restoration/resume-timer-on-history-back.html",
+            "url": "/html/browsers/browsing-the-web/history-traversal/persisted-user-state-restoration/resume-timer-on-history-back.html"
+          }
+        ],
         "html/browsers/the-window-object/window-open-noopener.html": [
           {
             "path": "html/browsers/the-window-object/window-open-noopener.html",
             "url": "/html/browsers/the-window-object/window-open-noopener.html"
           }
         ],
         "html/semantics/links/links-created-by-a-and-area-elements/htmlanchorelement_noopener.html": [
           {
diff --git a/testing/web-platform/tests/html/browsers/browsing-the-web/history-traversal/persisted-user-state-restoration/resume-timer-on-history-back.html b/testing/web-platform/tests/html/browsers/browsing-the-web/history-traversal/persisted-user-state-restoration/resume-timer-on-history-back.html
new file mode 100644
--- /dev/null
+++ b/testing/web-platform/tests/html/browsers/browsing-the-web/history-traversal/persisted-user-state-restoration/resume-timer-on-history-back.html
@@ -0,0 +1,73 @@
+<!doctype html>
+<title>Verify history.back() on a persisted page resumes timers</title>
+<script src="/resources/testharness.js"></script>
+<script src="/resources/testharnessreport.js"></script>
+<script type="text/javascript">
+
+function with_window(url) {
+  return new Promise((resolve, reject) => {
+    let w = window.open(url);
+    w.addEventListener('load', function onLoad(e) {
+      w.removeEventListener('load', onLoad);
+      resolve(w)
+    });
+    w.onerror = e => reject(e);
+  });
+}
+
+function delay(win, delay) {
+  return new Promise(resolve => {
+    win.setTimeout(_ => {
+      resolve(win);
+    }, delay);
+  });
+}
+
+function navigate(win, url) {
+  return new Promise((resolve, reject) => {
+    win.onerror = e => reject(e);
+    dump('### ### pre ' + win.location + '\n');
+    dump('### ### set to ' + url + '\n');
+    win.location.href = url;
+    dump('### ### post ' + win.location + '\n');
+    win.addEventListener('pagehide', e => {
+      dump('### ### navigate load event\n');
+      resolve(win);
+    });
+  });
+}
+
+function go_back(win) {
+  return new Promise(resolve => {
+    win.onpagehide = e => resolve(win);
+    win.history.back();
+  });
+}
+
+promise_test(t => {
+  dump('### ### test start\n');
+  return with_window('foo.html').then(win => {
+    dump('### ### window load done\n');
+    let delayFired = false;
+    let d = delay(win, 1000);
+    d.then(_ => {
+      dump('### ### first delay done\n');
+      delayFired = true;
+    });
+
+    dump('### ### start navigate\n');
+    return navigate(win, 'bar.html').then(_ => {
+      dump('### ### navigate done\n');
+      return delay(window, 1000);
+    }).then(_ => {
+      dump('### ### outer delay done\n');
+      assert_false(delayFired);
+      return go_back(win);
+    }).then(d).then(_ => {
+      dump('### ### go back done\n');
+      win.close();
+    });
+  });
+}, 'history.back() to top level persisted page resumes timers');
+
+</script>
