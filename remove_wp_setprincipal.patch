# HG changeset patch
# Parent d3fddfc0c9f34ecb7f3e96e0f7369b92188c818d
# User Ben Kelly <ben@wanderview.com>
Do not call QuotaManager::GetInfoFromPrincipal in WorkerPrivate::SetPrincipal.

diff --git a/dom/workers/WorkerPrivate.cpp b/dom/workers/WorkerPrivate.cpp
--- a/dom/workers/WorkerPrivate.cpp
+++ b/dom/workers/WorkerPrivate.cpp
@@ -49,17 +49,16 @@
 #include "mozilla/dom/ImageDataBinding.h"
 #include "mozilla/dom/MessageEvent.h"
 #include "mozilla/dom/MessageEventBinding.h"
 #include "mozilla/dom/MessagePortList.h"
 #include "mozilla/dom/Promise.h"
 #include "mozilla/dom/ScriptSettings.h"
 #include "mozilla/dom/StructuredClone.h"
 #include "mozilla/dom/WorkerBinding.h"
-#include "mozilla/dom/quota/QuotaManager.h"
 #include "mozilla/Preferences.h"
 #include "nsAlgorithm.h"
 #include "nsContentUtils.h"
 #include "nsError.h"
 #include "nsDOMJSUtils.h"
 #include "nsHostObjectProtocolHandler.h"
 #include "nsJSEnvironment.h"
 #include "nsJSUtils.h"
@@ -100,18 +99,16 @@
 #ifdef WORKER_LOGGING
 #define LOG(_args) do { printf _args ; fflush(stdout); } while (0)
 #else
 #define LOG(_args) do { } while (0)
 #endif
 
 using namespace mozilla;
 using namespace mozilla::dom;
-using mozilla::dom::quota::QuotaManager;
-using mozilla::dom::quota::PERSISTENCE_TYPE_PERSISTENT;
 USING_WORKERS_NAMESPACE
 
 MOZ_DEFINE_MALLOC_SIZE_OF(JsWorkerMallocSizeOf)
 
 #ifdef DEBUG
 
 BEGIN_WORKERS_NAMESPACE
 
@@ -3565,27 +3562,16 @@ WorkerPrivateParent<Derived>::SetPrincip
 
   mLoadInfo.mPrincipal = aPrincipal;
   mLoadInfo.mPrincipalIsSystem = nsContentUtils::IsSystemPrincipal(aPrincipal);
   uint16_t appStatus = aPrincipal->GetAppStatus();
   mLoadInfo.mIsInPrivilegedApp =
     (appStatus == nsIPrincipal::APP_STATUS_CERTIFIED ||
      appStatus == nsIPrincipal::APP_STATUS_PRIVILEGED);
   mLoadInfo.mIsInCertifiedApp = (appStatus == nsIPrincipal::APP_STATUS_CERTIFIED);
-
-  nsAutoCString origin;
-  nsresult rv = QuotaManager::GetInfoFromPrincipal(aPrincipal,
-                                                   PERSISTENCE_TYPE_PERSISTENT,
-                                                   &origin,
-                                                   &mLoadInfo.mQuotaGroup,
-                                                   &mLoadInfo.mIsApp,
-                                                   &mLoadInfo.mHasUnlimStoragePerm);
-  if (NS_FAILED(rv)) {
-    MOZ_CRASH("Failed to get quota info from principal.");
-  }
 }
 
 template <class Derived>
 JSContext*
 WorkerPrivateParent<Derived>::ParentJSContext() const
 {
   AssertIsOnParentThread();
 
diff --git a/dom/workers/WorkerPrivate.h b/dom/workers/WorkerPrivate.h
--- a/dom/workers/WorkerPrivate.h
+++ b/dom/workers/WorkerPrivate.h
@@ -153,32 +153,28 @@ public:
     nsCOMPtr<nsIURI> mResolvedScriptURI;
     nsCOMPtr<nsIPrincipal> mPrincipal;
     nsCOMPtr<nsIScriptContext> mScriptContext;
     nsCOMPtr<nsPIDOMWindow> mWindow;
     nsCOMPtr<nsIContentSecurityPolicy> mCSP;
     nsCOMPtr<nsIChannel> mChannel;
 
     nsCString mDomain;
-    nsCString mQuotaGroup;
 
     bool mEvalAllowed;
     bool mReportCSPViolations;
     bool mXHRParamsAllowed;
     bool mPrincipalIsSystem;
     bool mIsInPrivilegedApp;
     bool mIsInCertifiedApp;
-    bool mIsApp;
-    bool mHasUnlimStoragePerm;
 
     LoadInfo()
     : mEvalAllowed(false), mReportCSPViolations(false),
       mXHRParamsAllowed(false), mPrincipalIsSystem(false),
-      mIsInPrivilegedApp(false), mIsInCertifiedApp(false),
-      mIsApp(false), mHasUnlimStoragePerm(false)
+      mIsInPrivilegedApp(false), mIsInCertifiedApp(false)
     { }
 
     void
     StealFrom(LoadInfo& aOther)
     {
       MOZ_ASSERT(!mBaseURI);
       aOther.mBaseURI.swap(mBaseURI);
 
@@ -514,22 +510,16 @@ public:
   }
 
   const nsCString&
   Domain() const
   {
     return mLoadInfo.mDomain;
   }
 
-  const nsCString&
-  QuotaGroup() const
-  {
-    return mLoadInfo.mQuotaGroup;
-  }
-
   nsIURI*
   GetBaseURI() const
   {
     AssertIsOnMainThread();
     return mLoadInfo.mBaseURI;
   }
 
   void
@@ -584,28 +574,16 @@ public:
   }
 
   bool
   IsInCertifiedApp() const
   {
     return mLoadInfo.mIsInCertifiedApp;
   }
 
-  bool
-  IsApp() const
-  {
-    return mLoadInfo.mIsApp;
-  }
-
-  bool
-  HasUnlimStoragePerm() const
-  {
-    return mLoadInfo.mHasUnlimStoragePerm;
-  }
-
   already_AddRefed<nsIChannel>
   ForgetWorkerChannel()
   {
     AssertIsOnMainThread();
     return mLoadInfo.mChannel.forget();
   }
 
   nsIDocument*
diff --git a/dom/workers/WorkerScope.cpp b/dom/workers/WorkerScope.cpp
--- a/dom/workers/WorkerScope.cpp
+++ b/dom/workers/WorkerScope.cpp
@@ -116,19 +116,17 @@ WorkerGlobalScope::GetConsole()
 
 already_AddRefed<CacheStorage>
 WorkerGlobalScope::Caches()
 {
   if (!mCacheStorage) {
     MOZ_ASSERT(mWorkerPrivate);
     NS_ConvertUTF16toUTF8 origin(mWorkerPrivate->GetLocationInfo().mOrigin);
     mCacheStorage = new CacheStorage(cache::DEFAULT_NAMESPACE, ToSupports(this),
-                                     this, origin, mWorkerPrivate->QuotaGroup(),
-                                     mWorkerPrivate->IsApp(),
-                                     mWorkerPrivate->HasUnlimStoragePerm());
+                                     this, origin, origin, false, false);
   }
 
   nsRefPtr<CacheStorage> ref = mCacheStorage;
   return ref.forget();
 }
 
 already_AddRefed<WorkerLocation>
 WorkerGlobalScope::Location()
