# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  02b05b4e5f82983a677d39a950491113ec874079
Bug 1247580 P1 Allow old nsIX509Cert serialized objects to be read off disk. r=bz

diff --git a/security/manager/ssl/nsIX509Cert.idl b/security/manager/ssl/nsIX509Cert.idl
--- a/security/manager/ssl/nsIX509Cert.idl
+++ b/security/manager/ssl/nsIX509Cert.idl
@@ -14,16 +14,21 @@ interface nsICertVerificationListener;
 %{ C++
  /* forward declaration */
  typedef struct CERTCertificateStr CERTCertificate;
 %}
 [ptr] native CERTCertificatePtr(CERTCertificate);
 
 /**
  * This represents a X.509 certificate.
+ *
+ * NOTE: Service workers persist x.509 certs in object form on disk.  If you
+ *       change this uuid you probably need a hack in nsBinaryInputStream to
+ *       read the old uuid.  If you change the format of the object
+ *       serialization then more complex changes will be needed.
  */
 [scriptable, uuid(bdc3979a-5422-4cd5-8589-696b6e96ea83)]
 interface nsIX509Cert : nsISupports {
 
   /**
    *  A nickname for the certificate.
    */
   readonly attribute AString nickname;
diff --git a/xpcom/io/nsBinaryStream.cpp b/xpcom/io/nsBinaryStream.cpp
--- a/xpcom/io/nsBinaryStream.cpp
+++ b/xpcom/io/nsBinaryStream.cpp
@@ -28,16 +28,17 @@
 #include "mozilla/UniquePtr.h"
 
 #include "nsCRT.h"
 #include "nsString.h"
 #include "nsISerializable.h"
 #include "nsIClassInfo.h"
 #include "nsComponentManagerUtils.h"
 #include "nsIURI.h" // for NS_IURI_IID
+#include "nsIX509Cert.h" // for NS_IX509CERT_IID
 
 #include "jsfriendapi.h"
 
 using mozilla::MakeUnique;
 using mozilla::PodCopy;
 using mozilla::UniquePtr;
 
 NS_IMPL_ISUPPORTS(nsBinaryOutputStream,
@@ -929,16 +930,33 @@ nsBinaryInputStream::ReadObject(bool aIs
       iid.Equals(oldURIiid2) ||
       iid.Equals(oldURIiid3) ||
       iid.Equals(oldURIiid4)) {
     const nsIID newURIiid = NS_IURI_IID;
     iid = newURIiid;
   }
   // END HACK
 
+  // HACK:  Service workers store resource security info on disk in the dom
+  //        Cache API.  When the uuid of the nsIX509Cert interface changes
+  //        these serialized objects cannot be loaded any more.  This hack
+  //        works around this issue.
+
+  // hackaround for bug 1247580 (FF45 to FF46 transition)
+  static const nsIID oldCertIID = {
+    0xf8ed8364, 0xced9, 0x4c6e,
+    { 0x86, 0xba, 0x48, 0xaf, 0x53, 0xc3, 0x93, 0xe6 }
+  };
+
+  if (iid.Equals(oldCertIID)) {
+    const nsIID newCertIID = NS_IX509CERT_IID;
+    iid = newCertIID;
+  }
+  // END HACK
+
   nsCOMPtr<nsISupports> object = do_CreateInstance(cid, &rv);
   if (NS_WARN_IF(NS_FAILED(rv))) {
     return rv;
   }
 
   nsCOMPtr<nsISerializable> serializable = do_QueryInterface(object);
   if (NS_WARN_IF(!serializable)) {
     return NS_ERROR_UNEXPECTED;
