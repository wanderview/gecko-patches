# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  772c551d8d4f14dabdd0428112a9addcdc69a279

diff --git a/dom/serviceworkers/ServiceWorkerRegistrationProxy.cpp b/dom/serviceworkers/ServiceWorkerRegistrationProxy.cpp
--- a/dom/serviceworkers/ServiceWorkerRegistrationProxy.cpp
+++ b/dom/serviceworkers/ServiceWorkerRegistrationProxy.cpp
@@ -28,26 +28,16 @@ ServiceWorkerRegistrationProxy::MaybeShu
   AssertIsOnBackgroundThread();
   if (!mActor) {
     return;
   }
   mActor->MaybeSendDelete();
 }
 
 void
-ServiceWorkerRegistrationProxy::UpdateFoundOnBGThread()
-{
-  AssertIsOnBackgroundThread();
-  if (!mActor) {
-    return;
-  }
-  Unused << mActor->SendUpdateFound();
-}
-
-void
 ServiceWorkerRegistrationProxy::UpdateStateOnBGThread(const ServiceWorkerRegistrationDescriptor& aDescriptor)
 {
   AssertIsOnBackgroundThread();
   if (!mActor) {
     return;
   }
   Unused << mActor->SendUpdateState(aDescriptor.ToIPC());
 }
@@ -97,27 +87,16 @@ ServiceWorkerRegistrationProxy::StopList
     return;
   }
 
   mReg->RemoveInstance(this);
   mReg = nullptr;
 }
 
 void
-ServiceWorkerRegistrationProxy::UpdateFound()
-{
-  AssertIsOnMainThread();
-
-  nsCOMPtr<nsIRunnable> r = NewRunnableMethod(
-    __func__, this, &ServiceWorkerRegistrationProxy::UpdateFoundOnBGThread);
-
-  MOZ_ALWAYS_SUCCEEDS(mEventTarget->Dispatch(r.forget(), NS_DISPATCH_NORMAL));
-}
-
-void
 ServiceWorkerRegistrationProxy::UpdateState(const ServiceWorkerRegistrationDescriptor& aDescriptor)
 {
   AssertIsOnMainThread();
 
   if (mDescriptor == aDescriptor) {
     return;
   }
   mDescriptor = aDescriptor;
diff --git a/dom/serviceworkers/ServiceWorkerRegistrationProxy.h b/dom/serviceworkers/ServiceWorkerRegistrationProxy.h
--- a/dom/serviceworkers/ServiceWorkerRegistrationProxy.h
+++ b/dom/serviceworkers/ServiceWorkerRegistrationProxy.h
@@ -33,36 +33,30 @@ class ServiceWorkerRegistrationProxy fin
 
   ~ServiceWorkerRegistrationProxy();
 
   // Background thread methods
   void
   MaybeShutdownOnBGThread();
 
   void
-  UpdateFoundOnBGThread();
-
-  void
   UpdateStateOnBGThread(const ServiceWorkerRegistrationDescriptor& aDescriptor);
 
   // Main thread methods
   void
   InitOnMainThread();
 
   void
   MaybeShutdownOnMainThread();
 
   void
   StopListeningOnMainThread();
 
   // ServiceWorkerRegistrationListener interface
   void
-  UpdateFound() override;
-
-  void
   UpdateState(const ServiceWorkerRegistrationDescriptor& aDescriptor) override;
 
   void
   RegistrationRemoved() override;
 
   void
   GetScope(nsAString& aScope) const override;
 
