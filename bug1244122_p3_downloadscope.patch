# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  470925b283f25b077c0650643647d8352c503e63
Bug 1244122 P3 Execute browser_download.js service worker in separate scope. r=ehsan

diff --git a/dom/workers/test/serviceworkers/browser.ini b/dom/workers/test/serviceworkers/browser.ini
--- a/dom/workers/test/serviceworkers/browser.ini
+++ b/dom/workers/test/serviceworkers/browser.ini
@@ -1,10 +1,10 @@
 [DEFAULT]
 support-files =
   browser_base_force_refresh.html
   browser_cached_force_refresh.html
-  download_window.html
-  download_worker.js
+  download/window.html
+  download/worker.js
   force_refresh_browser_worker.js
 
 [browser_force_refresh.js]
 [browser_download.js]
diff --git a/dom/workers/test/serviceworkers/browser_download.js b/dom/workers/test/serviceworkers/browser_download.js
--- a/dom/workers/test/serviceworkers/browser_download.js
+++ b/dom/workers/test/serviceworkers/browser_download.js
@@ -43,17 +43,17 @@ function test() {
 
   Services.ww.registerNotification(windowObserver);
 
   SpecialPowers.pushPrefEnv({'set': [['dom.serviceWorkers.enabled', true],
                                      ['dom.serviceWorkers.exemptFromPerDomainMax', true],
                                      ['dom.serviceWorkers.testing.enabled', true],
                                      ['dom.serviceWorkers.interception.enabled', true]]},
                             function() {
-    var url = gTestRoot + 'download_window.html';
+    var url = gTestRoot + 'download/window.html';
     var tab = gBrowser.addTab();
     gBrowser.selectedTab = tab;
 
     Downloads.getList(Downloads.ALL).then(function(downloadList) {
       var downloadListener;
 
       function downloadVerifier(aDownload) {
         if (aDownload.succeeded) {
diff --git a/dom/workers/test/serviceworkers/download_window.html b/dom/workers/test/serviceworkers/download/window.html
rename from dom/workers/test/serviceworkers/download_window.html
rename to dom/workers/test/serviceworkers/download/window.html
--- a/dom/workers/test/serviceworkers/download_window.html
+++ b/dom/workers/test/serviceworkers/download/window.html
@@ -19,17 +19,17 @@ function wait_until_controlled() {
         navigator.serviceWorker.removeEventListener('controllerchange', onController);
         return resolve();
       }
     });
   });
 }
 addEventListener('load', function(event) {
   var registration;
-  navigator.serviceWorker.register('download_worker.js').then(function(swr) {
+  navigator.serviceWorker.register('worker.js').then(function(swr) {
     registration = swr;
 
     // While the iframe below is a navigation, we still wait until we are
     // controlled here.  We want an active client to hold the service worker
     // alive since it calls unregister() on itself.
     return wait_until_controlled();
 
   }).then(function() {
diff --git a/dom/workers/test/serviceworkers/download_worker.js b/dom/workers/test/serviceworkers/download/worker.js
rename from dom/workers/test/serviceworkers/download_worker.js
rename to dom/workers/test/serviceworkers/download/worker.js
