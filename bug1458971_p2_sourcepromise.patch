# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  9294f67b3f3bd4a3dd898961148cecd8bfc1ce9c
Bug 1458971 P2 Make ClientSourceOpPromise hold the operation promise alive. r=baku

diff --git a/dom/clients/manager/ClientSourceOpChild.cpp b/dom/clients/manager/ClientSourceOpChild.cpp
--- a/dom/clients/manager/ClientSourceOpChild.cpp
+++ b/dom/clients/manager/ClientSourceOpChild.cpp
@@ -48,22 +48,27 @@ ClientSourceOpChild::DoSourceOp(Method a
   // The ClientSource methods are required to always return a promise.  If
   // they encounter an error they should just immediately resolve or reject
   // the promise as appropriate.
   MOZ_DIAGNOSTIC_ASSERT(promise);
 
   // Capture 'this' is safe here because we disconnect the promise
   // ActorDestroy() which ensures nethier lambda is called if the
   // actor is destroyed before the source operation completes.
+  //
+  // Also capture the promise to ensure it lives until we get a reaction
+  // or the actor starts shutting down and we disconnect our Thenable.
+  // If the ClientSource is doing something async it may throw away the
+  // promise on its side if the global is closed.
   promise->Then(target, __func__,
-    [this] (const mozilla::dom::ClientOpResult& aResult) {
+    [this, promise] (const mozilla::dom::ClientOpResult& aResult) {
       mPromiseRequestHolder.Complete();
       Unused << PClientSourceOpChild::Send__delete__(this, aResult);
     },
-    [this] (nsresult aRv) {
+    [this, promise] (nsresult aRv) {
       mPromiseRequestHolder.Complete();
       Unused << PClientSourceOpChild::Send__delete__(this, aRv);
     })->Track(mPromiseRequestHolder);
 }
 
 void
 ClientSourceOpChild::ActorDestroy(ActorDestroyReason aReason)
 {
