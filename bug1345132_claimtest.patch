# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  ab2b9ba2f386f5a2704a2247c2436dcd127dfc05
Nig 1345132 Fix races in test_claim.html mochitest. r=catalinb

diff --git a/dom/workers/test/serviceworkers/claim_worker_1.js b/dom/workers/test/serviceworkers/claim_worker_1.js
--- a/dom/workers/test/serviceworkers/claim_worker_1.js
+++ b/dom/workers/test/serviceworkers/claim_worker_1.js
@@ -5,24 +5,23 @@ onactivate = function(e) {
     match_count_after: -1,
     message: "claim_worker_1"
   };
 
   self.clients.matchAll().then(function(matched) {
     // should be 0
     result.match_count_before = matched.length;
   }).then(function() {
-    var claimPromise = self.clients.claim().then(function(ret) {
-      result.resolve_value = ret;
-    });
-
-    return claimPromise.then(self.clients.matchAll().then(function(matched) {
-      // should be 2
-      result.match_count_after = matched.length;
-      for (i = 0; i < matched.length; i++) {
-        matched[i].postMessage(result);
-      }
-      if (result.match_count_after !== 2) {
-        dump("ERROR: claim_worker_1 failed to capture clients.\n");
-      }
-    }));
+    return self.clients.claim();
+  }).then(function(ret) {
+    result.resolve_value = ret;
+    return self.clients.matchAll();
+  }).then(function(matched) {
+    // should be 2
+    result.match_count_after = matched.length;
+    for (i = 0; i < matched.length; i++) {
+      matched[i].postMessage(result);
+    }
+    if (result.match_count_after !== 2) {
+      dump("ERROR: claim_worker_1 failed to capture clients.\n");
+    }
   });
 }
diff --git a/dom/workers/test/serviceworkers/claim_worker_2.js b/dom/workers/test/serviceworkers/claim_worker_2.js
--- a/dom/workers/test/serviceworkers/claim_worker_2.js
+++ b/dom/workers/test/serviceworkers/claim_worker_2.js
@@ -5,26 +5,25 @@ onactivate = function(e) {
     match_count_after: -1,
     message: "claim_worker_2"
   };
 
   self.clients.matchAll().then(function(matched) {
     // should be 0
     result.match_count_before = matched.length;
   }).then(function() {
-    var claimPromise = self.clients.claim().then(function(ret) {
-      result.resolve_value = ret;
-    });
-
-    return claimPromise.then(self.clients.matchAll().then(function(matched) {
-      // should be 1
-      result.match_count_after = matched.length;
-      if (result.match_count_after === 1) {
-        matched[0].postMessage(result);
-      } else {
-        dump("ERROR: claim_worker_2 failed to capture clients.\n");
-        for (let i = 0; i < matched.length; ++i) {
-          dump('### ### matched[' + i + ']: ' + matched[i].url + '\n');
-        }
+    return clients.claim();
+  }).then(function(ret) {
+    result.resolve_value = ret;
+    return clients.matchAll();
+  }).then(function(matched) {
+    // should be 1
+    result.match_count_after = matched.length;
+    if (result.match_count_after === 1) {
+      matched[0].postMessage(result);
+    } else {
+      dump("ERROR: claim_worker_2 failed to capture clients.\n");
+      for (let i = 0; i < matched.length; ++i) {
+        dump('### ### matched[' + i + ']: ' + matched[i].url + '\n');
       }
-    }));
+    }
   });
 }
