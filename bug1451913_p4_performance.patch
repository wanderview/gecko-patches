# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  6f5f498bc6fa4522ead79f470363a7058ff6739c
Bug 1451913 P4 Don't manually create a new Performance object on document.open() since we are rebinding the old Performance to the new global. r=smaug

diff --git a/dom/base/nsGlobalWindowInner.cpp b/dom/base/nsGlobalWindowInner.cpp
--- a/dom/base/nsGlobalWindowInner.cpp
+++ b/dom/base/nsGlobalWindowInner.cpp
@@ -2475,36 +2475,28 @@ nsGlobalWindowInner::NoteCalledRegisterF
 
 void
 nsGlobalWindowInner::MigrateStateForDocumentOpen(nsGlobalWindowInner* aOldInner)
 {
   MOZ_DIAGNOSTIC_ASSERT(aOldInner);
   MOZ_DIAGNOSTIC_ASSERT(aOldInner != this);
   MOZ_DIAGNOSTIC_ASSERT(mDoc);
 
-  // Make a copy of the old window's performance object on document.open.
-  // Note that we have to force eager creation of it here, because we need
-  // to grab the current document channel and whatnot before that changes.
-  aOldInner->CreatePerformanceObjectIfNeeded();
-  if (aOldInner->mPerformance) {
-    mPerformance =
-      Performance::CreateForMainThread(this,
-                                       mDoc->NodePrincipal(),
-                                       aOldInner->mPerformance->GetDOMTiming(),
-                                       aOldInner->mPerformance->GetChannel());
-  }
-
   // Rebind DETH objects to the new global created by document.open().
   // XXX: Is this correct?  We should consider if the spec and our
   //      implementation should change to match other browsers by
   //      just reusing the current window.  (Bug 1449992)
   aOldInner->ForEachEventTargetObject(
     [&] (DOMEventTargetHelper* aDETH, bool* aDoneOut) {
       aDETH->BindToOwner(this->AsInner());
     });
+
+  // Move the old Performance object from the old window to the new window.
+  // The Performance object was also rebound in the DETH loop above.
+  mPerformance = aOldInner->mPerformance.forget();
 }
 
 void
 nsGlobalWindowInner::UpdateTopInnerWindow()
 {
   if (IsTopInnerWindow() || !mTopInnerWindow) {
     return;
   }
