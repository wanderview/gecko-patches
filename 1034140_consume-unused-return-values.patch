# HG changeset patch
# Parent 240a0b085725d132fa9616a78d0ceebe8255c1db
# User Chris Peterson <cpeterson@mozilla.com>
# Date 1404500407 25200

Bug 1034140 - Consume unused write() and read() return values. r?

diff --git a/media/libcubeb/src/cubeb_alsa.c b/media/libcubeb/src/cubeb_alsa.c
--- a/media/libcubeb/src/cubeb_alsa.c
+++ b/media/libcubeb/src/cubeb_alsa.c
@@ -215,17 +215,19 @@ rebuild(cubeb * ctx)
   }
 
   ctx->rebuild = 0;
 }
 
 static void
 poll_wake(cubeb * ctx)
 {
-  write(ctx->control_fd_write, "x", 1);
+  if (write(ctx->control_fd_write, "x", 1) < 0) {
+    /* ignore write error */
+  }
 }
 
 static void
 set_timeout(struct timeval * timeout, unsigned int ms)
 {
   gettimeofday(timeout, NULL);
   timeout->tv_sec += ms / 1000;
   timeout->tv_usec += (ms % 1000) * 1000;
@@ -367,17 +369,19 @@ alsa_run(cubeb * ctx)
   }
 
   pthread_mutex_unlock(&ctx->mutex);
   r = poll(ctx->fds, ctx->nfds, timeout);
   pthread_mutex_lock(&ctx->mutex);
 
   if (r > 0) {
     if (ctx->fds[0].revents & POLLIN) {
-      read(ctx->control_fd_read, &dummy, 1);
+      if (read(ctx->control_fd_read, &dummy, 1) < 0) {
+        /* ignore read error */
+      }
 
       if (ctx->shutdown) {
         pthread_mutex_unlock(&ctx->mutex);
         return -1;
       }
     }
 
     for (i = 0; i < CUBEB_STREAM_MAX; ++i) {
