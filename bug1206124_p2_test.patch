# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  77ab8871682421fcfe7f10c4f57f6003d648d958
Bug 1206124 P2 Test fetch() with credentials and redirects. r=nsm

diff --git a/dom/tests/mochitest/fetch/test_fetch_cors.js b/dom/tests/mochitest/fetch/test_fetch_cors.js
--- a/dom/tests/mochitest/fetch/test_fetch_cors.js
+++ b/dom/tests/mochitest/fetch/test_fetch_cors.js
@@ -1247,35 +1247,63 @@ function testRedirects() {
                       allowHeaders: "my-header",
                     },
                     { server: "http://mochi.test:8888",
                       allowOrigin: origin,
                       allowHeaders: "my-header",
                     },
                     ],
            },
+
+           // redirects with credentials
+           // TODO
+           { pass: 0,
+             method: "GET",
+             hops: [{ server: "http://mochi.test:8888",
+                    },
+                    { server: "http://mochi.test:8888",
+                    },
+                    { server: "http://example.com",
+                      allowOrigin: origin
+                    },
+                    ],
+             cookie: "a=2",
+             withCred: "same-origin",
+             allowCred: 1,
+           },
            ];
 
   var fetches = [];
   for (test of tests) {
     req = {
       url: test.hops[0].server + corsServerPath + "hop=1&hops=" +
            escape(test.hops.toSource()),
       method: test.method,
       headers: test.headers,
       body: test.body,
     };
 
+    if (test.allowCred)
+      req.url += "&allowCred";
+
+    if (test.setCookie)
+      req.url += "&setCookie=" + escape(test.setCookie);
+    if (test.cookie)
+      req.url += "&cookie=" + escape(test.cookie);
+    if (test.noCookie)
+      req.url += "&noCookie";
+
     if (test.pass) {
       if (test.body)
         req.url += "&body=" + escape(test.body);
     }
 
     var request = new Request(req.url, { method: req.method,
                                          headers: req.headers,
+                                         credentials: req.withCred,
                                          body: req.body });
     fetches.push((function(request, test) {
       return fetch(request).then(function(res) {
         ok(test.pass, "Expected test to pass for " + test.toSource());
         is(res.status, 200, "wrong status in test for " + test.toSource());
         is(res.statusText, "OK", "wrong status text for " + test.toSource());
         is((new URL(res.url)).host, (new URL(test.hops[test.hops.length-1].server)).host, "Response URL should be redirected URL");
         return res.text().then(function(v) {
