# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  57592d86991c16b527296a7e9953343e80660cf9
Bug 1273920 P4 Fix bugs in dom/push/test_serviceworker_lifetime.html test. r=kitcambridge

diff --git a/dom/push/test/lifetime_worker.js b/dom/push/test/lifetime_worker.js
--- a/dom/push/test/lifetime_worker.js
+++ b/dom/push/test/lifetime_worker.js
@@ -50,26 +50,30 @@ onmessage = function(event) {
   event.source.postMessage({type: "message", state: state});
   state = event.data;
   if (event.data === "release") {
     resolvePromise();
   }
 }
 
 onpush = function(event) {
+  var pushResolve;
+  event.waitUntil(new Promise(function(resolve) {
+    pushResolve = resolve;
+  }));
+
   // FIXME(catalinb): push message carry no data. So we assume the only
   // push message we get is "wait"
   clients.matchAll().then(function(client) {
     if (client.length == 0) {
       dump("ERROR: no clients to send the response to.\n");
     }
 
     client[0].postMessage({type: "push", state: state});
 
     state = "wait";
-    event.waitUntil(new Promise(function(res, rej) {
-      if (resolvePromiseCallback) {
-        dump("ERROR: service worker was already waiting on a promise.\n");
-      }
-      resolvePromiseCallback = res;
-    }));
+    if (resolvePromiseCallback) {
+      dump("ERROR: service worker was already waiting on a promise.\n");
+    } else {
+      resolvePromiseCallback = pushResolve;
+    }
   });
 }
diff --git a/dom/push/test/test_serviceworker_lifetime.html b/dom/push/test/test_serviceworker_lifetime.html
--- a/dom/push/test/test_serviceworker_lifetime.html
+++ b/dom/push/test/test_serviceworker_lifetime.html
@@ -252,17 +252,17 @@
         .then(closeIframe)
         .then(cancelShutdownObserver)
 
         // Test with push events and message events
         .then(createIframe)
         .then(setShutdownObserver(false))
         .then(checkStateAndUpdate(pushEvent, "from_scope", "wait"))
         .then(setShutdownObserver(true))
-        .then(checkStateAndUpdate(messageEventIframe, "wait", "update"))
+        .then(checkStateAndUpdate(messageEventIframe, "wait", "release"))
         .then(waitOnShutdownObserver)
         .then(closeIframe)
     }
   }
 
   var test2 = {
     prefs: [
       ["dom.serviceWorkers.idle_timeout", 0],
