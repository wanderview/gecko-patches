# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  63519bfd42ee379f597c0357af2e712ec3cd9f50
Bug 1457867 Make MediaQueryList lazily bind to the global when its first event listener is added. r=baku

diff --git a/layout/style/MediaQueryList.cpp b/layout/style/MediaQueryList.cpp
--- a/layout/style/MediaQueryList.cpp
+++ b/layout/style/MediaQueryList.cpp
@@ -17,24 +17,24 @@
 #define ONCHANGE_STRING NS_LITERAL_STRING("change")
 
 namespace mozilla {
 namespace dom {
 
 MediaQueryList::MediaQueryList(nsIDocument* aDocument,
                                const nsAString& aMediaQueryList,
                                CallerType aCallerType)
-  : DOMEventTargetHelper(aDocument->GetInnerWindow())
+  // Only lazily bind to the global if an event listener is added.  Some
+  // sites create too many MQL objects to bind them all eagerly.
+  : DOMEventTargetHelper(static_cast<nsIGlobalObject*>(nullptr))
   , mDocument(aDocument)
   , mMatches(false)
   , mMatchesValid(false)
 {
   mMediaList = MediaList::Create(aMediaQueryList, aCallerType);
-
-  KeepAliveIfHasListenersFor(ONCHANGE_STRING);
 }
 
 MediaQueryList::~MediaQueryList()
 {}
 
 NS_IMPL_CYCLE_COLLECTION_CLASS(MediaQueryList)
 
 NS_IMPL_CYCLE_COLLECTION_TRAVERSE_BEGIN_INHERITED(MediaQueryList,
@@ -87,16 +87,28 @@ MediaQueryList::AddListener(EventListene
   options.SetAsBoolean() = false;
 
   AddEventListener(ONCHANGE_STRING, aListener, options, false, aRv);
 }
 
 void
 MediaQueryList::EventListenerAdded(nsAtom* aType)
 {
+  // When an event listener is added we need to lazily try to bind to
+  // the global so that we can be told when the global is destroyed.
+  // We can't bind in the constructor as most classes do since some
+  // sites create very large numbers of temporary MQL objects.
+  if (!DOMEventTargetHelper::GetParentObject() && mDocument) {
+    nsPIDOMWindowInner* inner = mDocument->GetInnerWindow();
+    if (inner) {
+      BindToOwner(inner);
+      KeepAliveIfHasListenersFor(ONCHANGE_STRING);
+    }
+  }
+
   // HasListeners() might still be false if the added thing wasn't a
   // listener we care about.
   if (!mMatchesValid && HasListeners()) {
     RecomputeMatches();
   }
 
   DOMEventTargetHelper::EventListenerAdded(aType);
 }
