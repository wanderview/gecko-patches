# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  8c4e0e723d693c0bbcb480d87b69f3660118c40c

diff --git a/dom/serviceworkers/ServiceWorkerRegistrationProxy.cpp b/dom/serviceworkers/ServiceWorkerRegistrationProxy.cpp
--- a/dom/serviceworkers/ServiceWorkerRegistrationProxy.cpp
+++ b/dom/serviceworkers/ServiceWorkerRegistrationProxy.cpp
@@ -68,18 +68,17 @@ ServiceWorkerRegistrationProxy::InitOnMa
     swm->GetRegistration(mDescriptor.PrincipalInfo(), mDescriptor.Scope());
   NS_ENSURE_TRUE_VOID(reg);
 
   scopeExit.release();
 
   mReg = new nsMainThreadPtrHolder<ServiceWorkerRegistrationInfo>(
     "ServiceWorkerRegistrationProxy::mInfo", reg);
 
-  swm->AddRegistrationEventListener(NS_ConvertUTF8toUTF16(mDescriptor.Scope()),
-                                    this);
+  mReg->AddInstance(this);
 }
 
 void
 ServiceWorkerRegistrationProxy::MaybeShutdownOnMainThread()
 {
   AssertIsOnMainThread();
 
   nsCOMPtr<nsIRunnable> r =
@@ -92,23 +91,19 @@ ServiceWorkerRegistrationProxy::MaybeShu
 void
 ServiceWorkerRegistrationProxy::StopListeningOnMainThread()
 {
   AssertIsOnMainThread();
 
   if (!mReg) {
     return;
   }
+
+  mReg->RemoveInstance(this);
   mReg = nullptr;
-
-  RefPtr<ServiceWorkerManager> swm = ServiceWorkerManager::GetInstance();
-  NS_ENSURE_TRUE_VOID(swm);
-
-  swm->RemoveRegistrationEventListener(NS_ConvertUTF8toUTF16(mDescriptor.Scope()),
-                                       this);
 }
 
 void
 ServiceWorkerRegistrationProxy::UpdateFound()
 {
   AssertIsOnMainThread();
 
   nsCOMPtr<nsIRunnable> r = NewRunnableMethod(
