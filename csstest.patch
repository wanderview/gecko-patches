
# HG changeset patch
# User Nikhil Marathe <nsm.nikhil@gmail.com>
# Date 1441927483 25200
# Node ID abec11a10c3d2661d28215472a6b004888c130ba
# Parent  fba4b0cd3823975949765acc0b16b964d1712b75
Bug 1189653 - Wait for frame to be loaded and test to finish. r=bkelly

This test seems to work on central but fails due to a timing issue where the
channel may receive the message before the with_iframe() call resolves the next
promise to set the global variable `frame`.  This patch tweaks the test to
resolve a promise instead when the test is done and then wait on the
with_iframe() promise and the test promise.

Update web-platform-tests expected data

diff --git a/testing/web-platform/mozilla/meta/service-workers/service-worker/fetch-request-css-base-url.https.html.ini b/testing/web-platform/mozilla/meta/service-workers/service-worker/fetch-request-css-base-url.https.html.ini
--- a/testing/web-platform/mozilla/meta/service-workers/service-worker/fetch-request-css-base-url.https.html.ini
+++ b/testing/web-platform/mozilla/meta/service-workers/service-worker/fetch-request-css-base-url.https.html.ini
@@ -1,5 +0,0 @@
-[fetch-request-css-base-url.https.html]
-  type: testharness
-  [CSS's base URL must be the request URL even when fetched from other URL.]
-    expected: FAIL
-
diff --git a/testing/web-platform/mozilla/tests/service-workers/service-worker/fetch-request-css-base-url.https.html b/testing/web-platform/mozilla/tests/service-workers/service-worker/fetch-request-css-base-url.https.html
--- a/testing/web-platform/mozilla/tests/service-workers/service-worker/fetch-request-css-base-url.https.html
+++ b/testing/web-platform/mozilla/tests/service-workers/service-worker/fetch-request-css-base-url.https.html
@@ -4,49 +4,53 @@
 <script src="/resources/testharnessreport.js"></script>
 <script src="resources/get-host-info.sub.js"></script>
 <script src="resources/test-helpers.sub.js?pipe=sub"></script>
 <script>
 async_test(function(t) {
     var SCOPE = 'resources/fetch-request-css-base-url-iframe.html';
     var SCRIPT = 'resources/fetch-request-css-base-url-worker.js';
     var worker;
-    var frame;
+    var testDonePromise;
 
     return service_worker_unregister_and_register(t, SCRIPT, SCOPE)
       .then(function(registration) {
           worker = registration.installing;
           return wait_for_state(t, worker, 'activated');
         })
       .then(function() {
           return new Promise(function(resolve) {
               var channel = new MessageChannel();
-              channel.port1.onmessage = t.step_func(function(msg) {
-                if (msg.data.ready) {
-                  resolve();
-                  return;
-                }
-                var result = msg.data;
-                var base = get_host_info()['HTTPS_ORIGIN'] + base_path();
-                assert_equals(
-                  result.url,
-                  base + 'resources/dummy.png',
-                  'The base URL while loading the images referred from CSS ' +
-                  'must be the request URL of CSS.');
-                assert_equals(
-                  result.referrer,
-                  base + 'resources/fetch-request-css-base-url-style.css',
-                  'While loading the image defined in CSS the referrer must ' +
-                  'be the request URL of CSS.');
-                frame.remove();
-                service_worker_unregister_and_done(t, SCOPE);
+              testDonePromise = new Promise(function(resolveTestDone) {
+                channel.port1.onmessage = t.step_func(function(msg) {
+                  if (msg.data.ready) {
+                    resolve();
+                    return;
+                  }
+                  var result = msg.data;
+                  var base = get_host_info()['HTTPS_ORIGIN'] + base_path();
+                  assert_equals(
+                    result.url,
+                    base + 'resources/dummy.png',
+                    'The base URL while loading the images referred from CSS ' +
+                    'must be the request URL of CSS.');
+                  assert_equals(
+                    result.referrer,
+                    base + 'resources/fetch-request-css-base-url-style.css',
+                    'While loading the image defined in CSS the referrer must ' +
+                    'be the request URL of CSS.');
+                  resolveTestDone();
+                });
               });
               worker.postMessage(
                 {port: channel.port2}, [channel.port2]);
             });
         })
       .then(function() { return with_iframe(SCOPE); })
       .then(function(f) {
-          frame = f;
+          return testDonePromise.then(function() {
+            f.remove();
+            return service_worker_unregister_and_done(t, SCOPE);
+          });
         })
       .catch(unreached_rejection(t));
   }, 'CSS\'s base URL must be the request URL even when fetched from other URL.');
 </script>
