# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  0a9e83aed664b3184c411e6750564093ed5f53fc

diff --git a/dom/base/Element.cpp b/dom/base/Element.cpp
--- a/dom/base/Element.cpp
+++ b/dom/base/Element.cpp
@@ -335,26 +335,30 @@ Element::TabIndex()
   }
 
   return TabIndexDefault();
 }
 
 void
 Element::Focus(mozilla::ErrorResult& aError)
 {
+  printf_stderr("### ### Element::Focus()\n");
   nsCOMPtr<nsIDOMElement> domElement = do_QueryInterface(this);
   nsFocusManager* fm = nsFocusManager::GetFocusManager();
   // Also other browsers seem to have the hack to not re-focus (and flush) when
   // the element is already focused.
   if (fm && domElement) {
     if (fm->CanSkipFocus(this)) {
+      printf_stderr("### ### Element::Focus() can skip focus returned true\n");
       fm->NeedsFlushBeforeEventHandling(this);
     } else {
       aError = fm->SetFocus(domElement, 0);
     }
+  } else {
+    printf_stderr("### ### Element::Focus() skip because fm:%p domElement:%p\n", fm, domElement.get());
   }
 }
 
 void
 Element::SetTabIndex(int32_t aTabIndex, mozilla::ErrorResult& aError)
 {
   nsAutoString value;
   value.AppendInt(aTabIndex);
diff --git a/dom/base/nsFocusManager.cpp b/dom/base/nsFocusManager.cpp
--- a/dom/base/nsFocusManager.cpp
+++ b/dom/base/nsFocusManager.cpp
@@ -1194,18 +1194,20 @@ nsFocusManager::ActivateOrDeactivate(nsP
 }
 
 void
 nsFocusManager::SetFocusInner(nsIContent* aNewContent, int32_t aFlags,
                               bool aFocusChanged, bool aAdjustWidget)
 {
   // if the element is not focusable, just return and leave the focus as is
   nsCOMPtr<nsIContent> contentToFocus = CheckIfFocusable(aNewContent, aFlags);
-  if (!contentToFocus)
+  if (!contentToFocus) {
+    printf_stderr("### ### nsFocusManager::SetFocusInner() no content to focus\n");
     return;
+  }
 
   // check if the element to focus is a frame (iframe) containing a child
   // document. Frames are never directly focused; instead focusing a frame
   // means focus what is inside the frame. To do this, the descendant content
   // within the frame is retrieved and that will be focused instead.
   nsCOMPtr<nsPIDOMWindowOuter> newWindow;
   nsCOMPtr<nsPIDOMWindowOuter> subWindow = GetContentWindow(contentToFocus);
   if (subWindow) {
