# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  204541141d60d4258c802a74c7fed44f57c5545f
Bug 1256428 P4 Add ServiceWorkerRegisterJob2. r=ehsan

diff --git a/dom/workers/ServiceWorkerRegisterJob.cpp b/dom/workers/ServiceWorkerRegisterJob.cpp
new file mode 100644
--- /dev/null
+++ b/dom/workers/ServiceWorkerRegisterJob.cpp
@@ -0,0 +1,69 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=8 sts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "ServiceWorkerRegisterJob.h"
+
+#include "Workers.h"
+
+namespace mozilla {
+namespace dom {
+namespace workers {
+
+ServiceWorkerRegisterJob2::~ServiceWorkerRegisterJob2()
+{
+}
+
+void
+ServiceWorkerRegisterJob2::AsyncExecute()
+{
+  AssertIsOnMainThread();
+
+  if (Canceled()) {
+    FailUpdateJob(NS_ERROR_DOM_ABORT_ERR);
+  }
+
+  RefPtr<ServiceWorkerManager> swm = ServiceWorkerManager::GetInstance();
+
+  // TODO: background actor
+
+  GetAndSetRegistration();
+  RefPtr<ServiceWorkerRegistrationInfo> registration = GetRegistration();
+
+  if (registration) {
+    // If we are resurrecting an uninstalling registration, then persist
+    // it to disk again.  We preemptively removed it earlier during
+    // unregister so that closing the window by shutting down the browser
+    // results in the registration being gone on restart.
+    if (registration->mPendingUninstall) {
+      swm->StoreRegistration(mPrincipal, registration);
+    }
+    registration->mPendingUninstall = false;
+    RefPtr<ServiceWorkerInfo> newest = registration->Newest();
+    if (newest && mScriptSpec.Equals(newest->ScriptSpec())) {
+      Finish(NS_OK);
+      return;
+    }
+  } else {
+    // TODO
+    //mRegistration = swm->CreateNewRegistration(mScope, mPrincipal);
+  }
+
+  Update();
+}
+
+ServiceWorkerRegisterJob2::ServiceWorkerRegisterJob2(nsIPrincipal* aPrincipal,
+                                                     const nsACString& aScope,
+                                                     const nsACString& aScriptSpec,
+                                                     nsILoadGroup* aLoadGroup)
+  : ServiceWorkerUpdateJob2(ServiceWorkerJob2::Type::Register,
+                            aPrincipal, aScope, aScriptSpec, aLoadGroup)
+{
+  AssertIsOnMainThread();
+}
+
+} // namespace workers
+} // namespace dom
+} // namespace mozilla
diff --git a/dom/workers/ServiceWorkerRegisterJob.h b/dom/workers/ServiceWorkerRegisterJob.h
new file mode 100644
--- /dev/null
+++ b/dom/workers/ServiceWorkerRegisterJob.h
@@ -0,0 +1,35 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=8 sts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef mozilla_dom_workers_serviceworkerregisterjob_h
+#define mozilla_dom_workers_serviceworkerregisterjob_h
+
+#include "ServiceWorkerUpdateJob.h"
+
+namespace mozilla {
+namespace dom {
+namespace workers {
+
+class ServiceWorkerRegisterJob2 final : public ServiceWorkerUpdateJob2
+{
+  virtual ~ServiceWorkerRegisterJob2();
+
+protected:
+  virtual void
+  AsyncExecute() override;
+
+public:
+  ServiceWorkerRegisterJob2(nsIPrincipal* aPrincipal,
+                            const nsACString& aScope,
+                            const nsACString& aScriptSpec,
+                            nsILoadGroup* aLoadGroup);
+};
+
+} // namespace workers
+} // namespace dom
+} // namespace mozilla
+
+#endif // mozilla_dom_workers_serviceworkerregisterjob_h
diff --git a/dom/workers/moz.build b/dom/workers/moz.build
--- a/dom/workers/moz.build
+++ b/dom/workers/moz.build
@@ -69,16 +69,17 @@ UNIFIED_SOURCES += [
     'ServiceWorkerJob.cpp',
     'ServiceWorkerJobQueue.cpp',
     'ServiceWorkerManager.cpp',
     'ServiceWorkerManagerChild.cpp',
     'ServiceWorkerManagerParent.cpp',
     'ServiceWorkerManagerService.cpp',
     'ServiceWorkerMessageEvent.cpp',
     'ServiceWorkerPrivate.cpp',
+    'ServiceWorkerRegisterJob.cpp',
     'ServiceWorkerRegistrar.cpp',
     'ServiceWorkerRegistration.cpp',
     'ServiceWorkerScriptCache.cpp',
     'ServiceWorkerUpdateJob.cpp',
     'ServiceWorkerWindowClient.cpp',
     'SharedWorker.cpp',
     'URL.cpp',
     'WorkerDebuggerManager.cpp',
