# HG changeset patch
# Parent 9c0e99bfa11665f32eae745ba4f3f7a8f30fe59c
# User Ben Kelly <ben@wanderview.com>
Bug 1138916 Fix Cache::MatchAll() assertion in WorkerFeature handling. r=baku


diff --git a/dom/cache/ActorChild.cpp b/dom/cache/ActorChild.cpp
--- a/dom/cache/ActorChild.cpp
+++ b/dom/cache/ActorChild.cpp
@@ -10,17 +10,24 @@
 
 namespace mozilla {
 namespace dom {
 namespace cache {
 
 void
 ActorChild::SetFeature(Feature* aFeature)
 {
-  MOZ_ASSERT(!mFeature);
+  // Some of the Cache actors can have multiple DOM objects associated with
+  // them.  In this case the feature will be added multiple times.  This is
+  // permitted, but the feature should be the same each time.
+  if (mFeature) {
+    MOZ_ASSERT(mFeature == aFeature);
+    return;
+  }
+
   mFeature = aFeature;
   if (mFeature) {
     mFeature->AddActor(this);
   }
 }
 
 void
 ActorChild::RemoveFeature()
diff --git a/dom/cache/test/mochitest/test_cache_add.js b/dom/cache/test/mochitest/test_cache_add.js
--- a/dom/cache/test/mochitest/test_cache_add.js
+++ b/dom/cache/test/mochitest/test_cache_add.js
@@ -34,13 +34,19 @@ caches.open('adder').then(function(openC
   });
   promiseList.push(cache.match(singleUrl));
   return Promise.all(promiseList);
 }).then(function(resultList) {
   is(urlList.length + 1, resultList.length, 'Expected number of results');
   resultList.every(function(result) {
     ok(!!result, 'Responses should now be in cache for each URL.');
   });
+  return cache.matchAll();
+}).then(function(resultList) {
+  is(urlList.length + 1, resultList.length, 'Expected number of results');
+  resultList.every(function(result) {
+    ok(!!result, 'Responses should now be in cache for each URL.');
+  });
   workerTestDone();
 }).catch(function(err) {
   ok(false, 'Caught error: ' + err);
   workerTestDone();
 });
