# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  78c8982c45f22dd6207e47698f85f1eb82846072
Bug 1244764 P2 Make dom/cache mochitests pass with new add()/addAll() behavior. r=ehsan

diff --git a/dom/cache/test/mochitest/app/sw.js b/dom/cache/test/mochitest/app/sw.js
--- a/dom/cache/test/mochitest/app/sw.js
+++ b/dom/cache/test/mochitest/app/sw.js
@@ -1,18 +1,19 @@
+var url = 'index.html';
 self.addEventListener('message', (message) => {
   caches.open('acache').then((cache) => {
     if(message.data == 'write') {
-      cache.add('aurl').then(() => {
+      cache.add(url).then(() => {
         message.source.postMessage({
           type: 'written'
         });
       });
     } else if (message.data == 'read') {
-      cache.match('aurl').then((result) => {
+      cache.match(url).then((result) => {
         message.source.postMessage({
           type: 'done',
           cached: !!result
         });
       });
     }
   });
 });
diff --git a/dom/cache/test/mochitest/test_cache_add.js b/dom/cache/test/mochitest/test_cache_add.js
--- a/dom/cache/test/mochitest/test_cache_add.js
+++ b/dom/cache/test/mochitest/test_cache_add.js
@@ -1,12 +1,12 @@
 var singleUrl = './test_cache_add.js';
 var urlList = [
-  './helloworld.txt',
-  './foobar.txt',
+  './empty.html',
+  './frame.html',
   './test_cache.js'
 ];
 var cache;
 var name = "adder" + context;
 caches.open(name).then(function(openCache) {
   cache = openCache;
   return cache.add('ftp://example.com/invalid' + context);
 }).catch(function (err) {
diff --git a/dom/cache/test/mochitest/test_cache_https.js b/dom/cache/test/mochitest/test_cache_https.js
--- a/dom/cache/test/mochitest/test_cache_https.js
+++ b/dom/cache/test/mochitest/test_cache_https.js
@@ -1,18 +1,26 @@
 var cache = null;
 var name = 'https_' + context;
 var urlBase = 'https://example.com/tests/dom/cache/test/mochitest';
 var url1 = urlBase + '/test_cache.js';
 var url2 = urlBase + '/test_cache_add.js';
 
+function addOpaque(cache, url) {
+  return fetch(new Request(url, { mode: 'no-cors' })).then(function(response) {
+    return cache.put(url, response);
+  });
+}
+
 caches.open(name).then(function(c) {
   cache = c;
-  return cache.addAll([new Request(url1, { mode: 'no-cors' }),
-                       new Request(url2, { mode: 'no-cors' })]);
+  return Promise.all([
+    addOpaque(cache, url1),
+    addOpaque(cache, url2)
+  ]);
 }).then(function() {
   return cache.delete(url1);
 }).then(function(result) {
   ok(result, 'Cache entry should be deleted');
   return cache.delete(url2);
 }).then(function(result) {
   ok(result, 'Cache entry should be deleted');
   cache = null;
diff --git a/dom/cache/test/mochitest/test_cache_orphaned_body.html b/dom/cache/test/mochitest/test_cache_orphaned_body.html
--- a/dom/cache/test/mochitest/test_cache_orphaned_body.html
+++ b/dom/cache/test/mochitest/test_cache_orphaned_body.html
@@ -66,17 +66,17 @@ SpecialPowers.pushPrefEnv({
 }, function() {
   var name = 'orphanedBodyOwner';
   var cache = null;
   var response = null;
   var initialUsage = 0;
   var fullUsage = 0;
   var resetUsage = 0;
   var endUsage = 0;
-  var url = 'cache_add.js';
+  var url = 'test_cache_add.js';
 
   // start from a fresh origin directory so other tests do not influence our
   // results
   setupTestIframe().then(function() {
     return clearStorage();
   }).then(function() {
     return storageUsage();
   }).then(function(usage) {
diff --git a/dom/cache/test/mochitest/test_cache_orphaned_cache.html b/dom/cache/test/mochitest/test_cache_orphaned_cache.html
--- a/dom/cache/test/mochitest/test_cache_orphaned_cache.html
+++ b/dom/cache/test/mochitest/test_cache_orphaned_cache.html
@@ -65,17 +65,17 @@ SpecialPowers.pushPrefEnv({
           ["dom.quotaManager.testing", true]],
 }, function() {
   var name = 'toBeOrphaned';
   var cache = null;
   var initialUsage = 0;
   var fullUsage = 0;
   var resetUsage = 0;
   var endUsage = 0;
-  var url = 'cache_add.js';
+  var url = 'test_cache_add.js';
 
   // start from a fresh origin directory so other tests do not influence our
   // results
   setupTestIframe().then(function() {
     return clearStorage();
   }).then(function() {
     return storageUsage();
   }).then(function(usage) {
