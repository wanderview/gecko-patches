# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  264593df609e750d8dcb7e66048f14c8fa455968
Bug 1345943 P2 Add WPT verifying MessageEvent.source is set correctly when sent from waiting ServiceWorker. r=asuth

diff --git a/testing/web-platform/meta/MANIFEST.json b/testing/web-platform/meta/MANIFEST.json
--- a/testing/web-platform/meta/MANIFEST.json
+++ b/testing/web-platform/meta/MANIFEST.json
@@ -60269,16 +60269,21 @@
      {}
     ]
    ],
    "service-workers/service-worker/resources/dummy.txt": [
     [
      {}
     ]
    ],
+   "service-workers/service-worker/resources/echo-message-to-source-worker.js": [
+    [
+     {}
+    ]
+   ],
    "service-workers/service-worker/resources/empty-but-slow-worker.js": [
     [
      {}
     ]
    ],
    "service-workers/service-worker/resources/empty-worker.js": [
     [
      {}
@@ -118989,16 +118994,22 @@
     ]
    ],
    "service-workers/service-worker/performance-timeline.https.html": [
     [
      "/service-workers/service-worker/performance-timeline.https.html",
      {}
     ]
    ],
+   "service-workers/service-worker/postmessage-from-waiting-serviceworker.https.html": [
+    [
+     "/service-workers/service-worker/postmessage-from-waiting-serviceworker.https.html",
+     {}
+    ]
+   ],
    "service-workers/service-worker/postmessage-msgport-to-client.https.html": [
     [
      "/service-workers/service-worker/postmessage-msgport-to-client.https.html",
      {}
     ]
    ],
    "service-workers/service-worker/postmessage-to-client.https.html": [
     [
@@ -166735,17 +166746,17 @@
    "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "support"
   ],
   "html/browsers/origin/cross-origin-objects/cross-origin-objects-on-new-window.html": [
    "604c6ee2bd78187a600dd28e03b60caf89580cfe",
    "testharness"
   ],
   "html/browsers/origin/cross-origin-objects/cross-origin-objects.html": [
-   "4acb7047fa505deba20030e6ee83e9e4b55349a8",
+   "a49a73b44a8484a240b14fc3877b0abed64e16dc",
    "testharness"
   ],
   "html/browsers/origin/cross-origin-objects/frame.html": [
    "dc9cd0af288e67202b3db551516613a2707201c5",
    "support"
   ],
   "html/browsers/origin/cross-origin-objects/win-documentdomain.sub.html": [
    "37d2be417bbc3b8473c2d4bfaa3b7a9973140ce9",
@@ -199839,21 +199850,21 @@
    "974fc8372db8f06f87919d35be48f922166d6652",
    "testharness"
   ],
   "service-workers/service-worker/appcache-ordering-main.https.html": [
    "a71f51cde17f9d209750877dfbe1bacd26412ab3",
    "testharness"
   ],
   "service-workers/service-worker/claim-affect-other-registration.https.html": [
-   "79b4a278f0e35646cfdffeebf8f0523e2772bc9b",
+   "96ffb6f3376a5fa73abd405e123d019d8cac694d",
    "testharness"
   ],
   "service-workers/service-worker/claim-fetch.https.html": [
-   "92d1733358db62804567a642ef405ba74edadf66",
+   "adec77bbeec2ec9ea7da3aba94375bc92e1b4f6f",
    "testharness"
   ],
   "service-workers/service-worker/claim-not-using-registration.https.html": [
    "72da19e038b6ab32ea04a0e91d117bc67d25a301",
    "testharness"
   ],
   "service-workers/service-worker/claim-using-registration.https.html": [
    "fb56cc3ae802669bb7898e76ac55e75ba6ac1441",
@@ -200114,16 +200125,20 @@
   "service-workers/service-worker/oninstall-script-error.https.html": [
    "0497bf37f0e3b55a6a4745cae2ec700b6f963fd3",
    "testharness"
   ],
   "service-workers/service-worker/performance-timeline.https.html": [
    "23d9e3dc830b83370875387cd5d6e1d5e913452f",
    "testharness"
   ],
+  "service-workers/service-worker/postmessage-from-waiting-serviceworker.https.html": [
+   "a3a2734be01c2e410a32daf9342f1e211ce22325",
+   "testharness"
+  ],
   "service-workers/service-worker/postmessage-msgport-to-client.https.html": [
    "21ae7fb96321dc75e7063c27b7e6838e6b9ff6c6",
    "testharness"
   ],
   "service-workers/service-worker/postmessage-to-client.https.html": [
    "4f91d302091df45ca72567c2cedc1584ad9045a9",
    "testharness"
   ],
@@ -200278,16 +200293,20 @@
   "service-workers/service-worker/resources/dummy.html": [
    "b15855240cf7dbc5df4ee30a544d7ff94935d146",
    "support"
   ],
   "service-workers/service-worker/resources/dummy.txt": [
    "33ab5639bfd8e7b95eb1d8d0b87781d4ffea4d5d",
    "support"
   ],
+  "service-workers/service-worker/resources/echo-message-to-source-worker.js": [
+   "449055cd2d8c41f2e3c78a8a748287faee664759",
+   "support"
+  ],
   "service-workers/service-worker/resources/empty-but-slow-worker.js": [
    "36ecac2f5ab2d3738ca72a7a7d1c605dbec97ff1",
    "support"
   ],
   "service-workers/service-worker/resources/empty-worker.js": [
    "84b3339c3419e318803e51f46d7252d9e8ac183b",
    "support"
   ],
@@ -217039,17 +217058,17 @@
    "a4b04414ea26f04d70970247420f3f256b7631e3",
    "testharness"
   ],
   "webstorage/storage_setitem.html": [
    "74fb62c4369f7929bb9387d8fadb1341e30eb90f",
    "testharness"
   ],
   "webstorage/storage_string_conversion.html": [
-   "3d8b227e0884935392f66d00c9d09e0f0d4aadc5",
+   "33c748773a518af29ea2ef8cbbc859fe988fb88a",
    "testharness"
   ],
   "webstorage/storage_supported_property_names.html": [
    "19fd5ede17b9c7e9d234e855eb7dd7fe343bc73e",
    "testharness"
   ],
   "webvr/OWNERS": [
    "adb04954bffbb33f29864668db95f5c5367d6a05",
@@ -219151,17 +219170,17 @@
    "2126e9f28c1fbb6ea721d25d3ac70022639f5597",
    "reftest"
   ],
   "webvtt/webvtt-api-for-browsers/vttcue-interface/align.html": [
    "49a9bf76b1a8d907e48ca95d3e8d3b0afc306566",
    "testharness"
   ],
   "webvtt/webvtt-api-for-browsers/vttcue-interface/getCueAsHTML.html": [
-   "79c03cfbda74f1047bd88886fa6ab44ce0c9cded",
+   "5187200a7d7e2ea96627aaea69189098d3bf5013",
    "testharness"
   ],
   "webvtt/webvtt-api-for-browsers/vttcue-interface/line.html": [
    "f76ca4b827ed42faa1c46e6a8a6a4dc66938f6e3",
    "testharness"
   ],
   "webvtt/webvtt-api-for-browsers/vttcue-interface/snapToLines.html": [
    "365542b9a68ddb679408e5b9df16ff77027e125a",
diff --git a/testing/web-platform/tests/service-workers/service-worker/postmessage-from-waiting-serviceworker.https.html b/testing/web-platform/tests/service-workers/service-worker/postmessage-from-waiting-serviceworker.https.html
new file mode 100644
--- /dev/null
+++ b/testing/web-platform/tests/service-workers/service-worker/postmessage-from-waiting-serviceworker.https.html
@@ -0,0 +1,49 @@
+<!DOCTYPE html>
+<title>Service Worker: postMessage from waiting serviceworker</title>
+<script src="/resources/testharness.js"></script>
+<script src="/resources/testharnessreport.js"></script>
+<script src="/common/get-host-info.sub.js"></script>
+<script src="resources/test-helpers.sub.js"></script>
+<script>
+
+function echo(worker, data) {
+  return new Promise(resolve => {
+    navigator.serviceWorker.addEventListener('message', function onMsg(evt) {
+      navigator.serviceWorker.removeEventListener('message', onMsg);
+      resolve(evt);
+    });
+    worker.postMessage(data);
+  });
+}
+
+async_test(t => {
+  let script = 'resources/echo-message-to-source-worker.js';
+  let scope = 'resources/client-postmessage-from-wait-serviceworker';
+  let registration;
+  let frame;
+  service_worker_unregister_and_register(t, script, scope)
+    .then(swr => {
+      registration = swr;
+      return wait_for_state(t, registration.installing, 'activated');
+    }).then(_ => {
+      return with_iframe(scope);
+    }).then(f => {
+      frame = f;
+      return navigator.serviceWorker.register(script + '?update', { scope: scope })
+    }).then(swr => {
+      assert_equals(swr, registration, 'should be same registration');
+      return wait_for_state(t, registration.installing, 'installed');
+    }).then(_ => {
+      return echo(registration.waiting, 'waiting');
+    }).then(evt => {
+      assert_equals(evt.source, registration.waiting,
+                    'message event source should be correct');
+      return echo(registration.active, 'active');
+    }).then(evt => {
+      assert_equals(evt.source, registration.active,
+                    'message event source should be correct');
+      frame.remove();
+    }).then(_ => service_worker_unregister_and_done(t, scope) )
+    .catch(unreached_rejection(t));
+}, 'Client.postMessage() from waiting serviceworker.');
+</script>
diff --git a/testing/web-platform/tests/service-workers/service-worker/resources/echo-message-to-source-worker.js b/testing/web-platform/tests/service-workers/service-worker/resources/echo-message-to-source-worker.js
new file mode 100644
--- /dev/null
+++ b/testing/web-platform/tests/service-workers/service-worker/resources/echo-message-to-source-worker.js
@@ -0,0 +1,3 @@
+addEventListener('message', evt => {
+  evt.source.postMessage(evt.data);
+});
