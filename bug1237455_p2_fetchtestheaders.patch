# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  f54386831bc977bc72c7de4d195a616cc8a4ca56
Bug 1237455 P2 Test headers on redirects in fetch mochitests. r=ehsan

diff --git a/dom/tests/mochitest/fetch/test_fetch_cors.js b/dom/tests/mochitest/fetch/test_fetch_cors.js
--- a/dom/tests/mochitest/fetch/test_fetch_cors.js
+++ b/dom/tests/mochitest/fetch/test_fetch_cors.js
@@ -1439,16 +1439,20 @@ function testCORSRedirects() {
     req = {
       url: test.hops[0].server + corsServerPath + "hop=1&hops=" +
            escape(test.hops.toSource()),
       method: test.method,
       headers: test.headers,
       body: test.body,
     };
 
+    if (test.headers) {
+      req.url += "&headers=" + escape(test.headers.toSource());
+    }
+
     if (test.pass) {
       if (test.body)
         req.url += "&body=" + escape(test.body);
     }
 
     var request = new Request(req.url, { method: req.method,
                                          headers: req.headers,
                                          body: req.body });
@@ -1498,16 +1502,27 @@ function testNoCORSRedirects() {
              hops: [{ server: origin,
                     },
                     { server: "http://example.com",
                     },
                     ],
            },
            { pass: 1,
              method: "GET",
+             // Must use a simple header due to no-cors header restrictions.
+             headers: { "accept-language": "en-us",
+                      },
+             hops: [{ server: origin,
+                    },
+                    { server: "http://example.com",
+                    },
+                    ],
+           },
+           { pass: 1,
+             method: "GET",
              hops: [{ server: origin,
                     },
                     { server: "http://example.com",
                     },
                     { server: origin,
                     }
                     ],
            },
@@ -1535,16 +1550,20 @@ function testNoCORSRedirects() {
     req = {
       url: test.hops[0].server + corsServerPath + "hop=1&hops=" +
            escape(test.hops.toSource()),
       method: test.method,
       headers: test.headers,
       body: test.body,
     };
 
+    if (test.headers) {
+      req.url += "&headers=" + escape(test.headers.toSource());
+    }
+
     if (test.pass) {
       if (test.body)
         req.url += "&body=" + escape(test.body);
     }
 
     fetches.push((function(req, test) {
       return new Promise(function(resolve, reject) {
         resolve(new Request(req.url, { mode: 'no-cors',
