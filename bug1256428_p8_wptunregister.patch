# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  694c075660157e02675e55e2663e3e465c1d56f4
Bug 1256428 P8 Fix wpt unregister-then-register-new-script.https.html to new spec expectations matching blink's tests. r=ehsan

diff --git a/testing/web-platform/mozilla/tests/service-workers/service-worker/unregister-then-register-new-script.https.html b/testing/web-platform/mozilla/tests/service-workers/service-worker/unregister-then-register-new-script.https.html
--- a/testing/web-platform/mozilla/tests/service-workers/service-worker/unregister-then-register-new-script.https.html
+++ b/testing/web-platform/mozilla/tests/service-workers/service-worker/unregister-then-register-new-script.https.html
@@ -98,24 +98,24 @@ async_test(function(t) {
       .then(
         function() {
           assert_unreached('register should reject the promise');
         },
         function() {
           return with_iframe(scope);
         })
       .then(function(frame) {
-          assert_equals(frame.contentWindow.navigator.serviceWorker.controller.scriptURL,
-                        normalizeURL(worker_url),
-                        'register() should always abort uninstalling the registration');
+          assert_equals(frame.contentWindow.navigator.serviceWorker.controller,
+                        null,
+                        'document should not load with a controller');
           frame.remove();
           t.done();
         })
       .catch(unreached_rejection(t));
-}, 'Registering a new script URL that 404s does resurrect an ' +
+}, 'Registering a new script URL that 404s does not resurrect an ' +
        'unregistered registration');
 
 async_test(function(t) {
     var scope = 'resources/scope/unregister-then-register-reject-install-worker';
     var iframe;
     var registration;
 
     service_worker_unregister_and_register(t, worker_url, scope)
@@ -139,21 +139,21 @@ async_test(function(t) {
       .then(function(r) {
           registration = r;
           return wait_for_state(t, r.installing, 'redundant');
         })
       .then(function() {
           return with_iframe(scope);
         })
       .then(function(frame) {
-          assert_equals(frame.contentWindow.navigator.serviceWorker.controller.scriptURL,
-                        normalizeURL(worker_url),
-                        'register() should always abort uninstalling the registration');
+          assert_equals(frame.contentWindow.navigator.serviceWorker.controller,
+                        null,
+                        'document should not load with a controller');
           frame.remove();
           return registration.unregister();
         })
       .then(function() {
           t.done();
         })
       .catch(unreached_rejection(t));
-  }, 'Registering a new script URL that fails to install does resurrect ' +
+  }, 'Registering a new script URL that fails to install does not resurrect ' +
        'an unregistered registration');
 </script>
