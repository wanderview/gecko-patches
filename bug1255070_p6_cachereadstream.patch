# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  194710da3949b8c2abf0de90cfe9610a0488bb24
Bug 1255070 P6 Make dom/cache ReadStream implement nsIBufferedInputStream. r=froydnj

diff --git a/dom/cache/ReadStream.cpp b/dom/cache/ReadStream.cpp
--- a/dom/cache/ReadStream.cpp
+++ b/dom/cache/ReadStream.cpp
@@ -407,17 +407,19 @@ ReadStream::Inner::ForgetOnOwningThread(
 
   MOZ_ASSERT(mControl);
   mControl->ForgetReadStream(this);
   mControl = nullptr;
 }
 
 // ----------------------------------------------------------------------------
 
-NS_IMPL_ISUPPORTS(cache::ReadStream, nsIInputStream, ReadStream);
+NS_IMPL_ISUPPORTS(cache::ReadStream, nsIInputStream,
+                                     nsIBufferedInputStream,
+                                     ReadStream);
 
 // static
 already_AddRefed<ReadStream>
 ReadStream::Create(const CacheReadStreamOrVoid& aReadStreamOrVoid)
 {
   if (aReadStreamOrVoid.type() == CacheReadStreamOrVoid::Tvoid_t) {
     return nullptr;
   }
@@ -532,11 +534,18 @@ ReadStream::ReadSegments(nsWriteSegmentF
 }
 
 NS_IMETHODIMP
 ReadStream::IsNonBlocking(bool* aNonBlockingOut)
 {
   return mInner->IsNonBlocking(aNonBlockingOut);
 }
 
+NS_IMETHODIMP
+ReadStream::Init(nsIInputStream*, uint32_t)
+{
+  MOZ_CRASH("ReadStream should not be inialized using "
+            "nsIBufferedInputStream::Init()");
+}
+
 } // namespace cache
 } // namespace dom
 } // namespace mozilla
diff --git a/dom/cache/ReadStream.h b/dom/cache/ReadStream.h
--- a/dom/cache/ReadStream.h
+++ b/dom/cache/ReadStream.h
@@ -5,17 +5,17 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #ifndef mozilla_dom_cache_ReadStream_h
 #define mozilla_dom_cache_ReadStream_h
 
 #include "mozilla/ipc/FileDescriptor.h"
 #include "nsCOMPtr.h"
 #include "nsID.h"
-#include "nsIInputStream.h"
+#include "nsIBufferedStreams.h"
 #include "nsISupportsImpl.h"
 #include "mozilla/RefPtr.h"
 #include "nsTArrayForwardDeclare.h"
 
 namespace mozilla {
 namespace dom {
 namespace cache {
 
@@ -35,17 +35,17 @@ class PCacheStreamControlParent;
 // accurately determine when the underlying body file can be deleted,
 // etc.
 //
 // The ReadStream class also provides us with a convenient QI'able
 // interface that we can use to pass additional meta-data with the
 // stream channel.  For example, Cache.put() can detect that the content
 // script is passing a Cache-originated-stream back into the Cache
 // again.  This enables certain optimizations.
-class ReadStream final : public nsIInputStream
+class ReadStream final : public nsIBufferedInputStream
 {
 public:
   // Interface that lets the StreamControl classes interact with
   // our private inner stream.
   class Controllable
   {
   public:
     // Closes the stream, notifies the stream control, and then forgets
@@ -96,16 +96,17 @@ private:
   // This is essential for the inner stream to avoid dealing with the
   // implicit close that can happen when a stream is destroyed.
   RefPtr<Inner> mInner;
 
 public:
   NS_DECLARE_STATIC_IID_ACCESSOR(NS_DOM_CACHE_READSTREAM_IID);
   NS_DECL_THREADSAFE_ISUPPORTS
   NS_DECL_NSIINPUTSTREAM
+  NS_DECL_NSIBUFFEREDINPUTSTREAM
 };
 
 NS_DEFINE_STATIC_IID_ACCESSOR(ReadStream, NS_DOM_CACHE_READSTREAM_IID);
 
 } // namespace cache
 } // namespace dom
 } // namespace mozilla
 
