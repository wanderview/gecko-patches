# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  2b8e5a4f7021c0d22c10583e270d60c2cd1f4517

diff --git a/browser/components/originattributes/test/browser/head.js b/browser/components/originattributes/test/browser/head.js
--- a/browser/components/originattributes/test/browser/head.js
+++ b/browser/components/originattributes/test/browser/head.js
@@ -172,32 +172,32 @@ this.IsolationTestTools = {
    * @param aTask
    *    The testing task which will be run in different settings.
    */
   _add_task(aTask) {
     add_task(function* addTaskForIsolationTests() {
       let testSettings = [
         { mode: TEST_MODE_FIRSTPARTY,
           skip: false,
-          prefs: [["privacy.firstparty.isolate", true]]
+          pref: ["privacy.firstparty.isolate", true]
         },
         { mode: TEST_MODE_NO_ISOLATION,
           skip: false,
-          prefs: [["privacy.firstparty.isolate", false]]
+          pref: ["privacy.firstparty.isolate", false]
         },
         { mode: TEST_MODE_CONTAINERS,
           skip: false,
-          prefs: [["privacy.userContext.enabled", true]]
+          pref: ["privacy.userContext.enabled", true]
         },
       ];
 
       // Add test tasks.
       for (let testSetting of testSettings) {
         IsolationTestTools._addTaskForMode(testSetting.mode,
-                                           testSetting.prefs,
+                                           testSetting.pref,
                                            testSetting.skip,
                                            aTask);
       }
     });
   },
 
   _addTaskForMode(aMode, aPref, aSkip, aTask) {
     if (aSkip) {
@@ -206,19 +206,19 @@ this.IsolationTestTools = {
 
     add_task(function* () {
       info("Starting the test for " + TEST_MODE_NAMES[aMode]);
 
       // Before run this task, reset the preferences first.
       yield SpecialPowers.flushPrefEnv();
 
       // Make sure preferences are set properly.
-      yield SpecialPowers.pushPrefEnv({"set": aPref});
-
-      yield SpecialPowers.pushPrefEnv({"set": [["dom.ipc.processCount", 1]]});
+      yield SpecialPowers.pushPrefEnv({"set": [aPref,
+                                              ["dom.ipc.processCount", 1],
+                                              ["signon.rememberSignons", false]]});
 
       yield aTask(aMode);
     });
   },
 
   /**
    * Add a tab with the given tab setting, this will open different types of
    * tabs according to the given test mode. A tab setting means a isolation
diff --git a/testing/specialpowers/content/specialpowersAPI.js b/testing/specialpowers/content/specialpowersAPI.js
--- a/testing/specialpowers/content/specialpowersAPI.js
+++ b/testing/specialpowers/content/specialpowersAPI.js
@@ -685,36 +685,25 @@ SpecialPowersAPI.prototype = {
     var crashDumpFiles = this._sendSyncMessage("SPProcessCrashService", message)[0];
     crashDumpFiles.forEach(function(aFilename) {
       self._unexpectedCrashDumpFiles[aFilename] = true;
     });
     return crashDumpFiles;
   },
 
   _setTimeout: function(callback) {
-    // for mochitest-browser
-    if (typeof window != 'undefined')
-      setTimeout(callback, 0);
-    // for mochitest-plain
-    else
-      content.window.setTimeout(callback, 0);
+    let timer = Cc['@mozilla.org/timer;1'].createInstance(Ci.nsITimer);
+    timer.init(callback, 0, Ci.nsITimer.TYPE_ONE_SHOT);
   },
 
   _delayCallbackTwice: function(callback) {
      function delayedCallback() {
        function delayAgain(aCallback) {
-         // Using this._setTimeout doesn't work here
-         // It causes failures in mochtests that use
-         // multiple pushPrefEnv calls
-         // For chrome/browser-chrome mochitests
-         if (typeof window != 'undefined')
-           setTimeout(aCallback, 0);
-         // For mochitest-plain
-         else
-           content.window.setTimeout(aCallback, 0);
+         let timer = Cc['@mozilla.org/timer;1'].createInstance(Ci.nsITimer);
+         timer.init(callback, 0, Ci.nsITimer.TYPE_ONE_SHOT);
        }
        delayAgain(delayAgain(callback));
      }
      return delayedCallback;
   },
 
   /* apply permissions to the system and when the test case is finished (SimpleTest.finish())
      we will revert the permission back to the original.
