# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  cc51aa8373064d3d4854a1aaeda0bad8c126fcea
Bug 1369874 Make fetch-response-xhr.https.html not depend on window.event. r=asuth

diff --git a/testing/web-platform/meta/service-workers/service-worker/fetch-response-xhr.https.html.ini b/testing/web-platform/meta/service-workers/service-worker/fetch-response-xhr.https.html.ini
deleted file mode 100644
--- a/testing/web-platform/meta/service-workers/service-worker/fetch-response-xhr.https.html.ini
+++ /dev/null
@@ -1,6 +0,0 @@
-[fetch-response-xhr.https.html]
-  type: testharness
-  expected: TIMEOUT
-  [Verify the response of FetchEvent using XMLHttpRequest]
-    expected: TIMEOUT
-
diff --git a/testing/web-platform/tests/service-workers/service-worker/resources/fetch-response-xhr-iframe.https.html b/testing/web-platform/tests/service-workers/service-worker/resources/fetch-response-xhr-iframe.https.html
--- a/testing/web-platform/tests/service-workers/service-worker/resources/fetch-response-xhr-iframe.https.html
+++ b/testing/web-platform/tests/service-workers/service-worker/resources/fetch-response-xhr-iframe.https.html
@@ -21,31 +21,31 @@ function xhr_send(method, data) {
 function coalesce_headers_test() {
   return xhr_send('POST', 'test string')
   .then(function(xhr) {
       window.parent.postMessage({results: xhr.getResponseHeader('foo')},
                                 host_info['HTTPS_ORIGIN']);
 
       return new Promise(function(resolve) {
           window.addEventListener('message', function handle(evt) {
-              if (event.data !== 'ACK') {
+              if (evt.data !== 'ACK') {
                 return;
               }
 
               window.removeEventListener('message', handle);
               resolve();
             });
         });
     });
 }
 
 window.addEventListener('message', function(evt) {
     var port;
 
-    if (event.data !== 'START') {
+    if (evt.data !== 'START') {
       return;
     }
 
     port = evt.ports[0];
 
     coalesce_headers_test()
       .then(function() { port.postMessage({results: 'finish'}); })
       .catch(function(e) { port.postMessage({results: 'failure:' + e}); });
