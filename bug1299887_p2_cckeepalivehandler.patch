# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  58e811cab89799933c9bddb8f4ef9d2a48484cd1
Bug 1299887 P2 Note why KeepAliveHandler::InternalHandler is not cycle collected. r=bz

diff --git a/dom/workers/ServiceWorkerPrivate.cpp b/dom/workers/ServiceWorkerPrivate.cpp
--- a/dom/workers/ServiceWorkerPrivate.cpp
+++ b/dom/workers/ServiceWorkerPrivate.cpp
@@ -341,16 +341,21 @@ class KeepAliveHandler final
 
       if (NS_WARN_IF(!ref->UseWorkerHolder())) {
         return nullptr;
       }
 
       return ref.forget();
     }
 
+    // Note, do not cycle collect InternalHandler.  While we typically want
+    // to cycle collect PromiseNativeHandler objects that reference other
+    // Promises, we don't in this case.  The whole purpose of this class is
+    // to create a cycle with the promise until its been resolved or rejected.
+    // Our mPromise here is the same Promise the handler is added to.
     NS_DECL_ISUPPORTS
   };
 
   // This is really just a wrapper class to keep the InternalHandler
   // private.  We don't want any code to accidentally call
   // Promise::AppendNativeHandler() without also referencing the promise.
   // Therefore we force all code through the static CreateAndAttachToPromise()
   // and use the private InternalHandler object.
