# HG changeset patch
# Parent 1676bf057a9416df3b33f63f17208f10a35d70be
# User Ben Kelly <ben@wanderview.com>
Bug 1110487 P2 interdiff 002 fix e10s M1 crashes


diff --git a/dom/cache/Context.cpp b/dom/cache/Context.cpp
--- a/dom/cache/Context.cpp
+++ b/dom/cache/Context.cpp
@@ -732,31 +732,34 @@ Context::DispatchAction(nsIEventTarget* 
 void
 Context::OnQuotaInit(nsresult aRv, const QuotaInfo& aQuotaInfo,
                      nsMainThreadPtrHandle<OfflineStorage>& aOfflineStorage)
 {
   NS_ASSERT_OWNINGTHREAD(Context);
 
   mQuotaInfo = aQuotaInfo;
 
+  // Always save the offline storage to ensure QuotaManager does not shutdown
+  // before the Context has gone away.
+  MOZ_ASSERT(!mOfflineStorage);
+  mOfflineStorage = aOfflineStorage;
+
   if (mState == STATE_CONTEXT_CANCELED || NS_FAILED(aRv)) {
     for (uint32_t i = 0; i < mPendingActions.Length(); ++i) {
       mPendingActions[i].mAction->CompleteOnInitiatingThread(aRv);
     }
     mPendingActions.Clear();
-    mThreadsafeHandle = nullptr;
+    mThreadsafeHandle->AllowToClose();
     // Context will destruct after return here and last ref is released.
     return;
   }
 
   MOZ_ASSERT(mState == STATE_CONTEXT_INIT);
   mState = STATE_CONTEXT_READY;
 
-  mOfflineStorage = aOfflineStorage;
-
   for (uint32_t i = 0; i < mPendingActions.Length(); ++i) {
     DispatchAction(mPendingActions[i].mTarget, mPendingActions[i].mAction);
   }
   mPendingActions.Clear();
 }
 
 void
 Context::AddActivity(Activity* aActivity)
