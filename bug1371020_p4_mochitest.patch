# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  6491fb29e7fcc9e02cc179ae2856f426a3552385
Bug 1371020 P4 Add a mochitest that executes clearTimeout() on a frozen window. r=ehsan

diff --git a/dom/base/TimeoutManager.cpp b/dom/base/TimeoutManager.cpp
--- a/dom/base/TimeoutManager.cpp
+++ b/dom/base/TimeoutManager.cpp
@@ -485,16 +485,18 @@ TimeoutManager::SetTimeout(nsITimeoutHan
   return NS_OK;
 }
 
 void
 TimeoutManager::ClearTimeout(int32_t aTimerId, Timeout::Reason aReason)
 {
   uint32_t timerId = (uint32_t)aTimerId;
 
+  printf_stderr("### ### ClearTimeout() suspended:%s\n", (mWindow.IsSuspended() ? "true" : "false"));
+
   bool firstTimeout = true;
 
   ForEachUnorderedTimeoutAbortable([&](Timeout* aTimeout) {
     MOZ_LOG(gLog, LogLevel::Debug,
             ("Clear%s(TimeoutManager=%p, timeout=%p, aTimerId=%u, ID=%u, tracking=%d)\n", aTimeout->mIsInterval ? "Interval" : "Timeout",
              this, aTimeout, timerId, aTimeout->mTimeoutId,
              int(aTimeout->mIsTracking)));
 
diff --git a/dom/base/test/file_clear_timeout_frozen_window_iframe.html b/dom/base/test/file_clear_timeout_frozen_window_iframe.html
new file mode 100644
--- /dev/null
+++ b/dom/base/test/file_clear_timeout_frozen_window_iframe.html
@@ -0,0 +1,26 @@
+<!doctype html>
+<html>
+<script>
+let timeout = 0;
+
+/*
+addEventListener('message', _ => {
+  dump('### ### clearTimeout ' + timeout + '\n');
+  clearTimeout(timeout);
+}, { once: true,  });
+
+addEventListener('pagehide', _ => {
+  dump('### ### pagehide event\n');
+  postMessage('PAGEHIDE', '*');
+}, { once: true });
+*/
+
+addEventListener('load', _ => {
+  timeout = setTimeout(_ => { }, 5555);
+}, { once: true });
+
+function makeClearTimeoutFunc() {
+  return _ => clearTimeout(timeout);
+}
+</script>
+</html>
diff --git a/dom/base/test/mochitest.ini b/dom/base/test/mochitest.ini
--- a/dom/base/test/mochitest.ini
+++ b/dom/base/test/mochitest.ini
@@ -121,16 +121,17 @@ support-files =
   file_bug782342.txt
   file_bug787778.sjs
   file_bug804395.jar
   file_bug869432.eventsource
   file_bug869432.eventsource^headers^
   file_bug907892.html
   file_bug945152.jar
   file_bug1274806.html
+  file_clear_timeout_frozen_window_iframe.html
   file_domwindowutils_animation.html
   file_general_document.html
   file_history_document_open.html
   file_htmlserializer_1.html
   file_htmlserializer_1_bodyonly.html
   file_htmlserializer_1_format.html
   file_htmlserializer_1_linebreak.html
   file_htmlserializer_1_links.html
@@ -611,16 +612,17 @@ skip-if = toolkit == 'android'
 [test_bug1281963.html]
 [test_bug1295852.html]
 [test_bug1307730.html]
 [test_bug1308069.html]
 [test_bug1314032.html]
 [test_bug1318303.html]
 [test_caretPositionFromPoint.html]
 [test_change_policy.html]
+[test_clear_timeout_frozen_window.html]
 [test_clearTimeoutIntervalNoArg.html]
 [test_constructor-assignment.html]
 [test_constructor.html]
 [test_copyimage.html]
 subsuite = clipboard
 skip-if = toolkit == 'android' #bug 904183
 [test_copypaste.html]
 subsuite = clipboard
diff --git a/dom/base/test/test_clear_timeout_frozen_window.html b/dom/base/test/test_clear_timeout_frozen_window.html
new file mode 100644
--- /dev/null
+++ b/dom/base/test/test_clear_timeout_frozen_window.html
@@ -0,0 +1,38 @@
+<!DOCTYPE html>
+<meta charset=utf-8>
+<title>Test for clearTimeout on a frozen window in the bfcache</title>
+<script type="application/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+<div id="log"></div>
+<script>
+SimpleTest.waitForExplicitFinish();
+
+function waitForLoad(frame) {
+  return new Promise(resolve => {
+    frame.addEventListener('load', _ => resolve(frame), { once: true });
+  });
+}
+
+function withLoadedFrame(url) {
+  let f = document.createElement('iframe');
+  f.src = url;
+  document.body.appendChild(f);
+  return waitForLoad(f);
+}
+
+function delay(ms) {
+  return new Promise(resolve => setTimeout(resolve, ms));
+}
+
+async function runTest() {
+  let frame = await withLoadedFrame('file_clear_timeout_frozen_window_iframe.html');
+  let clearTimeoutFunc = frame.contentWindow.makeClearTimeoutFunc();
+  frame.contentWindow.location = 'empty.html';
+  await waitForLoad(frame);
+  await delay(1000);
+  clearTimeoutFunc();
+  ok(true);
+  SimpleTest.finish();
+}
+
+runTest();
+</script>
