# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  66ed5884a4d3336c86b301cf343c914cc996f10c
Bug 1455695 P2 Fix tests to expect ServiceWorkerRegistration.update() to resolve with a registration. r=baku

diff --git a/dom/serviceworkers/test/worker_update.js b/dom/serviceworkers/test/worker_update.js
--- a/dom/serviceworkers/test/worker_update.js
+++ b/dom/serviceworkers/test/worker_update.js
@@ -1,14 +1,14 @@
 // For now this test only calls update to verify that our registration
 // job queueing works properly when called from the worker thread. We should
 // test actual update scenarios with a SJS test.
 onmessage = function(e) {
   self.registration.update().then(function(v) {
-    return v === undefined ? 'FINISH' : 'FAIL';
+    return v instanceof ServiceWorkerRegistration ? 'FINISH' : 'FAIL';
   }).catch(function(e) {
     return 'FAIL';
   }).then(function(result) {
     clients.matchAll().then(function(c) {
       if (c.length == 0) {
         dump("!!!!!!!!!!! WORKER HAS NO CLIENTS TO FINISH TEST !!!!!!!!!!!!\n");
         return;
       }
diff --git a/testing/web-platform/meta/MANIFEST.json b/testing/web-platform/meta/MANIFEST.json
--- a/testing/web-platform/meta/MANIFEST.json
+++ b/testing/web-platform/meta/MANIFEST.json
@@ -363341,16 +363341,22 @@
     ]
    ],
    "service-workers/service-worker/update-recovery.https.html": [
     [
      "/service-workers/service-worker/update-recovery.https.html",
      {}
     ]
    ],
+   "service-workers/service-worker/update-result.https.html": [
+    [
+     "/service-workers/service-worker/update-result.https.html",
+     {}
+    ]
+   ],
    "service-workers/service-worker/update.https.html": [
     [
      "/service-workers/service-worker/update.https.html",
      {}
     ]
    ],
    "service-workers/service-worker/waiting.https.html": [
     [
@@ -502033,17 +502039,17 @@
    "1cde22de011c102163c14a44ac686e97e075b934",
    "testharness"
   ],
   "css/css-fonts/variations/font-opentype-collections.html": [
    "6ef4e5f8931764e1609a7e2c0ccde63092d7c4fc",
    "testharness"
   ],
   "css/css-fonts/variations/font-parse-numeric-stretch-style-weight.html": [
-   "b9aa593e5fcba0d7af8f66446d473608a7025f1c",
+   "1e116cfb42e4e52fd714ec07c5bce6b9d5dceeda",
    "testharness"
   ],
   "css/css-fonts/variations/font-shorthand.html": [
    "7e193d5e25424699652e64b419e1d1384370e3a4",
    "testharness"
   ],
   "css/css-fonts/variations/font-stretch.html": [
    "b6d7409267cba17569ddd1caa654f3ab515e85eb",
@@ -519133,21 +519139,21 @@
    "0c339b7685280fb87ac68772a2bcc9704b5b4527",
    "reftest"
   ],
   "css/css-transforms/css-transform-3d-transform-style.html": [
    "755aa03cd4767e0874e33bcbe6028dab96c3ffb1",
    "reftest"
   ],
   "css/css-transforms/css-transform-animate-translate-implied-y-ref.html": [
-   "be59175d0020cab7b6eef4473cf4c51695a3101e",
+   "48d0696cd6b9e9b7ae2b95ab9ada46a6437b3419",
    "support"
   ],
   "css/css-transforms/css-transform-animate-translate-implied-y.html": [
-   "f0272619bd352b3870c4a6da1f2a99a6453f10aa",
+   "69be5da747b26e3ce762391dd5997a5bf697cd6e",
    "reftest"
   ],
   "css/css-transforms/css-transform-inherit-rotate.html": [
    "bd9040254b9d7747d86d63b7a6ea706e813bd1a1",
    "visual"
   ],
   "css/css-transforms/css-transform-inherit-scale.html": [
    "1afd10f480afbd37ba7f55daae31003146fd22c1",
@@ -554301,29 +554307,29 @@
    "49bc4349b4e7a85d88cacd54227355aa986535f1",
    "testharness"
   ],
   "fetch/api/request/request-init-002.html": [
    "e6647394acca551e354b27c16013ef713c8ba64e",
    "testharness"
   ],
   "fetch/api/request/request-init-003.sub.html": [
-   "f3084c91090e9c86c5586e947e63baf4990b582e",
+   "98e47b378d13b9b94601eb7c6035c457d53151ca",
    "testharness"
   ],
   "fetch/api/request/request-keepalive-quota.html": [
    "0b9786a3878a361ba8ec3291216d475bd5148541",
    "testharness"
   ],
   "fetch/api/request/request-keepalive.html": [
    "e6c2afd6cef41d358016d4d021b7c3e0e1185704",
    "testharness"
   ],
   "fetch/api/request/request-structure.html": [
-   "cc2471d809fcf7842c38762614c656bb45bb0fc7",
+   "b01d5ae0d56c22d2b86e0efd2cf64ac938770b11",
    "testharness"
   ],
   "fetch/api/request/request-type-attribute-historical.html": [
    "68620f3ea16b7ae1a9f1efde1cd0bb47f1150b9f",
    "testharness"
   ],
   "fetch/api/request/resources/cache.py": [
    "3cd7d5191fe33b2f2dab571a4b006d8332fdf42e",
@@ -597656,16 +597662,20 @@
   "service-workers/service-worker/update-bytecheck.https.html": [
    "a39aa4877c3e47c8379b84f8520b6a726936867e",
    "testharness"
   ],
   "service-workers/service-worker/update-recovery.https.html": [
    "aac5705d6844e4a33200418504adb57053a45be2",
    "testharness"
   ],
+  "service-workers/service-worker/update-result.https.html": [
+   "06741e887be9746d7354394f74c054dd920d1b60",
+   "testharness"
+  ],
   "service-workers/service-worker/update.https.html": [
    "d55da98b05b5885084474ebdbabdf6c0998f8bca",
    "testharness"
   ],
   "service-workers/service-worker/waiting.https.html": [
    "7f891059dd421274db18967fd570abb3b1a90285",
    "testharness"
   ],
@@ -606121,17 +606131,17 @@
    "d870e4e7ca81044bd62ddbf79fb666d02bc5b9ee",
    "support"
   ],
   "webmessaging/broadcastchannel/sandbox.html": [
    "9eeb2cbdcf50727280da1de83f665c6041b7741c",
    "testharness"
   ],
   "webmessaging/broadcastchannel/workers.html": [
-   "483e03e9528f1e80fc1b250caee46f7f256d63c1",
+   "2ca289f36c001c15e64b849098e8f28b21178862",
    "testharness"
   ],
   "webmessaging/event.data.sub.htm": [
    "994c26d63d21f6acabc9e5c2af667e1d557040b3",
    "testharness"
   ],
   "webmessaging/event.origin.sub.htm": [
    "591a0bcef635d7158fe9c04fabfeea030dce9c62",
diff --git a/testing/web-platform/tests/service-workers/service-worker/update-result.https.html b/testing/web-platform/tests/service-workers/service-worker/update-result.https.html
new file mode 100644
--- /dev/null
+++ b/testing/web-platform/tests/service-workers/service-worker/update-result.https.html
@@ -0,0 +1,23 @@
+<!DOCTYPE html>
+<title>Service Worker: update() should resolve a ServiceWorkerRegistration</title>
+<script src="/resources/testharness.js"></script>
+<script src="/resources/testharnessreport.js"></script>
+<script src="resources/test-helpers.sub.js"></script>
+<body>
+<script>
+
+promise_test(async function(t) {
+  const script = './resources/empty.js';
+  const scope = './resources/empty.html?update-result';
+
+  let reg = await navigator.serviceWorker.register(script, { scope });
+  t.add_cleanup(async _ => await reg.unregister());
+  await wait_for_state(t, reg.installing, 'activated');
+
+  let result = await reg.update();
+  assert_true(result instanceof ServiceWorkerRegistration,
+              'update() should resolve a ServiceWorkerRegistration');
+}, 'ServiceWorkerRegistration.update() should resolve a registration object');
+
+</script>
+</body>
