# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  cde56ead650fd302be1d440507485b9abf7c163a
Bug 1287235 Wrap addon-sdk's Cu.getWeakReference() in a try/catch in case native objects are passed. r=bz

diff --git a/addon-sdk/source/lib/sdk/event/utils.js b/addon-sdk/source/lib/sdk/event/utils.js
--- a/addon-sdk/source/lib/sdk/event/utils.js
+++ b/addon-sdk/source/lib/sdk/event/utils.js
@@ -239,19 +239,26 @@ Input.prototype[end] = Input.end;
 // while also allowing the objects to be reclaimed.  It means, however,
 // input.value cannot be accessed long after the event was dispatched.
 const WeakValueGetterSetter = {
   get: function() {
     return this._weakValue ? this._weakValue.get() : this._simpleValue
   },
   set: function(v) {
     if (v && typeof v === "object") {
-      this._weakValue = Cu.getWeakReference(v)
-      this._simpleValue = undefined;
-      return;
+      try {
+        // Try to set a weak reference.  This can throw for some values.
+        // For example, if the value is a native object that does not
+        // implement nsISupportsWeakReference.
+        this._weakValue = Cu.getWeakReference(v)
+        this._simpleValue = undefined;
+        return;
+      } catch (e) {
+        // Do nothing.  Fall through to setting _simpleValue below.
+      }
     }
     this._simpleValue = v;
     this._weakValue = undefined;
   },
 }
 Object.defineProperty(Input.prototype, "value", WeakValueGetterSetter);
 
 exports.Input = Input;
