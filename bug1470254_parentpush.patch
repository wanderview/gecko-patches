# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  39672ed4a6bde7625deb55abf86ef79fdd39a5f5
Bug 1470254 Don't send push events to child process when e10s pref is flipped. r=mrbkap

diff --git a/dom/push/PushNotifier.cpp b/dom/push/PushNotifier.cpp
--- a/dom/push/PushNotifier.cpp
+++ b/dom/push/PushNotifier.cpp
@@ -98,17 +98,17 @@ nsresult
 PushNotifier::Dispatch(PushDispatcher& aDispatcher)
 {
   if (XRE_IsParentProcess()) {
     // Always notify XPCOM observers in the parent process.
     Unused << NS_WARN_IF(NS_FAILED(aDispatcher.NotifyObservers()));
 
     nsTArray<ContentParent*> contentActors;
     ContentParent::GetAll(contentActors);
-    if (!contentActors.IsEmpty()) {
+    if (!contentActors.IsEmpty() && !ServiceWorkerParentInterceptEnabled()) {
       // At least one content process is active, so e10s must be enabled.
       // Broadcast a message to notify observers and service workers.
       for (uint32_t i = 0; i < contentActors.Length(); ++i) {
         // We need to filter based on process type, only "web" AKA the default
         // remote type is acceptable.
         if (!contentActors[i]->GetRemoteType().EqualsLiteral(
                DEFAULT_REMOTE_TYPE)) {
           continue;
@@ -123,17 +123,17 @@ PushNotifier::Dispatch(PushDispatcher& a
           // Only send the push message to the first content process to avoid
           // multiple SWs showing the same notification. See bug 1300112.
           break;
         }
       }
       return NS_OK;
     }
 
-    if (BrowserTabsRemoteAutostart()) {
+    if (BrowserTabsRemoteAutostart() && !ServiceWorkerParentInterceptEnabled()) {
       // e10s is enabled, but no content processes are active.
       return aDispatcher.HandleNoChildProcesses();
     }
 
     // e10s is disabled; notify workers in the parent.
     return aDispatcher.NotifyWorkers();
   }
 
