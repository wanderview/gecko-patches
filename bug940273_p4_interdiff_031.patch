# HG changeset patch
# Parent d12a38729c0d9c1fb83ff15cdee3ce0b2f6e1402
# User Ben Kelly <ben@wanderview.com>
Bug 940273 P4 interdiff 031 avoid AutoJSAPI usage

diff --git a/dom/cache/TypeUtils.cpp b/dom/cache/TypeUtils.cpp
--- a/dom/cache/TypeUtils.cpp
+++ b/dom/cache/TypeUtils.cpp
@@ -110,16 +110,40 @@ using mozilla::unused;
 using mozilla::void_t;
 using mozilla::ipc::BackgroundChild;
 using mozilla::ipc::FileDescriptor;
 using mozilla::ipc::FileDescriptorSetChild;
 using mozilla::ipc::PFileDescriptorSetChild;
 using mozilla::ipc::PBackgroundChild;
 using mozilla::ipc::OptionalFileDescriptorSet;
 
+
+already_AddRefed<InternalRequest>
+TypeUtils::ToInternalRequest(const RequestOrUSVString& aIn, ErrorResult& aRv)
+{
+  // TODO
+  return nullptr;
+}
+
+already_AddRefed<InternalRequest>
+TypeUtils::ToInternalRequest(const OwningRequestOrUSVString& aIn,
+                             ErrorResult& aRv)
+{
+  // TODO
+  return nullptr;
+}
+
+already_AddRefed<InternalRequest>
+TypeUtils::ToInternalRequest(const Optional<RequestOrUSVString>& aIn,
+                             ErrorResult& aRv)
+{
+  // TODO
+  return nullptr;
+}
+
 void
 TypeUtils::ToPCacheRequest(PCacheRequest& aOut, const RequestOrUSVString& aIn,
                            BodyAction aBodyAction,
                            ReferrerAction aReferrerAction,
                            SchemeAction aSchemeAction, ErrorResult& aRv)
 {
   AutoJSAPI jsapi;
   jsapi.Init(GetGlobalObject());
diff --git a/dom/cache/TypeUtils.h b/dom/cache/TypeUtils.h
--- a/dom/cache/TypeUtils.h
+++ b/dom/cache/TypeUtils.h
@@ -62,16 +62,25 @@ public:
   ~TypeUtils() { }
   virtual nsIGlobalObject* GetGlobalObject() const = 0;
 #ifdef DEBUG
   virtual void AssertOwningThread() const = 0;
 #else
   inline void AssertOwningThread() const { }
 #endif
 
+  already_AddRefed<InternalRequest>
+  ToInternalRequest(const RequestOrUSVString& aIn, ErrorResult& aRv);
+
+  already_AddRefed<InternalRequest>
+  ToInternalRequest(const OwningRequestOrUSVString& aIn, ErrorResult& aRv);
+
+  already_AddRefed<InternalRequest>
+  ToInternalRequest(const Optional<RequestOrUSVString>& aIn, ErrorResult& aRv);
+
   void
   ToPCacheRequest(PCacheRequest& aOut,
                   const RequestOrUSVString& aIn, BodyAction aBodyAction,
                   ReferrerAction aReferrerAction, SchemeAction aSchemeAction,
                   ErrorResult& aRv);
 
   void
   ToPCacheRequest(PCacheRequest& aOut,
