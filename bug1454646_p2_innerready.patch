# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  2de7f91fc91c6aa8b731d7980d1bd7950cbebbf8
Bug 1454646 P2 Implement ServiceWorkerContainer::GetReady() via the Inner class. r=baku

diff --git a/dom/serviceworkers/ServiceWorkerContainer.cpp b/dom/serviceworkers/ServiceWorkerContainer.cpp
--- a/dom/serviceworkers/ServiceWorkerContainer.cpp
+++ b/dom/serviceworkers/ServiceWorkerContainer.cpp
@@ -284,31 +284,25 @@ ServiceWorkerContainer::GetReady(ErrorRe
   }
 
   Maybe<ClientInfo> clientInfo(global->GetClientInfo());
   if (clientInfo.isNothing()) {
     aRv.Throw(NS_ERROR_DOM_INVALID_STATE_ERR);
     return nullptr;
   }
 
-  RefPtr<ServiceWorkerManager> swm = ServiceWorkerManager::GetInstance();
-  if (!swm) {
-    aRv.Throw(NS_ERROR_DOM_INVALID_STATE_ERR);
-    return nullptr;
-  }
-
   mReadyPromise = Promise::Create(GetParentObject(), aRv);
   if (aRv.Failed()) {
     return nullptr;
   }
 
   RefPtr<ServiceWorkerContainer> self = this;
   RefPtr<Promise> outer = mReadyPromise;
 
-  swm->WhenReady(clientInfo.ref())->Then(
+  mInner->GetReady(clientInfo.ref())->Then(
     global->EventTargetFor(TaskCategory::Other), __func__,
     [self, outer] (const ServiceWorkerRegistrationDescriptor& aDescriptor) {
       self->mReadyPromiseHolder.Complete();
       nsIGlobalObject* global = self->GetParentObject();
       NS_ENSURE_TRUE_VOID(global);
       RefPtr<ServiceWorkerRegistration> reg =
         global->GetOrCreateServiceWorkerRegistration(aDescriptor);
       NS_ENSURE_TRUE_VOID(reg);
diff --git a/dom/serviceworkers/ServiceWorkerContainer.h b/dom/serviceworkers/ServiceWorkerContainer.h
--- a/dom/serviceworkers/ServiceWorkerContainer.h
+++ b/dom/serviceworkers/ServiceWorkerContainer.h
@@ -32,17 +32,17 @@ public:
 
     virtual RefPtr<ServiceWorkerRegistrationPromise>
     GetRegistration(const nsAString& aURL) = 0;
 
     virtual RefPtr<ServiceWorkerRegistrationListPromise>
     GetRegistrations() = 0;
 
     virtual RefPtr<ServiceWorkerRegistrationPromise>
-    GetReady() = 0;
+    GetReady(const ClientInfo& aClientInfo) const = 0;
 
     NS_INLINE_DECL_PURE_VIRTUAL_REFCOUNTING
   };
 
   NS_DECL_ISUPPORTS_INHERITED
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(ServiceWorkerContainer, DOMEventTargetHelper)
 
   IMPL_EVENT_HANDLER(controllerchange)
diff --git a/dom/serviceworkers/ServiceWorkerContainerImpl.cpp b/dom/serviceworkers/ServiceWorkerContainerImpl.cpp
--- a/dom/serviceworkers/ServiceWorkerContainerImpl.cpp
+++ b/dom/serviceworkers/ServiceWorkerContainerImpl.cpp
@@ -27,16 +27,21 @@ ServiceWorkerContainerImpl::GetRegistrat
 RefPtr<ServiceWorkerRegistrationListPromise>
 ServiceWorkerContainerImpl::GetRegistrations()
 {
   // TODO
   return nullptr;
 }
 
 RefPtr<ServiceWorkerRegistrationPromise>
-ServiceWorkerContainerImpl::GetReady()
+ServiceWorkerContainerImpl::GetReady(const ClientInfo& aClientInfo) const
 {
-  // TODO
-  return nullptr;
+  RefPtr<ServiceWorkerManager> swm = ServiceWorkerManager::GetInstance();
+  if (NS_WARN_IF(!swm)) {
+    return ServiceWorkerRegistrationPromise::CreateAndReject(NS_ERROR_DOM_INVALID_STATE_ERR,
+                                                             __func__);
+  }
+
+  return swm->WhenReady(aClientInfo);
 }
 
 } // namespace dom
 } // namespace mozilla
diff --git a/dom/serviceworkers/ServiceWorkerContainerImpl.h b/dom/serviceworkers/ServiceWorkerContainerImpl.h
--- a/dom/serviceworkers/ServiceWorkerContainerImpl.h
+++ b/dom/serviceworkers/ServiceWorkerContainerImpl.h
@@ -13,28 +13,30 @@ namespace mozilla {
 namespace dom {
 
 // Lightweight serviceWorker APIs collection.
 class ServiceWorkerContainerImpl final : public ServiceWorkerContainer::Inner
 {
   ~ServiceWorkerContainerImpl() = default;
 
 public:
+  ServiceWorkerContainerImpl() = default;
+
   RefPtr<ServiceWorkerRegistrationPromise>
   Register(const nsAString& aScriptURL,
            const RegistrationOptions& aOptions) override;
 
   RefPtr<ServiceWorkerRegistrationPromise>
   GetRegistration(const nsAString& aURL) override;
 
   RefPtr<ServiceWorkerRegistrationListPromise>
   GetRegistrations() override;
 
   RefPtr<ServiceWorkerRegistrationPromise>
-  GetReady() override;
+  GetReady(const ClientInfo& aClientInfo) const override;
 
   NS_INLINE_DECL_REFCOUNTING(ServiceWorkerContainerImpl, override)
 };
 
 } // namespace dom
 } // namespace mozilla
 
 #endif /* mozilla_dom_serviceworkercontainerimpl_h__ */
