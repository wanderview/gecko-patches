# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  043e4aa849ff31dfe4b8b7916695e603740bdad4
Bug 1364277 Wait for service workers to activate more in dom/workers/test/serviceworkers. r=asuth

diff --git a/dom/workers/test/serviceworkers/mochitest.ini b/dom/workers/test/serviceworkers/mochitest.ini
--- a/dom/workers/test/serviceworkers/mochitest.ini
+++ b/dom/workers/test/serviceworkers/mochitest.ini
@@ -210,16 +210,17 @@ support-files =
   hello.html
   create_another_sharedWorker.html
   sharedWorker_fetch.js
   async_waituntil_worker.js
   lazy_worker.js
   nofetch_handler_worker.js
   service_worker.js
   service_worker_client.html
+  utils.js
 
 [test_bug1151916.html]
 [test_bug1240436.html]
 [test_claim.html]
 [test_claim_oninstall.html]
 [test_controller.html]
 [test_cross_origin_url_after_redirect.html]
 [test_csp_upgrade-insecure_intercept.html]
diff --git a/dom/workers/test/serviceworkers/test_async_waituntil.html b/dom/workers/test/serviceworkers/test_async_waituntil.html
--- a/dom/workers/test/serviceworkers/test_async_waituntil.html
+++ b/dom/workers/test/serviceworkers/test_async_waituntil.html
@@ -18,16 +18,17 @@
 <a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=1263304">Mozilla Bug 1263304</a>
 <p id="display"></p>
 <div id="content" style="display: none">
 
 </div>
 <pre id="test">
 </pre>
 
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
 add_task(function setupPrefs() {
   return SpecialPowers.pushPrefEnv({"set": [
     ["dom.serviceWorkers.enabled", true],
     ["dom.serviceWorkers.testing.enabled", true],
   ]});
 });
 
@@ -42,23 +43,17 @@ function wait_for_message(expected_messa
 }
 
 add_task(function* async_wait_until() {
   var worker;
   let registration = yield navigator.serviceWorker.register(
     "async_waituntil_worker.js", { scope: "./"} )
     .then(function(registration) {
       worker = registration.installing;
-      return new Promise(function(resolve) {
-        worker.addEventListener('statechange', function() {
-          if (worker.state === 'activated') {
-            resolve(registration);
-          }
-        });
-      });
+      return waitForState(worker, 'activated', registration);
     });
 
   // The service worker will claim us when it becomes active.
   ok(navigator.serviceWorker.controller, "Controlled");
 
   // This will make the service worker die immediately if there are no pending
   // waitUntil promises to keep it alive.
   yield SpecialPowers.pushPrefEnv({"set": [
diff --git a/dom/workers/test/serviceworkers/test_client_focus.html b/dom/workers/test/serviceworkers/test_client_focus.html
--- a/dom/workers/test/serviceworkers/test_client_focus.html
+++ b/dom/workers/test/serviceworkers/test_client_focus.html
@@ -12,24 +12,28 @@
   This test checks that client.focus is available.
   Actual focusing is tested by test_notificationclick_focus.html since only notification events have permission to change focus.
 -->
 </head>
 <body>
 <p id="display"></p>
 <div id="content"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   var registration;
   var worker;
 
   function start() {
     return navigator.serviceWorker.register("client_focus_worker.js",
                                             { scope: "./sw_clients/focus_stealing_client.html" })
-      .then((swr) => registration = swr);
+      .then((swr) => {
+        registration = swr;
+        returun waitForState(swr.installing, 'activated', swr);
+      });
   }
 
   function unregister() {
     return registration.unregister().then(function(result) {
       ok(result, "Unregister should return true.");
     }, function(e) {
       dump("Unregistering the SW failed with " + e + "\n");
     });
diff --git a/dom/workers/test/serviceworkers/test_controller.html b/dom/workers/test/serviceworkers/test_controller.html
--- a/dom/workers/test/serviceworkers/test_controller.html
+++ b/dom/workers/test/serviceworkers/test_controller.html
@@ -8,28 +8,28 @@
   <title>Bug 1002570 - test controller instance.</title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
 
   var content;
   var iframe;
   var registration;
 
   function simpleRegister() {
     // We use the control scope for the less specific registration. The window will register a worker on controller/
     return navigator.serviceWorker.register("worker.js", { scope: "./control" })
-      .then(function(reg) {
-        registration = reg;
-      });;
+      .then(swr => waitForState(swr.installing, 'activated', swr))
+      .then(swr => registration = swr);
   }
 
   function unregister() {
     return registration.unregister().then(function(result) {
       ok(result, "Unregister should return true.");
     }, function(e) {
       dump("Unregistering the SW failed: " + e + "\n");
     });
diff --git a/dom/workers/test/serviceworkers/test_fetch_event.html b/dom/workers/test/serviceworkers/test_fetch_event.html
--- a/dom/workers/test/serviceworkers/test_fetch_event.html
+++ b/dom/workers/test/serviceworkers/test_fetch_event.html
@@ -8,28 +8,27 @@
   <title>Bug 94048 - test install event.</title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   SimpleTest.requestCompleteLog();
 
   var registration;
   function simpleRegister() {
-    var p = navigator.serviceWorker.register("fetch_event_worker.js", { scope: "./fetch" });
-    return p.then(function(swr) {
-      registration = swr;
-      return new Promise(function(resolve) {
-        swr.installing.onstatechange = resolve;
+    return navigator.serviceWorker.register("fetch_event_worker.js", { scope: "./fetch" })
+      .then(swr => {
+        registration = swr;
+        return waitForState(swr.installing, 'activated');
       });
-    });
   }
 
   function unregister() {
     return registration.unregister().then(function(success) {
       ok(success, "Service worker should be unregistered successfully");
     }, function(e) {
       dump("SW unregistration error: " + e + "\n");
     });
diff --git a/dom/workers/test/serviceworkers/test_file_blob_response.html b/dom/workers/test/serviceworkers/test_file_blob_response.html
--- a/dom/workers/test/serviceworkers/test_file_blob_response.html
+++ b/dom/workers/test/serviceworkers/test_file_blob_response.html
@@ -8,32 +8,26 @@
   <title>Bug 1253777 - Test interception using file blob response body</title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   var registration;
   var scope = './file_blob_response/';
   function start() {
     return navigator.serviceWorker.register("file_blob_response_worker.js",
                                             { scope: scope })
       .then(function(swr) {
         registration = swr;
-        return new Promise(function(resolve) {
-          registration.installing.onstatechange = function(evt) {
-            if (evt.target.state === 'activated') {
-              evt.target.onstate = null;
-              resolve();
-            }
-          }
-        });
+        return new waitForState(swr.installing, 'activated');
       });
   }
 
   function unregister() {
     return registration.unregister().then(function(result) {
       ok(result, "Unregister should return true.");
     }, function(e) {
       ok(false, "Unregistering the SW failed with " + e + "\n");
diff --git a/dom/workers/test/serviceworkers/test_file_blob_upload.html b/dom/workers/test/serviceworkers/test_file_blob_upload.html
--- a/dom/workers/test/serviceworkers/test_file_blob_upload.html
+++ b/dom/workers/test/serviceworkers/test_file_blob_upload.html
@@ -8,23 +8,27 @@
   <title>Bug 1203680 - Test interception of file blob uploads</title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   var registration;
   var iframe;
   function start() {
     return navigator.serviceWorker.register("empty.js",
                                             { scope: "./sw_clients/" })
-      .then((swr) => registration = swr);
+      .then((swr) => {
+        registration = swr
+        return waitForState(swr.installing, 'activated', swr);
+      });
   }
 
   function unregister() {
     if (iframe) {
       iframe.remove();
       iframe = null;
     }
 
diff --git a/dom/workers/test/serviceworkers/test_gzip_redirect.html b/dom/workers/test/serviceworkers/test_gzip_redirect.html
--- a/dom/workers/test/serviceworkers/test_gzip_redirect.html
+++ b/dom/workers/test/serviceworkers/test_gzip_redirect.html
@@ -8,22 +8,26 @@
   <title>Bug 982726 - Test service worker post message </title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   var registration;
   function start() {
     return navigator.serviceWorker.register("gzip_redirect_worker.js",
                                             { scope: "./sw_clients/" })
-      .then((swr) => registration = swr);
+      .then((swr) => {
+        registration = swr;
+        return waitForState(swr.installing, 'activated', swr);
+      });
   }
 
   function unregister() {
     return registration.unregister().then(function(result) {
       ok(result, "Unregister should return true.");
     }, function(e) {
       dump("Unregistering the SW failed with " + e + "\n");
     });
diff --git a/dom/workers/test/serviceworkers/test_importscript.html b/dom/workers/test/serviceworkers/test_importscript.html
--- a/dom/workers/test/serviceworkers/test_importscript.html
+++ b/dom/workers/test/serviceworkers/test_importscript.html
@@ -6,21 +6,23 @@
 <html>
 <head>
   <title>Test service worker - script cache policy</title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <div id="content"></div>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   function start() {
     return navigator.serviceWorker.register("importscript_worker.js",
                                             { scope: "./sw_clients/" })
-      .then((swr) => registration = swr);
+      .then(swr => waitForState(swr.installing, 'activated', swr))
+      .then(swr => registration = swr);
   }
 
   function unregister() {
     return fetch("importscript.sjs?clearcounter").then(function() {
       return registration.unregister();
     }).then(function(result) {
       ok(result, "Unregister should return true.");
     }, function(e) {
diff --git a/dom/workers/test/serviceworkers/test_match_all.html b/dom/workers/test/serviceworkers/test_match_all.html
--- a/dom/workers/test/serviceworkers/test_match_all.html
+++ b/dom/workers/test/serviceworkers/test_match_all.html
@@ -8,27 +8,31 @@
   <title>Bug 982726 - test match_all not crashing</title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   // match_all_worker will call matchAll until the worker shuts down.
   // Test passes if the browser doesn't crash on leaked promise objects.
   var registration;
   var content;
   var iframe;
 
   function simpleRegister() {
     return navigator.serviceWorker.register("match_all_worker.js",
                                             { scope: "./sw_clients/" })
-      .then((swr) => registration = swr);
+      .then((swr) => {
+        registration = swr;
+        return waitForState(swr.installing, 'activated', swr);
+      });
   }
 
   function closeAndUnregister() {
     content.removeChild(iframe);
 
     return registration.unregister().then(function(result) {
       ok(result, "Unregister should return true.");
     }, function(e) {
diff --git a/dom/workers/test/serviceworkers/test_match_all_advanced.html b/dom/workers/test/serviceworkers/test_match_all_advanced.html
--- a/dom/workers/test/serviceworkers/test_match_all_advanced.html
+++ b/dom/workers/test/serviceworkers/test_match_all_advanced.html
@@ -8,24 +8,27 @@
   <title>Bug 982726 - Test matchAll with multiple clients</title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   var client_iframes = [];
   var registration;
 
   function start() {
     return navigator.serviceWorker.register("match_all_advanced_worker.js",
                                             { scope: "./sw_clients/" }).then(function(swr) {
       registration = swr;
+      return waitForState(swr.installing, 'activated');
+    }).then(_ => {
       window.onmessage = function (e) {
         if (e.data === "READY") {
           ok(registration.active, "Worker is active.");
           registration.active.postMessage("RUN");
         }
       }
     });
   }
diff --git a/dom/workers/test/serviceworkers/test_match_all_client_id.html b/dom/workers/test/serviceworkers/test_match_all_client_id.html
--- a/dom/workers/test/serviceworkers/test_match_all_client_id.html
+++ b/dom/workers/test/serviceworkers/test_match_all_client_id.html
@@ -8,23 +8,27 @@
   <title>Bug 1058311 - Test matchAll client id </title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   var registration;
   var clientURL = "match_all_client/match_all_client_id.html";
   function start() {
     return navigator.serviceWorker.register("match_all_client_id_worker.js",
                                             { scope: "./match_all_client/" })
-      .then((swr) => registration = swr);
+      .then((swr) => {
+        registration = swr;
+        return waitForState(swr.installing, 'activated', swr);
+      });
   }
 
   function unregister() {
     return registration.unregister().then(function(result) {
       ok(result, "Unregister should return true.");
     }, function(e) {
       dump("Unregistering the SW failed with " + e + "\n");
     });
diff --git a/dom/workers/test/serviceworkers/test_match_all_client_properties.html b/dom/workers/test/serviceworkers/test_match_all_client_properties.html
--- a/dom/workers/test/serviceworkers/test_match_all_client_properties.html
+++ b/dom/workers/test/serviceworkers/test_match_all_client_properties.html
@@ -8,23 +8,27 @@
   <title>Bug 1058311 - Test matchAll clients properties </title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   var registration;
   var clientURL = "match_all_clients/match_all_controlled.html";
   function start() {
     return navigator.serviceWorker.register("match_all_properties_worker.js",
                                             { scope: "./match_all_clients/" })
-      .then((swr) => registration = swr);
+      .then((swr) => {
+        registration = swr;
+        return waitForState(swr.installing, 'activated', swr);
+      });
   }
 
   function unregister() {
     return registration.unregister().then(function(result) {
       ok(result, "Unregister should return true.");
     }, function(e) {
       dump("Unregistering the SW failed with " + e + "\n");
     });
diff --git a/dom/workers/test/serviceworkers/test_nofetch_handler.html b/dom/workers/test/serviceworkers/test_nofetch_handler.html
--- a/dom/workers/test/serviceworkers/test_nofetch_handler.html
+++ b/dom/workers/test/serviceworkers/test_nofetch_handler.html
@@ -12,16 +12,17 @@
 <a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=1181127">Mozilla Bug 1325101</a>
 <p id="display"></p>
 <div id="content" style="display: none">
 
 </div>
 <pre id="test">
 </pre>
 
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
 
 add_task(function setupPrefs() {
   return SpecialPowers.pushPrefEnv({"set": [
     ["dom.serviceWorkers.enabled", true],
     ["dom.serviceWorkers.testing.enabled", true],
     // Make sure the event handler during the install event persists. This ensures
     // the reason for which the interception doesn't occur is because of the
@@ -39,26 +40,17 @@ function create_iframe(url) {
     document.body.appendChild(iframe);
     iframeg = iframe;
   })
 }
 
 add_task(function* test_nofetch_worker() {
   let registration = yield navigator.serviceWorker.register(
     "nofetch_handler_worker.js", { scope: "./nofetch_handler_worker/"} )
-    .then(function(registration) {
-      var worker = registration.installing;
-      return new Promise(function(resolve) {
-        worker.addEventListener('statechange', function() {
-          if (worker.state === 'activated') {
-            resolve(registration);
-          }
-        });
-      });
-    });
+    .then(swr => waitForState(swr.installing, 'activated', swr));
 
   let iframe = yield create_iframe("./nofetch_handler_worker/doesnt_exist.html");
   ok(!iframe.contentDocument.body.innerHTML.includes("intercepted"), "Request was not intercepted.");
 
   yield SpecialPowers.popPrefEnv();
   yield registration.unregister();
 });
 </script>
diff --git a/dom/workers/test/serviceworkers/test_not_intercept_plugin.html b/dom/workers/test/serviceworkers/test_not_intercept_plugin.html
--- a/dom/workers/test/serviceworkers/test_not_intercept_plugin.html
+++ b/dom/workers/test/serviceworkers/test_not_intercept_plugin.html
@@ -8,27 +8,26 @@
   <title>Bug 1187766 - Test loading plugins scenarios with fetch interception.</title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   SimpleTest.requestCompleteLog();
 
   var registration;
   function simpleRegister() {
     var p = navigator.serviceWorker.register("./fetch/plugin/worker.js", { scope: "./fetch/plugin/" });
     return p.then(function(swr) {
       registration = swr;
-      return new Promise(function(resolve) {
-        swr.installing.onstatechange = resolve;
-      });
+      return waitForState(swr.installing, 'activated');
     });
   }
 
   function unregister() {
     return registration.unregister().then(function(success) {
       ok(success, "Service worker should be unregistered successfully");
     }, function(e) {
       dump("SW unregistration error: " + e + "\n");
diff --git a/dom/workers/test/serviceworkers/test_openWindow.html b/dom/workers/test/serviceworkers/test_openWindow.html
--- a/dom/workers/test/serviceworkers/test_openWindow.html
+++ b/dom/workers/test/serviceworkers/test_openWindow.html
@@ -12,37 +12,31 @@ https://bugzilla.mozilla.org/show_bug.cg
 </head>
 <body>
 <a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=1172870">Bug 1172870</a>
 <p id="display"></p>
 <div id="content" style="display: none">
 </div>
 <pre id="test">
 </pre>
+<script src="utils.js"></script>
 <script type="text/javascript">
   SimpleTest.requestFlakyTimeout("Mock alert service dispatches show and click events.");
 
   function setup(ctx) {
     MockServices.register();
 
     return navigator.serviceWorker.register("openWindow_worker.js", {scope: "./"})
       .then(function(swr) {
         ok(swr, "Registration successful");
         ctx.registration = swr;
-        return ctx;
+        return waitForState(swr.installing, 'activated', ctx);
       });
   }
 
-  function waitForActiveServiceWorker(ctx) {
-    return navigator.serviceWorker.ready.then(function(result) {
-      ok(ctx.registration.active, "Service Worker is active");
-      return ctx;
-    });
-  }
-
   function setupMessageHandler(ctx) {
     return new Promise(function(res, rej) {
       navigator.serviceWorker.onmessage = function(event) {
         navigator.serviceWorker.onmessage = null;
         for (i = 0; i < event.data.length; i++) {
           ok(event.data[i].result, event.data[i].message);
         }
         res(ctx);
@@ -82,17 +76,16 @@ https://bugzilla.mozilla.org/show_bug.cg
     return ctx.registration.unregister().then(function(result) {
       ctx.registration = null;
       ok(result, "Unregister was successful.");
     });
   }
 
   function runTest() {
     setup({})
-      .then(waitForActiveServiceWorker)
       // Permission to allow popups persists for some time after a notification
       // click event, so the order here is important.
       .then(testPopupNotAllowed)
       .then(testPopupAllowed)
       .then(checkNumberOfWindows)
       .then(clear)
       .catch(function(e) {
         ok(false, "Some test failed with error " + e);
diff --git a/dom/workers/test/serviceworkers/test_post_message.html b/dom/workers/test/serviceworkers/test_post_message.html
--- a/dom/workers/test/serviceworkers/test_post_message.html
+++ b/dom/workers/test/serviceworkers/test_post_message.html
@@ -8,22 +8,24 @@
   <title>Bug 982726 - Test service worker post message </title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   var magic_value = "MAGIC_VALUE_123";
   var registration;
   function start() {
     return navigator.serviceWorker.register("message_posting_worker.js",
                                             { scope: "./sw_clients/" })
+      .then(swr => waitForState(swr.installing, 'activated', swr))
       .then((swr) => registration = swr);
   }
 
   function unregister() {
     return registration.unregister().then(function(result) {
       ok(result, "Unregister should return true.");
     }, function(e) {
       dump("Unregistering the SW failed with " + e + "\n");
diff --git a/dom/workers/test/serviceworkers/test_post_message_advanced.html b/dom/workers/test/serviceworkers/test_post_message_advanced.html
--- a/dom/workers/test/serviceworkers/test_post_message_advanced.html
+++ b/dom/workers/test/serviceworkers/test_post_message_advanced.html
@@ -8,16 +8,17 @@
   <title>Bug 982726 - Test service worker post message advanced </title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   var registration;
   var base = ["string", true, 42];
   var blob = new Blob(["blob_content"]);
   var file = new File(["file_content"], "file");
   var obj = { body : "object_content" };
 
   function readBlob(blob) {
@@ -44,16 +45,17 @@
 
   function obj_equals(o1, o2) {
     return equals(o1.body, o2.body);
   }
 
   function start() {
     return navigator.serviceWorker.register("message_posting_worker.js",
                                             { scope: "./sw_clients/" })
+      .then(swr => waitForState(swr.installing, 'activated', swr))
       .then((swr) => registration = swr);
   }
 
   function unregister() {
     return registration.unregister().then(function(result) {
       ok(result, "Unregister should return true.");
     }, function(e) {
       dump("Unregistering the SW failed with " + e + "\n");
diff --git a/dom/workers/test/serviceworkers/test_serviceworker.html b/dom/workers/test/serviceworkers/test_serviceworker.html
--- a/dom/workers/test/serviceworkers/test_serviceworker.html
+++ b/dom/workers/test/serviceworkers/test_serviceworker.html
@@ -8,23 +8,24 @@
   <title>Bug 1137245 - Allow IndexedDB usage in ServiceWorkers</title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content" style="display: none"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
 
   var regisration;
   function simpleRegister() {
     return navigator.serviceWorker.register("service_worker.js", {
       scope: 'service_worker_client.html'
-    });
+    }).then(swr => waitForState(swr.installing, 'activated', swr));
   }
 
   function unregister() {
     return registration.unregister();
   }
 
   function testIndexedDBAvailable(sw) {
     registration = sw;
diff --git a/dom/workers/test/serviceworkers/test_workerUpdate.html b/dom/workers/test/serviceworkers/test_workerUpdate.html
--- a/dom/workers/test/serviceworkers/test_workerUpdate.html
+++ b/dom/workers/test/serviceworkers/test_workerUpdate.html
@@ -6,20 +6,22 @@
 <html>
 <head>
   <title>Bug 1065366 - Test ServiceWorkerGlobalScope.update</title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <div id="container"></div>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
 
   function simpleRegister() {
-    return navigator.serviceWorker.register("worker_update.js", { scope: "workerUpdate/" });
+    return navigator.serviceWorker.register("worker_update.js", { scope: "workerUpdate/" })
+      .then(swr => waitForState(swr.installing, 'activated', swr));
   }
 
   var registration;
   function waitForMessages(sw) {
     registration = sw;
     var p = new Promise(function(resolve, reject) {
       window.onmessage = function(e) {
         if (e.data === "FINISH") {
diff --git a/dom/workers/test/serviceworkers/test_xslt.html b/dom/workers/test/serviceworkers/test_xslt.html
--- a/dom/workers/test/serviceworkers/test_xslt.html
+++ b/dom/workers/test/serviceworkers/test_xslt.html
@@ -8,39 +8,29 @@
   <title>Bug 1182113 - Test service worker XSLT interception</title>
   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
 </head>
 <body>
 <p id="display"></p>
 <div id="content"></div>
 <pre id="test"></pre>
+<script src="utils.js"></script>
 <script class="testbody" type="text/javascript">
   var registration;
   var worker;
 
   function start() {
     return navigator.serviceWorker.register("xslt_worker.js",
                                             { scope: "./" })
       .then((swr) => {
         registration = swr;
 
         // Ensure the registration is active before continuing
-        var worker = registration.installing;
-        return new Promise((resolve) => {
-          if (worker.state === 'activated') {
-            resolve();
-            return;
-          }
-          worker.addEventListener('statechange', () => {
-            if (worker.state === 'activated') {
-              resolve();
-            }
-          });
-        });
+        return waitForState(swr.installing, 'activated');
       });
   }
 
   function unregister() {
     return registration.unregister().then(function(result) {
       ok(result, "Unregister should return true.");
     }, function(e) {
       dump("Unregistering the SW failed with " + e + "\n");
diff --git a/dom/workers/test/serviceworkers/utils.js b/dom/workers/test/serviceworkers/utils.js
new file mode 100644
--- /dev/null
+++ b/dom/workers/test/serviceworkers/utils.js
@@ -0,0 +1,14 @@
+function waitForState(worker, state, context) {
+  return new Promise(resolve => {
+    if (worker.state === state) {
+      resolve(context);
+      return;
+    }
+    worker.addEventListener('statechange', function onStateChange() {
+      if (worker.state === state) {
+        worker.removeEventListener('statechange', onStateChange);
+        resolve(context);
+      }
+    });
+  });
+}
