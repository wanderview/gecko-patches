# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  87c1677f47a78d5788124562b77117a61e8fd2a6

diff --git a/dom/serviceworkers/ServiceWorkerRegistrationInfo.cpp b/dom/serviceworkers/ServiceWorkerRegistrationInfo.cpp
--- a/dom/serviceworkers/ServiceWorkerRegistrationInfo.cpp
+++ b/dom/serviceworkers/ServiceWorkerRegistrationInfo.cpp
@@ -123,22 +123,30 @@ ServiceWorkerRegistrationInfo::AddInstan
                                            const ServiceWorkerRegistrationDescriptor& aDescriptor)
 {
   MOZ_DIAGNOSTIC_ASSERT(aInstance);
   MOZ_ASSERT(!mInstanceList.Contains(aInstance));
   MOZ_DIAGNOSTIC_ASSERT(aDescriptor.Id() == mDescriptor.Id());
   MOZ_DIAGNOSTIC_ASSERT(aDescriptor.PrincipalInfo() == mDescriptor.PrincipalInfo());
   MOZ_DIAGNOSTIC_ASSERT(aDescriptor.Scope() == mDescriptor.Scope());
   MOZ_DIAGNOSTIC_ASSERT(aDescriptor.Version() <= mDescriptor.Version());
+  uint64_t lastVersion = aDescriptor.Version();
   for (auto& entry : mVersionList) {
-    if (aDescriptor.Version() > entry->mDescriptor.Version()) {
+    if (lastVersion > entry->mDescriptor.Version()) {
       continue;
     }
+    lastVersion = entry->mDescriptor.Version();
     aInstance->UpdateState(entry->mDescriptor);
   }
+  // Note, the mDescriptor may be contained in the version list.  Since the
+  // version list is aged out, though, it may also not be in the version list.
+  // So always check for the mDescriptor update here.
+  if (lastVersion < mDescriptor.Version()) {
+    aInstance->UpdateState(mDescriptor);
+  }
   mInstanceList.AppendElement(aInstance);
 }
 
 void
 ServiceWorkerRegistrationInfo::RemoveInstance(ServiceWorkerRegistrationListener* aInstance)
 {
   MOZ_DIAGNOSTIC_ASSERT(aInstance);
   DebugOnly<bool> removed = mInstanceList.RemoveElement(aInstance);
