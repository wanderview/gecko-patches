# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  a028d806d741a65dfb8835ed93dd8ecefd00dfeb
Bug 1469024 Define service worker parent intercept pref in StaticPrefList and read it once at startup. r=asuth

diff --git a/dom/serviceworkers/ServiceWorkerUtils.cpp b/dom/serviceworkers/ServiceWorkerUtils.cpp
--- a/dom/serviceworkers/ServiceWorkerUtils.cpp
+++ b/dom/serviceworkers/ServiceWorkerUtils.cpp
@@ -6,30 +6,27 @@
 
 #include "ServiceWorkerUtils.h"
 
 #include "mozilla/Preferences.h"
 
 namespace mozilla {
 namespace dom {
 
+
 bool
 ServiceWorkerParentInterceptEnabled()
 {
-  static bool sInit = false;
   static Atomic<bool> sEnabled;
-
-  if (!sInit) {
-    MOZ_ASSERT(NS_IsMainThread());
-    Preferences::AddAtomicBoolVarCache(&sEnabled,
-                                       "dom.serviceWorkers.parent_intercept",
-                                       false);
-    sInit = true;
+  static Atomic<bool> sInitialized;
+  if (!sInitialized) {
+    AssertIsOnMainThread();
+    sInitialized = true;
+    sEnabled = Preferences::GetBool("dom.serviceWorkers.parent_intercept", false);
   }
-
   return sEnabled;
 }
 
 bool
 ServiceWorkerRegistrationDataIsValid(const ServiceWorkerRegistrationData& aData)
 {
   return !aData.scope().IsEmpty() &&
          !aData.currentWorkerURL().IsEmpty() &&
diff --git a/modules/libpref/init/StaticPrefList.h b/modules/libpref/init/StaticPrefList.h
--- a/modules/libpref/init/StaticPrefList.h
+++ b/modules/libpref/init/StaticPrefList.h
@@ -100,16 +100,21 @@ VARCACHE_PREF(
 // Whether we disable triggering mutation events for changes to style
 // attribute via CSSOM.
 VARCACHE_PREF(
   "dom.mutation-events.cssom.disabled",
    dom_mutation_events_cssom_disabled,
   bool, true
 )
 
+// If true. then the service worker interception and the ServiceWorkerManager
+// will live in the parent process.  This only takes effect on browser start.
+// Note, this is not currently safe to use for normal browsing yet.
+PREF("dom.serviceWorkers.parent_intercept", bool, false)
+
 //---------------------------------------------------------------------------
 // Full-screen prefs
 //---------------------------------------------------------------------------
 
 #ifdef RELEASE_OR_BETA
 # define PREF_VALUE false
 #else
 # define PREF_VALUE true
