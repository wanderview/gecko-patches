# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  e861a024e28305f406591e150fff843496d38119
Bug 1255070 P8 Make nsStorageStream implement nsIBufferedOutputStream. r=froydnj

diff --git a/xpcom/io/nsStorageStream.cpp b/xpcom/io/nsStorageStream.cpp
--- a/xpcom/io/nsStorageStream.cpp
+++ b/xpcom/io/nsStorageStream.cpp
@@ -12,17 +12,16 @@
  * with the attendant performance loss and heap fragmentation.
  */
 
 #include "nsAlgorithm.h"
 #include "nsStorageStream.h"
 #include "nsSegmentedBuffer.h"
 #include "nsStreamUtils.h"
 #include "nsCOMPtr.h"
-#include "nsIBufferedStreams.h"
 #include "nsICloneableInputStream.h"
 #include "nsIInputStream.h"
 #include "nsIIPCSerializableInputStream.h"
 #include "nsISeekableStream.h"
 #include "mozilla/Logging.h"
 #include "mozilla/Attributes.h"
 #include "mozilla/Likely.h"
 #include "mozilla/MathAlgorithms.h"
@@ -57,17 +56,18 @@ nsStorageStream::nsStorageStream()
 
 nsStorageStream::~nsStorageStream()
 {
   delete mSegmentedBuffer;
 }
 
 NS_IMPL_ISUPPORTS(nsStorageStream,
                   nsIStorageStream,
-                  nsIOutputStream)
+                  nsIOutputStream,
+                  nsIBufferedOutputStream)
 
 NS_IMETHODIMP
 nsStorageStream::Init(uint32_t aSegmentSize, uint32_t aMaxSize)
 {
   mSegmentedBuffer = new nsSegmentedBuffer();
   mSegmentSize = aSegmentSize;
   mSegmentSizeLog2 = mozilla::FloorLog2(aSegmentSize);
 
@@ -321,16 +321,23 @@ nsStorageStream::Seek(int32_t aPosition)
     mWriteCursor += segmentOffset;
   }
 
   LOG(("nsStorageStream [%p] Seek mWriteCursor=%x mSegmentEnd=%x\n",
        this, mWriteCursor, mSegmentEnd));
   return NS_OK;
 }
 
+NS_IMETHODIMP
+nsStorageStream::Init(nsIOutputStream*, uint32_t)
+{
+  MOZ_CRASH("nsStorageStream should not be initialized using "
+            "nsIBufferedOutputStream::Init()");
+}
+
 ////////////////////////////////////////////////////////////////////////////////
 
 // There can be many nsStorageInputStreams for a single nsStorageStream
 class nsStorageInputStream final
   : public nsIBufferedInputStream
   , public nsISeekableStream
   , public nsIIPCSerializableInputStream
   , public nsICloneableInputStream
diff --git a/xpcom/io/nsStorageStream.h b/xpcom/io/nsStorageStream.h
--- a/xpcom/io/nsStorageStream.h
+++ b/xpcom/io/nsStorageStream.h
@@ -11,17 +11,17 @@
  * uses a segmented buffer internally to avoid realloc'ing of large buffers,
  * with the attendant performance loss and heap fragmentation.
  */
 
 #ifndef _nsStorageStream_h_
 #define _nsStorageStream_h_
 
 #include "nsIStorageStream.h"
-#include "nsIOutputStream.h"
+#include "nsIBufferedStreams.h"
 #include "nsMemory.h"
 #include "mozilla/Attributes.h"
 
 #define NS_STORAGESTREAM_CID                       \
 { /* 669a9795-6ff7-4ed4-9150-c34ce2971b63 */       \
   0x669a9795,                                      \
   0x6ff7,                                          \
   0x4ed4,                                          \
@@ -29,24 +29,25 @@
 }
 
 #define NS_STORAGESTREAM_CONTRACTID "@mozilla.org/storagestream;1"
 
 class nsSegmentedBuffer;
 
 class nsStorageStream final
   : public nsIStorageStream
-  , public nsIOutputStream
+  , public nsIBufferedOutputStream
 {
 public:
   nsStorageStream();
 
   NS_DECL_THREADSAFE_ISUPPORTS
   NS_DECL_NSISTORAGESTREAM
   NS_DECL_NSIOUTPUTSTREAM
+  NS_DECL_NSIBUFFEREDOUTPUTSTREAM
 
   friend class nsStorageInputStream;
 
 private:
   ~nsStorageStream();
 
   nsSegmentedBuffer* mSegmentedBuffer;
   uint32_t           mSegmentSize;       // All segments, except possibly the last, are of this size
diff --git a/xpcom/tests/gtest/TestStorageStream.cpp b/xpcom/tests/gtest/TestStorageStream.cpp
--- a/xpcom/tests/gtest/TestStorageStream.cpp
+++ b/xpcom/tests/gtest/TestStorageStream.cpp
@@ -137,20 +137,32 @@ TEST(StorageStreams, Interfaces)
 
   rv = NS_NewStorageStream(4096, UINT32_MAX, getter_AddRefs(stor));
   EXPECT_TRUE(NS_SUCCEEDED(rv));
 
   nsCOMPtr<nsIInputStream> in;
   rv = stor->NewInputStream(0, getter_AddRefs(in));
   EXPECT_TRUE(NS_SUCCEEDED(rv));
 
+  nsCOMPtr<nsIOutputStream> out;
+  rv = stor->GetOutputStream(0, getter_AddRefs(out));
+  EXPECT_TRUE(NS_SUCCEEDED(rv));
+
+  // validate input stream interface types
   nsCOMPtr<nsISeekableStream> inType1 = do_QueryInterface(in);
   ASSERT_TRUE(inType1);
 
   nsCOMPtr<nsIIPCSerializableInputStream> inType2 = do_QueryInterface(in);
   ASSERT_TRUE(inType2);
 
   nsCOMPtr<nsICloneableInputStream> inType3 = do_QueryInterface(in);
   ASSERT_TRUE(inType3);
 
   nsCOMPtr<nsIBufferedInputStream> inType4 = do_QueryInterface(in);
   ASSERT_TRUE(inType4);
+
+  // validate output stream interface types
+  nsCOMPtr<nsIStorageStream> outType1 = do_QueryInterface(out);
+  ASSERT_TRUE(outType1);
+
+  nsCOMPtr<nsIBufferedOutputStream> outType2 = do_QueryInterface(out);
+  ASSERT_TRUE(outType2);
 }
