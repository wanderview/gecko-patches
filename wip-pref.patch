# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  23c9dc35e7f7c9d906f5955fa4a2850f461ad9b6

diff --git a/dom/serviceworkers/ServiceWorkerUtils.cpp b/dom/serviceworkers/ServiceWorkerUtils.cpp
--- a/dom/serviceworkers/ServiceWorkerUtils.cpp
+++ b/dom/serviceworkers/ServiceWorkerUtils.cpp
@@ -1,41 +1,28 @@
 /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ts=8 sts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "ServiceWorkerUtils.h"
 
-#include "mozilla/Preferences.h"
+#include "mozilla/StaticPrefs.h"
 #include "mozilla/dom/ClientInfo.h"
 #include "mozilla/dom/ServiceWorkerRegistrarTypes.h"
 #include "nsIURL.h"
 
 namespace mozilla {
 namespace dom {
 
 bool
 ServiceWorkerParentInterceptEnabled()
 {
-  static bool sInit = false;
-  static Atomic<bool> sEnabled;
-
-  if (!sInit) {
-    MOZ_ASSERT(NS_IsMainThread());
-    // TODO: Why do we not see the correct pref value in the content process
-    //       immediately if we don't set this to default value "true"?
-    Preferences::AddAtomicBoolVarCache(&sEnabled,
-                                       "dom.serviceWorkers.parent_intercept",
-                                       true);
-    sInit = true;
-  }
-
-  return sEnabled;
+  return StaticPrefs::dom_serviceWorkers_parent_intercept();
 }
 
 bool
 ServiceWorkerRegistrationDataIsValid(const ServiceWorkerRegistrationData& aData)
 {
   return !aData.scope().IsEmpty() &&
          !aData.currentWorkerURL().IsEmpty() &&
          !aData.cacheName().IsEmpty();
diff --git a/modules/libpref/init/StaticPrefList.h b/modules/libpref/init/StaticPrefList.h
--- a/modules/libpref/init/StaticPrefList.h
+++ b/modules/libpref/init/StaticPrefList.h
@@ -100,16 +100,22 @@ VARCACHE_PREF(
 // Whether we disable triggering mutation events for changes to style
 // attribute via CSSOM.
 VARCACHE_PREF(
   "dom.mutation-events.cssom.disabled",
    dom_mutation_events_cssom_disabled,
   bool, true
 )
 
+VARCACHE_PREF(
+  "dom.serviceWorkers.parent_intercept",
+  dom_serviceWorkers_parent_intercept,
+  RelaxedAtomicBool, false
+)
+
 //---------------------------------------------------------------------------
 // Full-screen prefs
 //---------------------------------------------------------------------------
 
 #ifdef RELEASE_OR_BETA
 # define PREF_VALUE false
 #else
 # define PREF_VALUE true
