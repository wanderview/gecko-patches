# HG changeset patch
# User Tom Tung <shes050117@gmail.com>
# Date 1515578707 -28800
#      Wed Jan 10 18:05:07 2018 +0800
# Node ID ca5e20fe191a66e909ac2e5855f5be42bde7661f
# Parent  fa08ddd9db32181167c5823fc20cdb2c3fb980ce
Bug 1429093 - P1: Only allow notification click to call allowWindowInteraction. r=bkelly

diff --git a/dom/workers/ServiceWorkerPrivate.cpp b/dom/workers/ServiceWorkerPrivate.cpp
--- a/dom/workers/ServiceWorkerPrivate.cpp
+++ b/dom/workers/ServiceWorkerPrivate.cpp
@@ -1248,28 +1248,32 @@ public:
     RefPtr<NotificationEvent> event =
       NotificationEvent::Constructor(target, mEventName,
                                      nei, result);
     if (NS_WARN_IF(result.Failed())) {
       return false;
     }
 
     event->SetTrusted(true);
-    aWorkerPrivate->GlobalScope()->AllowWindowInteraction();
-    RefPtr<AllowWindowInteractionHandler> allowWindowInteraction =
-      new AllowWindowInteractionHandler(aWorkerPrivate);
+
+    RefPtr<AllowWindowInteractionHandler> allowWindowInteraction;
+    if (mEventName.EqualsLiteral(NOTIFICATION_CLICK_EVENT_NAME)) {
+      allowWindowInteraction =
+        new AllowWindowInteractionHandler(aWorkerPrivate);
+    }
+
     nsresult rv = DispatchExtendableEventOnWorkerScope(aCx,
                                                        aWorkerPrivate->GlobalScope(),
                                                        event,
                                                        allowWindowInteraction);
     // Don't reject when catching an exception
-    if (NS_FAILED(rv) && rv != NS_ERROR_XPC_JS_THREW_EXCEPTION) {
+    if (NS_FAILED(rv) && rv != NS_ERROR_XPC_JS_THREW_EXCEPTION &&
+        allowWindowInteraction) {
       allowWindowInteraction->FinishedWithResult(Rejected);
     }
-    aWorkerPrivate->GlobalScope()->ConsumeWindowInteraction();
 
     return true;
   }
 };
 
 } // namespace anonymous
 
 nsresult
