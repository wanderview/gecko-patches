# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  b4d9c933666daf6661cc7799dc28e693fda6847d
Bug 1191943 P3 Update resource-timing.https.html and performance-timeline.https.html WPT tests and expectations. r=asuth

diff --git a/testing/web-platform/meta/service-workers/service-worker/performance-timeline.https.html.ini b/testing/web-platform/meta/service-workers/service-worker/performance-timeline.https.html.ini
--- a/testing/web-platform/meta/service-workers/service-worker/performance-timeline.https.html.ini
+++ b/testing/web-platform/meta/service-workers/service-worker/performance-timeline.https.html.ini
@@ -1,9 +1,5 @@
 [performance-timeline.https.html]
   type: testharness
-  [empty service worker fetch event included in performance timings]
-    expected:
-      if not e10s: FAIL
-
   [Resource Timing]
     expected: FAIL
 
diff --git a/testing/web-platform/meta/service-workers/service-worker/resource-timing.https.html.ini b/testing/web-platform/meta/service-workers/service-worker/resource-timing.https.html.ini
--- a/testing/web-platform/meta/service-workers/service-worker/resource-timing.https.html.ini
+++ b/testing/web-platform/meta/service-workers/service-worker/resource-timing.https.html.ini
@@ -1,9 +1,5 @@
 [resource-timing.https.html]
   type: testharness
-  disabled: https://bugzilla.mozilla.org/show_bug.cgi?id=1178713
   [Controlled resource loads]
-    expected: FAIL
-
-  [Non-controlled resource loads]
-    expected: FAIL
-
+    expected:
+      if e10s: FAIL
diff --git a/testing/web-platform/tests/service-workers/service-worker/resource-timing.https.html b/testing/web-platform/tests/service-workers/service-worker/resource-timing.https.html
--- a/testing/web-platform/tests/service-workers/service-worker/resource-timing.https.html
+++ b/testing/web-platform/tests/service-workers/service-worker/resource-timing.https.html
@@ -8,16 +8,20 @@ function resourceUrl(path) {
     return get_host_info()['HTTPS_ORIGIN'] + base_path() + path;
 }
 
 function verify(performance, resource, description) {
     var entry = performance.getEntriesByName(resourceUrl(resource))[0];
     assert_greater_than(entry.workerStart, 0, description);
     assert_greater_than_equal(entry.workerStart, entry.startTime, description);
     assert_less_than_equal(entry.workerStart, entry.fetchStart, description);
+    assert_greater_than_equal(entry.responseStart, entry.fetchStart, description);
+    assert_greater_than_equal(entry.responseEnd, entry.responseStart, description);
+    assert_greater_than(entry.responseEnd, entry.fetchStart, description);
+    assert_greater_than(entry.duration, 0, description);
     if (resource.indexOf('redirect.py') != -1) {
         assert_less_than_equal(entry.workerStart, entry.redirectStart,
                                description);
     } else {
         assert_equals(entry.redirectStart, 0, description);
     }
 }
 
diff --git a/testing/web-platform/tests/service-workers/service-worker/resources/resource-timing-worker.js b/testing/web-platform/tests/service-workers/service-worker/resources/resource-timing-worker.js
--- a/testing/web-platform/tests/service-workers/service-worker/resources/resource-timing-worker.js
+++ b/testing/web-platform/tests/service-workers/service-worker/resources/resource-timing-worker.js
@@ -1,5 +1,9 @@
 self.addEventListener('fetch', function(event) {
     if (event.request.url.indexOf('dummy.js') != -1) {
-      event.respondWith(new Response());
+      event.respondWith(new Promise(resolve => {
+        // Slightly delay the response so we ensure we get a non-zero
+        // duration.
+        setTimeout(_ => resolve(new Response()), 100);
+      }));
     }
   });
