# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  fb40bcb6155bd1e3ac5468ff4575cce171efbc12
Bug 1369350 Add additional delay to test_dont_use_document_colors.html since nsPresShell delays applying prefs. r=dbaron

diff --git a/layout/style/test/test_dont_use_document_colors.html b/layout/style/test/test_dont_use_document_colors.html
--- a/layout/style/test/test_dont_use_document_colors.html
+++ b/layout/style/test/test_dont_use_document_colors.html
@@ -36,26 +36,38 @@
 <div id="six" dir="rtl">Hello</div>
 <div id="seven">Hello</div>
 
 </div>
 <pre id="test">
 <script class="testbody" type="text/javascript">
 
 SimpleTest.waitForExplicitFinish();
+SimpleTest.requestFlakyTimeout('nsPresShell internally delays applying prefs using an nsITimer');
 
 var cs1 = getComputedStyle(document.getElementById("one"), "");
 var cs2 = getComputedStyle(document.getElementById("two"), "");
 var cs3 = getComputedStyle(document.getElementById("three"), "");
 var cs4 = getComputedStyle(document.getElementById("four"), "");
 var cs5 = getComputedStyle(document.getElementById("five"), "");
 var cs6 = getComputedStyle(document.getElementById("six"), "");
 var cs7 = getComputedStyle(document.getElementById("seven"), "");
 
-SpecialPowers.pushPrefEnv({'set': [['browser.display.document_color_use', 1]]}, part1);
+function pushPrefEnvAndWait(args, cb) {
+  SpecialPowers.pushPrefEnv(args, _ => {
+    // The nsPresShell delays applying a preference change until after a 0ms
+    // nsITimer fires.  The SpecialPowers.pushPrefEnv() uses setTimeout(f, 0)
+    // which may execute as a simple runnable dispatch and fire before the
+    // 0ms nsITimer.  Therefore wait an additional 1ms to allow the nsPresShell
+    // to apply the preferences.
+    setTimeout(cb, 1);
+  });
+}
+
+pushPrefEnvAndWait({'set': [['browser.display.document_color_use', 1]]}, part1);
 
 var transparentBackgroundColor;
 var inputBackgroundColor, inputColor, inputBorderTopColor;
 var inputBorderRightColor, inputBorderLeftColor, inputBorderBottomColor;
 
 function part1()
 {
 
@@ -116,17 +128,17 @@ function part1()
           "border-bottom-color applies");
     transparentBackgroundColor = cs2.backgroundColor;
     inputBackgroundColor = cs4.backgroundColor;
     inputColor = cs4.color;
     inputBorderTopColor = cs4.borderTopColor;
     inputBorderRightColor = cs4.borderRightColor;
     inputBorderLeftColor = cs4.borderLeftColor;
     inputBorderBottomColor = cs4.borderBottomColor;
-    SpecialPowers.pushPrefEnv({'set': [['browser.display.document_color_use', 2]]}, part2);
+    pushPrefEnvAndWait({'set': [['browser.display.document_color_use', 2]]}, part2);
 }
 
 function part2()
 {
     isnot(cs1.backgroundColor, cs2.backgroundColor, "background-color transparency preserved (opaque)");
     is(cs2.backgroundColor, transparentBackgroundColor, "background-color transparency is preserved (transparent)");
     is(cs1.color, cs2.color, "color is blocked");
     is(cs1.borderTopColor, cs2.borderTopColor, "border-top-color is blocked");
