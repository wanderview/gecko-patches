# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  1fda52a1f3b81cf1a821155998dca637bb64e3d9
Bug 1362444 P3 Add a mochitest verifying accessing self.caches does not block idle Worker shutdown. r=baku

diff --git a/dom/cache/test/mochitest/idle_worker.js b/dom/cache/test/mochitest/idle_worker.js
new file mode 100644
--- /dev/null
+++ b/dom/cache/test/mochitest/idle_worker.js
@@ -0,0 +1,9 @@
+// Touch CacheStorage, but then idle and do nothing.
+const name = 'idle_worker_cache';
+var cache;
+self.caches.open(name).then(c => {
+  cache = c;
+  return self.caches.delete(name);
+}).then(_ => {
+  postMessage('LOADED');
+});
diff --git a/dom/cache/test/mochitest/mochitest.ini b/dom/cache/test/mochitest/mochitest.ini
--- a/dom/cache/test/mochitest/mochitest.ini
+++ b/dom/cache/test/mochitest/mochitest.ini
@@ -19,16 +19,17 @@ support-files =
   test_cache_put.js
   test_cache_requestCache.js
   test_cache_delete.js
   test_cache_put_reorder.js
   test_cache_redirect.js
   test_cache_https.js
   large_url_list.js
   empty.html
+  idle_worker.js
 
 [test_cache.html]
 [test_cache_add.html]
 [test_cache_match_request.html]
 [test_cache_matchAll_request.html]
 [test_cache_overwrite.html]
 [test_cache_match_vary.html]
 [test_caches.html]
@@ -41,8 +42,10 @@ support-files =
 [test_cache_redirect.html]
 [test_cache_restart.html]
 [test_cache_shrink.html]
 [test_cache_orphaned_cache.html]
 [test_cache_orphaned_body.html]
 scheme=https
 [test_cache_untrusted.html]
 [test_chrome_constructor.html]
+[test_cache_worker_gc.html]
+scheme=https
diff --git a/dom/cache/test/mochitest/test_cache_worker_gc.html b/dom/cache/test/mochitest/test_cache_worker_gc.html
new file mode 100644
--- /dev/null
+++ b/dom/cache/test/mochitest/test_cache_worker_gc.html
@@ -0,0 +1,46 @@
+<!-- Any copyright is dedicated to the Public Domain.
+   - http://creativecommons.org/publicdomain/zero/1.0/ -->
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Test CacheStorage does not prevent worker GC</title>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+  <script type="text/javascript" src="driver.js"></script>
+</head>
+<body>
+<iframe id="frame"></iframe>
+<script class="testbody" type="text/javascript">
+function startWorker() {
+  return new Promise(resolve => {
+    var w = new Worker('idle_worker.js');
+    w.addEventListener('message', function onMessage(evt) {
+      if (evt.data === 'LOADED') {
+        w.removeEventListener('message', onMessage);
+        resolve(w);
+      }
+    });
+  });
+}
+
+function gc() {
+  return new Promise(resolve => {
+    SpecialPowers.exactGC(resolve);
+  });
+}
+
+var weakWorker;
+
+SimpleTest.waitForExplicitFinish();
+startWorker().then(w => {
+  weakWorker = SpecialPowers.Cu.getWeakReference(w);
+  ok(weakWorker, 'worker supports weak reference');
+}).then(_ => {
+  return gc();
+}).then(_ => {
+  ok(!weakWorker.get(), 'worker weak reference should be garbage collected');
+  SimpleTest.finish();
+});
+</script>
+</body>
+</html>
