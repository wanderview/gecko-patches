# HG changeset patch
# Parent c8e3484e7733f3e8540c1b69af49f650a7b5e5c6
# User Ben Kelly <ben@wanderview.com>
Bug 940273 Part 1 Cache webidl and stubs

diff --git a/dom/cache/Cache.cpp b/dom/cache/Cache.cpp
new file mode 100644
--- /dev/null
+++ b/dom/cache/Cache.cpp
@@ -0,0 +1,93 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=8 sts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "mozilla/dom/Cache.h"
+#include "mozilla/dom/CacheBinding.h"
+
+namespace mozilla {
+namespace dom {
+
+NS_IMPL_CYCLE_COLLECTING_ADDREF(Cache);
+NS_IMPL_CYCLE_COLLECTING_RELEASE(Cache);
+NS_IMPL_CYCLE_COLLECTION_WRAPPERCACHE(Cache, mOwner)
+
+NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION(Cache)
+  NS_WRAPPERCACHE_INTERFACE_MAP_ENTRY
+  NS_INTERFACE_MAP_ENTRY(nsISupports)
+NS_INTERFACE_MAP_END
+
+already_AddRefed<Promise>
+Cache::Match(const RequestOrScalarValueString& aRequest,
+             const QueryParams& aParams)
+{
+  MOZ_CRASH("not implemented");
+}
+
+already_AddRefed<Promise>
+Cache::MatchAll(const RequestOrScalarValueString& aRequest,
+                const QueryParams& aParams)
+{
+  MOZ_CRASH("not implemented");
+}
+
+already_AddRefed<Promise>
+Cache::Add(const RequestOrScalarValueString& aRequests)
+{
+  MOZ_CRASH("not implemented");
+}
+
+already_AddRefed<Promise>
+Cache::AddAll(const Sequence<OwningRequestOrScalarValueString>& aRequests)
+{
+  MOZ_CRASH("not implemented");
+}
+
+already_AddRefed<Promise>
+Cache::Put(const RequestOrScalarValueString& aRequest,
+           const Response& aResponse)
+{
+  MOZ_CRASH("not implemented");
+}
+
+already_AddRefed<Promise>
+Cache::Delete(const RequestOrScalarValueString& aRequest,
+              const QueryParams& aParams)
+{
+  MOZ_CRASH("not implemented");
+}
+
+already_AddRefed<Promise>
+Cache::Keys(const Optional<RequestOrScalarValueString>& aRequest,
+            const QueryParams& aParams)
+{
+  MOZ_CRASH("not implemented");
+}
+
+nsISupports*
+Cache::GetParentObject() const
+{
+  return mOwner;
+}
+
+JSObject*
+Cache::WrapObject(JSContext* aContext)
+{
+  return CacheBinding::Wrap(aContext, this);
+}
+
+Cache::Cache(nsISupports* aOwner)
+: mOwner(aOwner)
+{
+  MOZ_ASSERT(aOwner);
+  SetIsDOMBinding();
+}
+
+Cache::~Cache()
+{
+}
+
+} // namespace dom
+} // namespace mozilla
diff --git a/dom/cache/Cache.h b/dom/cache/Cache.h
new file mode 100644
--- /dev/null
+++ b/dom/cache/Cache.h
@@ -0,0 +1,61 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=8 sts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef mozilla_dom_Cache_h
+#define mozilla_dom_Cache_h
+
+#include "nsCOMPtr.h"
+#include "nsISupportsImpl.h"
+#include "nsWrapperCache.h"
+
+namespace mozilla {
+namespace dom {
+
+class Promise;
+class OwningRequestOrScalarValueString;
+class RequestOrScalarValueString;
+class QueryParams;
+class Response;
+template<typename T> class Optional;
+template<typename T> class Sequence;
+
+class Cache MOZ_FINAL : public nsISupports
+                      , public nsWrapperCache
+{
+public:
+  // webidl interface methods
+  already_AddRefed<Promise> Match(const RequestOrScalarValueString& aRequest,
+                                  const QueryParams& aParams);
+  already_AddRefed<Promise> MatchAll(const RequestOrScalarValueString& aRequest,
+                                     const QueryParams& aParams);
+  already_AddRefed<Promise> Add(const RequestOrScalarValueString& aRequest);
+  already_AddRefed<Promise> AddAll(const Sequence<OwningRequestOrScalarValueString>& aRequests);
+  already_AddRefed<Promise> Put(const RequestOrScalarValueString& aRequest,
+                                const Response& aResponse);
+  already_AddRefed<Promise> Delete(const RequestOrScalarValueString& aRequest,
+                                   const QueryParams& aParams);
+  already_AddRefed<Promise> Keys(const Optional<RequestOrScalarValueString>& aRequest,
+                                 const QueryParams& aParams);
+
+  // binding methods
+  virtual nsISupports* GetParentObject() const MOZ_OVERRIDE;
+  virtual JSObject* WrapObject(JSContext* aContext) MOZ_OVERRIDE;
+
+  NS_DECL_CYCLE_COLLECTING_ISUPPORTS
+  NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS(Cache)
+
+private:
+  Cache(nsISupports* aOwner);
+  virtual ~Cache();
+
+private:
+  nsCOMPtr<nsISupports> mOwner;
+};
+
+} // namespace dom
+} // namespace mozilla
+
+#endif // mozilla_dom_Cache_h
diff --git a/dom/cache/moz.build b/dom/cache/moz.build
new file mode 100644
--- /dev/null
+++ b/dom/cache/moz.build
@@ -0,0 +1,17 @@
+# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+EXPORTS.mozilla.dom += [
+    'Cache.h',
+]
+
+UNIFIED_SOURCES += [
+    'Cache.cpp',
+]
+
+FAIL_ON_WARNINGS = True
+
+FINAL_LIBRARY = 'xul'
diff --git a/dom/moz.build b/dom/moz.build
--- a/dom/moz.build
+++ b/dom/moz.build
@@ -38,16 +38,17 @@ DIRS += [
     'animation',
     'apps',
     'base',
     'activities',
     'archivereader',
     'bindings',
     'battery',
     'browser-element',
+    'cache',
     'canvas',
     'contacts',
     'crypto',
     'phonenumberutils',
     'alarm',
     'datastore',
     'devicestorage',
     'encoding',
diff --git a/dom/webidl/Cache.webidl b/dom/webidl/Cache.webidl
new file mode 100644
--- /dev/null
+++ b/dom/webidl/Cache.webidl
@@ -0,0 +1,41 @@
+/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/.
+ *
+ * The origin of this IDL file is
+ * http://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html
+ *
+ */
+
+[Exposed=(Window,Worker),
+ Func="mozilla::dom::Cache::PrefEnabled"]
+interface Cache {
+  Promise<Response> match((Request or ScalarValueString) request,
+                          optional QueryParams params);
+  Promise<sequence<Response>> matchAll((Request or ScalarValueString) request,
+                                       optional QueryParams params);
+  Promise<Response> add((Request or ScalarValueString) request);
+  Promise<sequence<Response>> addAll(sequence<(Request or ScalarValueString)> requests);
+  Promise<Response> put((Request or ScalarValueString) request,
+                        Response response);
+  Promise<boolean> delete((Request or ScalarValueString) request,
+                          optional QueryParams params);
+  Promise<sequence<Request>> keys(optional (Request or ScalarValueString) request,
+                                  optional QueryParams params);
+};
+
+dictionary QueryParams {
+  boolean ignoreSearch;
+  boolean ignoreMethod;
+  boolean ignoreVary;
+  boolean prefixMatch;
+  DOMString cacheName;
+};
+
+dictionary CacheBatchOperation {
+  DOMString type;
+  Request request;
+  Response response;
+  QueryParams matchParams;
+};
diff --git a/dom/webidl/moz.build b/dom/webidl/moz.build
--- a/dom/webidl/moz.build
+++ b/dom/webidl/moz.build
@@ -45,16 +45,17 @@ WEBIDL_FILES = [
     'AudioTrackList.webidl',
     'AutocompleteInfo.webidl',
     'BarProp.webidl',
     'BatteryManager.webidl',
     'BeforeUnloadEvent.webidl',
     'BiquadFilterNode.webidl',
     'Blob.webidl',
     'BrowserElementDictionaries.webidl',
+    'Cache.webidl',
     'CallsList.webidl',
     'CameraCapabilities.webidl',
     'CameraControl.webidl',
     'CameraManager.webidl',
     'CanvasRenderingContext2D.webidl',
     'CaretPosition.webidl',
     'CDATASection.webidl',
     'ChannelMergerNode.webidl',
