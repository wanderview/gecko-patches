# HG changeset patch
# Parent d361140b0902d708d49698879be3718e67ed48d6
# User Ben Kelly <ben@wanderview.com>
Bug 940273 Part 1 Cache webidl and stubs

diff --git a/dom/bindings/Bindings.conf b/dom/bindings/Bindings.conf
--- a/dom/bindings/Bindings.conf
+++ b/dom/bindings/Bindings.conf
@@ -170,16 +170,22 @@ DOMInterfaces = {
 'BluetoothDevice': {
     'nativeType': 'mozilla::dom::bluetooth::BluetoothDevice',
 },
 
 'BluetoothManager': {
     'nativeType': 'mozilla::dom::bluetooth::BluetoothManager',
 },
 
+'Cache': {
+    'headerFile': 'mozilla/dom/Cache.h',
+    'nativeType': 'mozilla::dom::Cache',
+    'workers': True,
+},
+
 'CameraCapabilities': {
     'nativeType': 'mozilla::dom::CameraCapabilities',
     'headerFile': 'DOMCameraCapabilities.h'
 },
 
 'CameraControl': {
     'nativeType': 'mozilla::nsDOMCameraControl',
     'headerFile': 'DOMCameraControl.h',
diff --git a/dom/cache/Cache.cpp b/dom/cache/Cache.cpp
new file mode 100644
--- /dev/null
+++ b/dom/cache/Cache.cpp
@@ -0,0 +1,21 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=8 sts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "Cache.h"
+
+namespace mozilla {
+namespace dom {
+
+NS_IMPL_CYCLE_COLLECTING_ADDREF(Cache);
+NS_IMPL_CYCLE_COLLECTING_RELEASE(Cache);
+NS_IMPL_CYCLE_COLLECTION_WRAPPERCACHE_0(Cache)
+
+Cache::~Cache()
+{
+}
+
+} // namespace dom
+} // namespace mozilla
diff --git a/dom/cache/Cache.h b/dom/cache/Cache.h
new file mode 100644
--- /dev/null
+++ b/dom/cache/Cache.h
@@ -0,0 +1,30 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=8 sts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef mozilla_dom_Cache_h
+#define mozilla_dom_Cache_h
+
+#include "nsISupportsImpl.h"
+#include "nsWrapperCache.h"
+
+namespace mozilla {
+namespace dom {
+
+class Cache MOZ_FINAL : public nsISupports
+                      , public nsWrapperCache
+{
+  NS_DECL_CYCLE_COLLECTING_ISUPPORTS
+  NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS(Cache)
+
+private:
+  // own refcounting and final, so virtual dtor not needed
+  ~Cache();
+};
+
+} // namespace dom
+} // namespace mozilla
+
+#endif // mozilla_dom_Cache_h
diff --git a/dom/cache/moz.build b/dom/cache/moz.build
new file mode 100644
--- /dev/null
+++ b/dom/cache/moz.build
@@ -0,0 +1,15 @@
+# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+EXPORTS.mozilla.dom += [
+    'Cache.h',
+]
+
+UNIFIED_SOURCES += [
+    'Cache.cpp',
+]
+
+FAIL_ON_WARNINGS = True
diff --git a/dom/moz.build b/dom/moz.build
--- a/dom/moz.build
+++ b/dom/moz.build
@@ -33,16 +33,17 @@ interfaces = [
 ]
 
 PARALLEL_DIRS += ['interfaces/' + i for i in interfaces]
 
 PARALLEL_DIRS += [
     'animation',
     'apps',
     'base',
+    'cache',
     'activities',
     'archivereader',
     'bindings',
     'battery',
     'browser-element',
     'contacts',
     'crypto',
     'phonenumberutils',
diff --git a/dom/webidl/Cache.webidl b/dom/webidl/Cache.webidl
new file mode 100644
--- /dev/null
+++ b/dom/webidl/Cache.webidl
@@ -0,0 +1,31 @@
+/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/.
+ *
+ * The origin of this IDL file is
+ * http://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html
+ *
+ */
+
+[Constructor,
+ Pref="dom.serviceWorkers.enabled"]
+interface Cache {
+  // Promise<AbstractResponse>
+  Promise match((Request or DOMString) request, optional QueryParams params);
+  // Promise<sequence<AbstractResponse>>
+  Promise matchAll((Request or DOMString) request, optional QueryParams params);
+  Promise add((Request or DOMString)... requests);
+  Promise put((Request or DOMString) request, AbstractResponse response);
+  Promise delete((Request or DOMString) request, optional QueryParams params);
+  Promise each(CacheIterationCallback callback, optional object thisArg);
+};
+
+dictionary QueryParams {
+  boolean ignoreSearch;
+  boolean ignoreMethod;
+  boolean ignoreVary;
+  boolean prefixMatch;
+};
+
+callback CacheIterationCallback = void (AbstractResponse value, (Request or DOMString) key, Cache map);
diff --git a/dom/webidl/moz.build b/dom/webidl/moz.build
--- a/dom/webidl/moz.build
+++ b/dom/webidl/moz.build
@@ -37,16 +37,17 @@ WEBIDL_FILES = [
     'AudioProcessingEvent.webidl',
     'AudioStreamTrack.webidl',
     'BarProp.webidl',
     'BatteryManager.webidl',
     'BeforeUnloadEvent.webidl',
     'BiquadFilterNode.webidl',
     'Blob.webidl',
     'BrowserElementDictionaries.webidl',
+    'Cache.webidl',
     'CallEvent.webidl',
     'CallsList.webidl',
     'CameraCapabilities.webidl',
     'CameraControl.webidl',
     'CameraManager.webidl',
     'CanvasRenderingContext2D.webidl',
     'CaretPosition.webidl',
     'CDATASection.webidl',
