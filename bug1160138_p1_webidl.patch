# HG changeset patch
# Parent 34828fed163992d13fa46d5a087f2f4a1b3d09ae
# User Ben Kelly <ben@wanderview.com>
Bug 1160138 P1 Update CacheStorage and Cache webidl to latest spec. r=bz


diff --git a/dom/webidl/Cache.webidl b/dom/webidl/Cache.webidl
--- a/dom/webidl/Cache.webidl
+++ b/dom/webidl/Cache.webidl
@@ -8,37 +8,37 @@
  *
  */
 
 // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#cache
 
 [Exposed=(Window,Worker),
  Func="mozilla::dom::cache::Cache::PrefEnabled"]
 interface Cache {
-[Throws]
-Promise<Response> match(RequestInfo request, optional CacheQueryOptions options);
-[Throws]
-Promise<sequence<Response>> matchAll(optional RequestInfo request, optional CacheQueryOptions options);
-[Throws]
-Promise<void> add(RequestInfo request);
-[Throws]
-Promise<void> addAll(sequence<RequestInfo> requests);
-[Throws]
-Promise<void> put(RequestInfo request, Response response);
-[Throws]
-Promise<boolean> delete(RequestInfo request, optional CacheQueryOptions options);
-[Throws]
-Promise<sequence<Request>> keys(optional RequestInfo request, optional CacheQueryOptions options);
+  [NewObject]
+  Promise<Response> match(RequestInfo request, optional CacheQueryOptions options);
+  [NewObject]
+  Promise<sequence<Response>> matchAll(optional RequestInfo request, optional CacheQueryOptions options);
+  [NewObject]
+  Promise<void> add(RequestInfo request);
+  [NewObject]
+  Promise<void> addAll(sequence<RequestInfo> requests);
+  [NewObject]
+  Promise<void> put(RequestInfo request, Response response);
+  [NewObject]
+  Promise<boolean> delete(RequestInfo request, optional CacheQueryOptions options);
+  [NewObject]
+  Promise<sequence<Request>> keys(optional RequestInfo request, optional CacheQueryOptions options);
 };
 
 dictionary CacheQueryOptions {
-boolean ignoreSearch = false;
-boolean ignoreMethod = false;
-boolean ignoreVary = false;
-DOMString cacheName;
+  boolean ignoreSearch = false;
+  boolean ignoreMethod = false;
+  boolean ignoreVary = false;
+  DOMString cacheName;
 };
 
 dictionary CacheBatchOperation {
-DOMString type;
-Request request;
-Response response;
-CacheQueryOptions options;
+  DOMString type;
+  Request request;
+  Response response;
+  CacheQueryOptions options;
 };
diff --git a/dom/webidl/CacheStorage.webidl b/dom/webidl/CacheStorage.webidl
--- a/dom/webidl/CacheStorage.webidl
+++ b/dom/webidl/CacheStorage.webidl
@@ -8,19 +8,19 @@
  *
  */
 
 // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#cache-storage
 
 [Exposed=(Window,Worker),
  Func="mozilla::dom::cache::CacheStorage::PrefEnabled"]
 interface CacheStorage {
-[Throws]
-Promise<Response> match(RequestInfo request, optional CacheQueryOptions options);
-[Throws]
-Promise<boolean> has(DOMString cacheName);
-[Throws]
-Promise<Cache> open(DOMString cacheName);
-[Throws]
-Promise<boolean> delete(DOMString cacheName);
-[Throws]
-Promise<sequence<DOMString>> keys();
+  [NewObject]
+  Promise<Response> match(RequestInfo request, optional CacheQueryOptions options);
+  [NewObject]
+  Promise<boolean> has(DOMString cacheName);
+  [NewObject]
+  Promise<Cache> open(DOMString cacheName);
+  [NewObject]
+  Promise<boolean> delete(DOMString cacheName);
+  [NewObject]
+  Promise<sequence<DOMString>> keys();
 };
