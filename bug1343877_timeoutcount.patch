# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  1fceb3a215a49cfcca3c9848e0ad9db03f5bda7a
Bug 1343877 Don't allow an extra timer callback beyond configured pref value. r=smaug

diff --git a/dom/base/TimeoutManager.cpp b/dom/base/TimeoutManager.cpp
--- a/dom/base/TimeoutManager.cpp
+++ b/dom/base/TimeoutManager.cpp
@@ -469,16 +469,18 @@ TimeoutManager::RunTimeout(Timeout* aTim
         timeout->mFiringDepth = firingDepth;
         last_expired_timeout_is_normal = expiredIter.PickedNormalIter();
         if (last_expired_timeout_is_normal) {
           last_expired_normal_timeout = timeout;
         } else {
           last_expired_tracking_timeout = timeout;
         }
 
+        numTimersToRun += 1;
+
         // Note that we have seen our target timer.  This means we can now
         // stop processing timers once we hit our threshold below.
         if (timeout == aTimeout) {
           targetTimerSeen = true;
         }
 
         // Run only a limited number of timers based on the configured
         // maximum.  Note, we must always run our target timer however.
@@ -490,18 +492,16 @@ TimeoutManager::RunTimeout(Timeout* aTim
         // trust chrome windows not to misbehave and partly because a
         // number of browser chrome tests have races that depend on this
         // coalescing.
         if (targetTimerSeen &&
             numTimersToRun >= gTargetMaxConsecutiveCallbacks &&
             !mWindow.IsChromeWindow()) {
           break;
         }
-
-        numTimersToRun += 1;
       }
 
       expiredIter.UpdateIterator();
     }
   }
 
   // Maybe the timeout that the event was fired for has been deleted
   // and there are no others timeouts with deadlines that make them
