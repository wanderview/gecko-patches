# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  b51996ff028668127cf117cf7a2d8b30b5a02a4d
Bug 1455695 P7 Remove unused ErrorResult argument from ServiceWorkerRegistration::Inner::Update(). r=baku

diff --git a/dom/serviceworkers/ServiceWorkerRegistration.cpp b/dom/serviceworkers/ServiceWorkerRegistration.cpp
--- a/dom/serviceworkers/ServiceWorkerRegistration.cpp
+++ b/dom/serviceworkers/ServiceWorkerRegistration.cpp
@@ -208,17 +208,17 @@ ServiceWorkerRegistration::Update(ErrorR
 
   RefPtr<Promise> outer = Promise::Create(global, aRv);
   if (NS_WARN_IF(aRv.Failed())) {
     return nullptr;
   }
 
   RefPtr<ServiceWorkerRegistration> self = this;
 
-  mInner->Update(aRv)->Then(
+  mInner->Update()->Then(
     global->EventTargetFor(TaskCategory::Other), __func__,
     [outer, self](const ServiceWorkerRegistrationDescriptor& aDesc) {
       nsIGlobalObject* global = self->GetParentObject();
       if (!global) {
         outer->MaybeReject(NS_ERROR_DOM_INVALID_STATE_ERR);
         return;
       }
       RefPtr<ServiceWorkerRegistration> ref =
diff --git a/dom/serviceworkers/ServiceWorkerRegistration.h b/dom/serviceworkers/ServiceWorkerRegistration.h
--- a/dom/serviceworkers/ServiceWorkerRegistration.h
+++ b/dom/serviceworkers/ServiceWorkerRegistration.h
@@ -40,17 +40,17 @@ public:
 
     virtual void
     SetServiceWorkerRegistration(ServiceWorkerRegistration* aReg) = 0;
 
     virtual void
     ClearServiceWorkerRegistration(ServiceWorkerRegistration* aReg) = 0;
 
     virtual RefPtr<ServiceWorkerRegistrationPromise>
-    Update(ErrorResult& aRv) = 0;
+    Update() = 0;
 
     virtual RefPtr<GenericPromise>
     Unregister() = 0;
   };
 
   NS_DECLARE_STATIC_IID_ACCESSOR(NS_DOM_SERVICEWORKERREGISTRATION_IID)
   NS_DECL_ISUPPORTS_INHERITED
   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(ServiceWorkerRegistration, DOMEventTargetHelper)
diff --git a/dom/serviceworkers/ServiceWorkerRegistrationImpl.cpp b/dom/serviceworkers/ServiceWorkerRegistrationImpl.cpp
--- a/dom/serviceworkers/ServiceWorkerRegistrationImpl.cpp
+++ b/dom/serviceworkers/ServiceWorkerRegistrationImpl.cpp
@@ -465,17 +465,17 @@ public:
   Promise() const
   {
     return mPromise;
   }
 };
 } // namespace
 
 RefPtr<ServiceWorkerRegistrationPromise>
-ServiceWorkerRegistrationMainThread::Update(ErrorResult& aRv)
+ServiceWorkerRegistrationMainThread::Update()
 {
   MOZ_ASSERT(NS_IsMainThread());
   MOZ_DIAGNOSTIC_ASSERT(mOuter);
 
   nsCOMPtr<nsIPrincipal> principal = mDescriptor.GetPrincipal();
   if (!principal) {
     return ServiceWorkerRegistrationPromise::CreateAndReject(
       NS_ERROR_DOM_INVALID_STATE_ERR, __func__);
@@ -654,17 +654,17 @@ void
 ServiceWorkerRegistrationWorkerThread::ClearServiceWorkerRegistration(ServiceWorkerRegistration* aReg)
 {
   MOZ_ASSERT_IF(mOuter, mOuter == aReg);
   ReleaseListener();
   mOuter = nullptr;
 }
 
 RefPtr<ServiceWorkerRegistrationPromise>
-ServiceWorkerRegistrationWorkerThread::Update(ErrorResult& aRv)
+ServiceWorkerRegistrationWorkerThread::Update()
 {
   if (NS_WARN_IF(!mWorkerRef->GetPrivate())) {
     return ServiceWorkerRegistrationPromise::CreateAndReject(
       NS_ERROR_DOM_INVALID_STATE_ERR, __func__);
   }
 
   RefPtr<StrongWorkerRef> workerRef =
     StrongWorkerRef::Create(mWorkerRef->GetPrivate(),
diff --git a/dom/serviceworkers/ServiceWorkerRegistrationImpl.h b/dom/serviceworkers/ServiceWorkerRegistrationImpl.h
--- a/dom/serviceworkers/ServiceWorkerRegistrationImpl.h
+++ b/dom/serviceworkers/ServiceWorkerRegistrationImpl.h
@@ -38,17 +38,17 @@ public:
   // ServiceWorkerRegistration::Inner
   void
   SetServiceWorkerRegistration(ServiceWorkerRegistration* aReg) override;
 
   void
   ClearServiceWorkerRegistration(ServiceWorkerRegistration* aReg) override;
 
   RefPtr<ServiceWorkerRegistrationPromise>
-  Update(ErrorResult& aRv) override;
+  Update() override;
 
   RefPtr<GenericPromise>
   Unregister() override;
 
   // ServiceWorkerRegistrationListener
   void
   UpdateFound() override;
 
@@ -105,17 +105,17 @@ public:
   // ServiceWorkerRegistration::Inner
   void
   SetServiceWorkerRegistration(ServiceWorkerRegistration* aReg) override;
 
   void
   ClearServiceWorkerRegistration(ServiceWorkerRegistration* aReg) override;
 
   RefPtr<ServiceWorkerRegistrationPromise>
-  Update(ErrorResult& aRv) override;
+  Update() override;
 
   RefPtr<GenericPromise>
   Unregister() override;
 
   void
   UpdateFound();
 
 private:
