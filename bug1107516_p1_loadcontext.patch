# HG changeset patch
# Parent 29d086b32a2607108f2b7ffaef22925cf9e9a190
# User Ben Kelly <ben@wanderview.com>
Bug 1107516 P1 Add LoadContext constructor taking an nsIPrincipal.

diff --git a/docshell/base/LoadContext.cpp b/docshell/base/LoadContext.cpp
--- a/docshell/base/LoadContext.cpp
+++ b/docshell/base/LoadContext.cpp
@@ -1,20 +1,36 @@
 /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set sw=2 ts=8 et tw=80 : */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#include "mozilla/Assertions.h"
 #include "mozilla/LoadContext.h"
 
 namespace mozilla {
 
 NS_IMPL_ISUPPORTS(LoadContext, nsILoadContext, nsIInterfaceRequestor)
 
+LoadContext::LoadContext(nsIPrincipal* aPrincipal)
+  : mTopFrameElement(nullptr)
+  , mNestedFrameId(0)
+  , mIsContent(false)
+  , mUsePrivateBrowsing(false)
+  , mUseRemoteTabs(false)
+#ifdef DEBUG
+  , mIsNotNull(true)
+#endif
+{
+  MOZ_ALWAYS_TRUE(NS_SUCCEEDED(aPrincipal->GetAppId(&mAppId)));
+  MOZ_ALWAYS_TRUE(NS_SUCCEEDED(
+    aPrincipal->GetIsInBrowserElement(&mIsInBrowserElement)));
+}
+
 //-----------------------------------------------------------------------------
 // LoadContext::nsILoadContext
 //-----------------------------------------------------------------------------
 
 NS_IMETHODIMP
 LoadContext::GetAssociatedWindow(nsIDOMWindow**)
 {
   MOZ_ASSERT(mIsNotNull);
diff --git a/docshell/base/LoadContext.h b/docshell/base/LoadContext.h
--- a/docshell/base/LoadContext.h
+++ b/docshell/base/LoadContext.h
@@ -100,16 +100,20 @@ public:
     , mUsePrivateBrowsing(false)
     , mUseRemoteTabs(false)
     , mIsInBrowserElement(false)
 #ifdef DEBUG
     , mIsNotNull(true)
 #endif
   {}
 
+  // Constructor for creating a LoadContext with a given principal's appId and
+  // browser flag.
+  LoadContext(nsIPrincipal* aPrincipal);
+
 private:
   ~LoadContext() {}
 
   nsWeakPtr     mTopFrameElement;
   uint64_t      mNestedFrameId;
   uint32_t      mAppId;
   bool          mIsContent;
   bool          mUsePrivateBrowsing;
