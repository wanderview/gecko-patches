# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  02f8b9b84a09ab3a146c4bc2d35fbb09db5fb0c1
Bug 1425965 P2 Make ServiceWorkerManager::ReportToAllClients() use mControlledClients and ClientHandle::ReportToConsole(). r=asuth

diff --git a/dom/clients/manager/ClientSource.cpp b/dom/clients/manager/ClientSource.cpp
--- a/dom/clients/manager/ClientSource.cpp
+++ b/dom/clients/manager/ClientSource.cpp
@@ -674,20 +674,22 @@ ClientSource::Report(const ClientReportA
   } else if (GetDocShell()) {
     nsPIDOMWindowOuter* outer = GetDocShell()->GetWindow();
     if (outer) {
       windowId = outer->WindowID();
     }
   }
 
   nsCOMPtr<nsIURI> filename;
-  nsresult rv = NS_NewURI(getter_AddRefs(filename), aArgs.filename());
-  if (NS_WARN_IF(NS_FAILED(rv))) {
-    ref = ClientOpPromise::CreateAndReject(rv, __func__);
-    return ref.forget();
+  if (!aArgs.filename().IsEmpty()) {
+    nsresult rv = NS_NewURI(getter_AddRefs(filename), aArgs.filename());
+    if (NS_WARN_IF(NS_FAILED(rv))) {
+      ref = ClientOpPromise::CreateAndReject(rv, __func__);
+      return ref.forget();
+    }
   }
 
   nsContentUtils::ReportToConsoleByWindowID(aArgs.message(),
                                             aArgs.flags(),
                                             aArgs.category(),
                                             windowId,
                                             filename,
                                             aArgs.line(),
diff --git a/dom/workers/ServiceWorkerManager.cpp b/dom/workers/ServiceWorkerManager.cpp
--- a/dom/workers/ServiceWorkerManager.cpp
+++ b/dom/workers/ServiceWorkerManager.cpp
@@ -1733,39 +1733,30 @@ ServiceWorkerManager::ReportToAllClients
     if (NS_WARN_IF(NS_FAILED(rv))) {
       return;
     }
   }
 
   AutoTArray<uint64_t, 16> windows;
 
   // Report errors to every controlled document.
-  for (auto iter = mControlledDocuments.Iter(); !iter.Done(); iter.Next()) {
-    ServiceWorkerRegistrationInfo* reg = iter.UserData();
+  for (auto iter = mControlledClients.Iter(); !iter.Done(); iter.Next()) {
+    auto& reg = iter.UserData()->mRegistrationInfo;
     MOZ_ASSERT(reg);
     if (!reg->mScope.Equals(aScope)) {
       continue;
     }
 
-    nsCOMPtr<nsIDocument> doc = do_QueryInterface(iter.Key());
-    if (!doc || !doc->IsCurrentActiveDocument() || !doc->GetWindow()) {
-      continue;
-    }
-
-    windows.AppendElement(doc->InnerWindowID());
-
-    nsContentUtils::ReportToConsoleNonLocalized(aMessage,
-                                                aFlags,
-                                                NS_LITERAL_CSTRING("Service Workers"),
-                                                doc,
-                                                uri,
-                                                aLine,
-                                                aLineNumber,
-                                                aColumnNumber,
-                                                nsContentUtils::eOMIT_LOCATION);
+    iter.UserData()->mClientHandle->ReportToConsole(NS_LITERAL_CSTRING("Service Workers"),
+                                                    aMessage,
+                                                    aFilename,
+                                                    aLine,
+                                                    aLineNumber,
+                                                    aColumnNumber,
+                                                    aFlags);
   }
 
   // Report to any documents that have called .register() for this scope.  They
   // may not be controlled, but will still want to see error reports.
   WeakDocumentList* regList = mRegisteringDocuments.Get(aScope);
   if (regList) {
     for (int32_t i = regList->Length() - 1; i >= 0; --i) {
       nsCOMPtr<nsIDocument> doc = do_QueryReferent(regList->ElementAt(i));
