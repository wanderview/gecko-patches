# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  20c85c96efb9d88118e56213bdd767571c47c8f8

diff --git a/dom/workers/ServiceWorkerClient.cpp b/dom/workers/ServiceWorkerClient.cpp
--- a/dom/workers/ServiceWorkerClient.cpp
+++ b/dom/workers/ServiceWorkerClient.cpp
@@ -86,28 +86,28 @@ ServiceWorkerClientInfo::ServiceWorkerCl
 bool
 ServiceWorkerClientInfo::operator<(const ServiceWorkerClientInfo& aRight) const
 {
   // Note: the mLastFocusTime comparisons are reversed because we need to
   // put most recently focused values first.  The mOrdinal comparison is
   // normal, though, because otherwise we want normal creation order.
 
   if (mLastFocusTime.IsNull() && !aRight.mLastFocusTime.IsNull()) {
-    return false;
+    return true;
   }
 
   if (!mLastFocusTime.IsNull() && aRight.mLastFocusTime.IsNull()) {
-    return true;
+    return false;
   }
 
   if (mLastFocusTime.IsNull() && aRight.mLastFocusTime.IsNull()) {
     return mOrdinal < aRight.mOrdinal;
   }
 
-  return mLastFocusTime > aRight.mLastFocusTime;
+  return mLastFocusTime < aRight.mLastFocusTime;
 }
 
 bool
 ServiceWorkerClientInfo::operator==(const ServiceWorkerClientInfo& aRight) const
 {
   return mLastFocusTime == aRight.mLastFocusTime &&
          mOrdinal == aRight.mOrdinal &&
          mClientId == aRight.mClientId;
diff --git a/testing/web-platform/tests/service-workers/service-worker/clients-matchall-include-uncontrolled.https.html b/testing/web-platform/tests/service-workers/service-worker/clients-matchall-include-uncontrolled.https.html
--- a/testing/web-platform/tests/service-workers/service-worker/clients-matchall-include-uncontrolled.https.html
+++ b/testing/web-platform/tests/service-workers/service-worker/clients-matchall-include-uncontrolled.https.html
@@ -49,16 +49,17 @@ function test_matchall(frame, expected, 
     var channel = new MessageChannel();
     channel.port1.onmessage = function(e) {
       // Ignore hidden clients which may be coming from background tabs, or
       // clients unrelated to this test.
       var data = e.data.filter(function(info) {
         return info[0] == 'visible' &&
                info[2].indexOf('service-worker') > -1;
       });
+      dump('### ### ' + JSON.stringify(data) + '\n');
       data.sort(function(a, b) { return a[2] > b[2] ? 1 : -1; });
       assert_equals(data.length, expected.length);
       for (var i = 0; i < data.length; i++)
         assert_array_equals(data[i], expected[i]);
       resolve(frame);
     };
     frame.contentWindow.navigator.serviceWorker.controller.postMessage(
         {port:channel.port2, options:query_options},
