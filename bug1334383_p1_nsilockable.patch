# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  89dbd6f66936d89e4d3e0e896b1595ac0da589a4
Bug 1334383 P1 Add the nsILockable mix-in interface. r=froydnj

diff --git a/xpcom/threads/moz.build b/xpcom/threads/moz.build
--- a/xpcom/threads/moz.build
+++ b/xpcom/threads/moz.build
@@ -21,16 +21,17 @@ XPIDL_SOURCES += [
 
 XPIDL_MODULE = 'xpcom_threads'
 
 EXPORTS += [
     'MainThreadUtils.h',
     'nsEventQueue.h',
     'nsICancelableRunnable.h',
     'nsIIdleRunnable.h',
+    'nsILockable.h',
     'nsMemoryPressure.h',
     'nsProcess.h',
     'nsProxyRelease.h',
     'nsThread.h',
     'nsThreadUtils.h',
 ]
 
 EXPORTS.mozilla += [
diff --git a/xpcom/threads/nsILockable.h b/xpcom/threads/nsILockable.h
new file mode 100644
--- /dev/null
+++ b/xpcom/threads/nsILockable.h
@@ -0,0 +1,35 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=8 sts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef nsILockable_h__
+#define nsILockable_h__
+
+#include "nsISupports.h"
+
+#define NS_ILOCKABLE_IID \
+{0x14f7fa0a, 0xe147, 0x4fcb, \
+{0x84, 0xcb, 0x34, 0x97, 0xe1, 0xea, 0xd4, 0xac}}
+
+// This is a simple mix-in interface that signals it is safe to
+// invoke its other methods while holding a lock.  The class
+// implementing this interface guarantees it will not trigger
+// any external locking that could lead to deadlock.  For example,
+// it is safe to hold a lock around an nsIEventTarget's Dispatch()
+// method if it implements nsILockable.
+class nsILockable : public nsISupports
+{
+public:
+  NS_DECLARE_STATIC_IID_ACCESSOR(NS_ILOCKABLE_IID)
+
+protected:
+  nsILockable() { }
+  virtual ~nsILockable() {}
+};
+
+NS_DEFINE_STATIC_IID_ACCESSOR(nsILockable,
+                              NS_ILOCKABLE_IID)
+
+#endif // nsILockable_h__
