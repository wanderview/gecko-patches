# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  9875fd455c369b7e752176ccd56ad8c1164c827b

diff --git a/netwerk/protocol/http/HttpChannelChild.cpp b/netwerk/protocol/http/HttpChannelChild.cpp
--- a/netwerk/protocol/http/HttpChannelChild.cpp
+++ b/netwerk/protocol/http/HttpChannelChild.cpp
@@ -2230,23 +2230,16 @@ HttpChannelChild::Cancel(nsresult status
       SendCancel(status);
 
     // If the channel is intercepted and already pumping, then just
     // cancel the pump.  This will call OnStopRequest().
     if (mSynthesizedResponsePump) {
       mSynthesizedResponsePump->Cancel(status);
     }
 
-    // Otherwise, if we are canceled while intercepting, but not yet
-    // pumping, then we must call AsyncAbort to trigger OnStopRequest().
-    else if (mInterceptListener) {
-      mInterceptListener->Cleanup();
-      Unused << AsyncAbort(status);
-    }
-
     mInterceptListener = nullptr;
   }
   return NS_OK;
 }
 
 NS_IMETHODIMP
 HttpChannelChild::Suspend()
 {
diff --git a/netwerk/protocol/http/InterceptedChannel.cpp b/netwerk/protocol/http/InterceptedChannel.cpp
--- a/netwerk/protocol/http/InterceptedChannel.cpp
+++ b/netwerk/protocol/http/InterceptedChannel.cpp
@@ -291,16 +291,17 @@ InterceptedChannelContent::StartSynthesi
 {
   if (NS_WARN_IF(mClosed)) {
     return NS_ERROR_NOT_AVAILABLE;
   }
 
   nsresult rv = NS_ERROR_FAILURE;
   Unused << mChannel->GetStatus(&rv);
   if (NS_FAILED(rv)) {
+    Unused << mChannel->AsyncAbort(rv);
     return rv;
   }
 
   EnsureSynthesizedResponse();
 
   nsCOMPtr<nsIURI> originalURI;
   mChannel->GetURI(getter_AddRefs(originalURI));
 
