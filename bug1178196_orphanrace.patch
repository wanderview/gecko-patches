# HG changeset patch
# Parent 3debf469330321615e274814e982f34144a1b5f1
# User Ben Kelly <ben@wanderview.com>
Bug 1178196 Fix race in Cache API orphaned data tests. r=ehsan


diff --git a/dom/cache/test/mochitest/test_cache_orphaned_body.html b/dom/cache/test/mochitest/test_cache_orphaned_body.html
--- a/dom/cache/test/mochitest/test_cache_orphaned_body.html
+++ b/dom/cache/test/mochitest/test_cache_orphaned_body.html
@@ -105,16 +105,23 @@ SpecialPowers.pushPrefEnv({
   }).then(function(c) {
     return c.add(url);
   }).then(function() {
     return gc();
   }).then(function() {
     return caches.delete(name);
   }).then(function(deleted) {
     ok(deleted, 'cache should be deleted');
+
+    // This is a bit superfluous, but its necessary to make sure the Cache is
+    // fully deleted before we proceed.  The deletion actually takes place in
+    // two async steps.  We don't want to resetStorage() until the second step
+    // has taken place.  This extra Cache operation ensure that all the
+    // runnables have been flushed through the threads, etc.
+    return caches.has(name);
   })
 
   // Now measure initial disk usage
   .then(function() {
     return resetStorage();
   }).then(function() {
     return storageUsage();
   }).then(function(usage) {
diff --git a/dom/cache/test/mochitest/test_cache_orphaned_cache.html b/dom/cache/test/mochitest/test_cache_orphaned_cache.html
--- a/dom/cache/test/mochitest/test_cache_orphaned_cache.html
+++ b/dom/cache/test/mochitest/test_cache_orphaned_cache.html
@@ -104,16 +104,23 @@ SpecialPowers.pushPrefEnv({
   }).then(function(c) {
     return c.add(url);
   }).then(function() {
     return gc();
   }).then(function() {
     return caches.delete(name);
   }).then(function(deleted) {
     ok(deleted, 'cache should be deleted');
+
+    // This is a bit superfluous, but its necessary to make sure the Cache is
+    // fully deleted before we proceed.  The deletion actually takes place in
+    // two async steps.  We don't want to resetStorage() until the second step
+    // has taken place.  This extra Cache operation ensure that all the
+    // runnables have been flushed through the threads, etc.
+    return caches.has(name);
   })
 
   // Now measure initial disk usage
   .then(function() {
     return resetStorage();
   }).then(function() {
     return storageUsage();
   }).then(function(usage) {
