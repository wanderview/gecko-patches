# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  cd5c68d78f2d2f465a33088494c9eebcc5cd251d
Bug 1256428 P15 Perform byte-for-byte comparison check after validating script URL. r=jdm

diff --git a/dom/workers/ServiceWorkerUpdateJob.cpp b/dom/workers/ServiceWorkerUpdateJob.cpp
--- a/dom/workers/ServiceWorkerUpdateJob.cpp
+++ b/dom/workers/ServiceWorkerUpdateJob.cpp
@@ -270,22 +270,21 @@ ServiceWorkerUpdateJob2::ComparisonResul
     return;
   }
 
   if (NS_WARN_IF(NS_FAILED(aStatus))) {
     FailUpdateJob(aStatus);
     return;
   }
 
-  if (aInCacheAndEqual) {
-    Finish(NS_OK);
-    return;
-  }
-
-  Telemetry::Accumulate(Telemetry::SERVICE_WORKER_UPDATED, 1);
+  // The spec validates the response before performing the byte-for-byte check.
+  // Here we perform the comparison in another module and then validate the
+  // script URL and scope.  Make sure to do this validation before accepting
+  // an byte-for-byte match since the service-worker-allowed header might have
+  // changed since the last time it was installed.
 
   nsCOMPtr<nsIURI> scriptURI;
   nsresult rv = NS_NewURI(getter_AddRefs(scriptURI), mScriptSpec);
   if (NS_WARN_IF(NS_FAILED(rv))) {
     FailUpdateJob(NS_ERROR_DOM_SECURITY_ERR);
     return;
   }
 
@@ -331,16 +330,25 @@ ServiceWorkerUpdateJob2::ComparisonResul
                             message,
                             EmptyString(),
                             EmptyString(), 0, 0,
                             nsIScriptError::errorFlag);
     FailUpdateJob(NS_ERROR_DOM_SECURITY_ERR);
     return;
   }
 
+  // The response has been validated, so now we can consider if its a
+  // byte-for-byte match.
+  if (aInCacheAndEqual) {
+    Finish(NS_OK);
+    return;
+  }
+
+  Telemetry::Accumulate(Telemetry::SERVICE_WORKER_UPDATED, 1);
+
   MOZ_ASSERT(!mServiceWorker);
   mServiceWorker = new ServiceWorkerInfo(mRegistration->mPrincipal,
                                          mRegistration->mScope,
                                          mScriptSpec, aNewCacheName);
 
   nsMainThreadPtrHandle<ServiceWorkerUpdateJob2> handle(
       new nsMainThreadPtrHolder<ServiceWorkerUpdateJob2>(this));
   RefPtr<LifeCycleEventCallback> callback = new ContinueUpdateRunnable(handle);
