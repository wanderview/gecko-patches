# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  fb40bcb6155bd1e3ac5468ff4575cce171efbc12

diff --git a/layout/base/nsPresContext.cpp b/layout/base/nsPresContext.cpp
--- a/layout/base/nsPresContext.cpp
+++ b/layout/base/nsPresContext.cpp
@@ -182,16 +182,17 @@ nsPresContext::PrefChangedCallback(const
   }
 }
 
 void
 nsPresContext::PrefChangedUpdateTimerCallback(nsITimer *aTimer, void *aClosure)
 {
   nsPresContext*  presContext = (nsPresContext*)aClosure;
   NS_ASSERTION(presContext != nullptr, "bad instance data");
+  printf_stderr("### ### [%p] PrefChangedUpdateTimerCallback()\n", presContext);
   if (presContext)
     presContext->UpdateAfterPreferencesChanged();
 }
 
 static bool
 IsVisualCharset(const nsCString& aCharset)
 {
   if (aCharset.LowerCaseEqualsLiteral("ibm862")             // Hebrew
@@ -763,16 +764,17 @@ nsPresContext::PreferenceChanged(const c
   if (!mPrefChangedTimer)
   {
     // We will end up calling InvalidatePreferenceSheets one from each pres
     // context, but all it's doing is clearing its cached sheet pointers,
     // so it won't be wastefully recreating the sheet multiple times.
     // The first pres context that has its mPrefChangedTimer called will
     // be the one to cause the reconstruction of the pref style sheet.
     nsLayoutStylesheetCache::InvalidatePreferenceSheets();
+    printf_stderr("### ### [%p] PreferenceChanged() starting timer\n", this);
     mPrefChangedTimer = CreateTimer(PrefChangedUpdateTimerCallback,
                                     "PrefChangedUpdateTimerCallback", 0);
     if (!mPrefChangedTimer) {
       return;
     }
   }
   if (prefName.EqualsLiteral("nglayout.debug.paint_flashing") ||
       prefName.EqualsLiteral("nglayout.debug.paint_flashing_chrome")) {
@@ -1541,16 +1543,17 @@ void
 nsPresContext::SetContainer(nsIDocShell* aDocShell)
 {
   if (aDocShell) {
     NS_ASSERTION(!(mContainer && mNeedsPrefUpdate),
                  "Should only need pref update if mContainer is null.");
     mContainer = static_cast<nsDocShell*>(aDocShell);
     if (mNeedsPrefUpdate) {
       if (!mPrefChangedTimer) {
+        printf_stderr("### ### [%p] Start PrefChangedUpdatedTimerCallback timer\n", this);
         mPrefChangedTimer = CreateTimer(PrefChangedUpdateTimerCallback,
                                         "PrefChangedUpdateTimerCallback", 0);
       }
       mNeedsPrefUpdate = false;
     }
   } else {
     mContainer = WeakPtr<nsDocShell>();
   }
