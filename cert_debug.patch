# HG changeset patch
# Parent f578b845c4b8b4b042170c74553e2cfdf879825c
# User Ben Kelly <ben@wanderview.com>
diff --git a/dom/cache/DBSchema.cpp b/dom/cache/DBSchema.cpp
--- a/dom/cache/DBSchema.cpp
+++ b/dom/cache/DBSchema.cpp
@@ -1111,16 +1111,39 @@ InsertEntry(mozIStorageConnection* aConn
             const CacheRequest& aRequest,
             const nsID* aRequestBodyId,
             const CacheResponse& aResponse,
             const nsID* aResponseBodyId)
 {
   MOZ_ASSERT(!NS_IsMainThread());
   MOZ_ASSERT(aConn);
 
+  {
+    nsCOMPtr<mozIStorageStatement> state;
+
+    nsresult rv = aConn->CreateStatement(NS_LITERAL_CSTRING(
+      "SELECT COUNT(*) FROM entries WHERE response_security_info is ?1;"
+    ), getter_AddRefs(state));
+    if (NS_WARN_IF(NS_FAILED(rv))) { return rv; }
+
+    rv = state->BindUTF8StringAsBlobParameter(0, aResponse.securityInfo());
+    if (NS_WARN_IF(NS_FAILED(rv))) { return rv; }
+
+    bool hasMoreData = false;
+    rv = state->ExecuteStep(&hasMoreData);
+    if (NS_WARN_IF(NS_FAILED(rv))) { return rv; }
+
+    int32_t count;
+    rv = state->GetInt32(0, &count);
+    if (NS_WARN_IF(NS_FAILED(rv))) { return rv; }
+
+    printf_stderr("### ### security info of length %u already in db %d times\n",
+                  aResponse.securityInfo().Length(), count);
+  }
+
   nsCOMPtr<mozIStorageStatement> state;
   nsresult rv = aConn->CreateStatement(NS_LITERAL_CSTRING(
     "INSERT INTO entries ("
       "request_method, "
       "request_url, "
       "request_url_no_query, "
       "request_referrer, "
       "request_headers_guard, "
