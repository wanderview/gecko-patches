# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  5e9bd04333f20e00911b8c1dfbf2b2e070c61e2d
Bug 1440407 P1 Add nsPIDOMWindowInner::AsGlobal() to cheaply cast to nsIGlobalObject*. r=mystor

diff --git a/dom/base/nsGlobalWindowInner.cpp b/dom/base/nsGlobalWindowInner.cpp
--- a/dom/base/nsGlobalWindowInner.cpp
+++ b/dom/base/nsGlobalWindowInner.cpp
@@ -7932,16 +7932,28 @@ nsPIDOMWindowInner::GetDocGroup() const
 {
   nsIDocument* doc = GetExtantDoc();
   if (doc) {
     return doc->GetDocGroup();
   }
   return nullptr;
 }
 
+nsIGlobalObject*
+nsPIDOMWindowInner::AsGlobal()
+{
+  return nsGlobalWindowInner::Cast(this);
+}
+
+const nsIGlobalObject*
+nsPIDOMWindowInner::AsGlobal() const
+{
+  return nsGlobalWindowInner::Cast(this);
+}
+
 // XXX: Can we define this in a header instead of here?
 namespace mozilla {
 namespace dom {
 extern uint64_t
 NextWindowID();
 } // namespace dom
 } // namespace mozilla
 
diff --git a/dom/base/nsPIDOMWindow.h b/dom/base/nsPIDOMWindow.h
--- a/dom/base/nsPIDOMWindow.h
+++ b/dom/base/nsPIDOMWindow.h
@@ -150,16 +150,19 @@ public:
 
   nsPIDOMWindowInner* AsInner() {
     return this;
   }
   const nsPIDOMWindowInner* AsInner() const {
     return this;
   }
 
+  nsIGlobalObject* AsGlobal();
+  const nsIGlobalObject* AsGlobal() const;
+
   nsPIDOMWindowOuter* GetOuterWindow() const {
     return mOuterWindow;
   }
 
   static nsPIDOMWindowInner* From(mozIDOMWindow* aFrom) {
     return static_cast<nsPIDOMWindowInner*>(aFrom);
   }
 
