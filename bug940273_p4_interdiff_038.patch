# HG changeset patch
# Parent 1e32ff4742733b549590d9e5d2423b714e3c744c
# User Ben Kelly <ben@wanderview.com>
Bug 940273 p4 interdiff 038 more implicit constructors


diff --git a/dom/cache/FetchPut.cpp b/dom/cache/FetchPut.cpp
--- a/dom/cache/FetchPut.cpp
+++ b/dom/cache/FetchPut.cpp
@@ -23,17 +23,17 @@
 
 namespace mozilla {
 namespace dom {
 namespace cache {
 
 class FetchPut::Runnable MOZ_FINAL : public nsRunnable
 {
 public:
-  Runnable(FetchPut* aFetchPut)
+  explicit Runnable(FetchPut* aFetchPut)
     : mFetchPut(aFetchPut)
   {
     MOZ_ASSERT(mFetchPut);
   }
 
   NS_IMETHOD Run() MOZ_OVERRIDE
   {
     if (NS_IsMainThread())
@@ -56,17 +56,17 @@ public:
 
 private:
   nsRefPtr<FetchPut> mFetchPut;
 };
 
 class FetchPut::FetchObserver MOZ_FINAL : public FetchDriverObserver
 {
 public:
-  FetchObserver(FetchPut* aFetchPut)
+  explicit FetchObserver(FetchPut* aFetchPut)
     : mFetchPut(aFetchPut)
   {
   }
 
   virtual void OnResponseAvailable(InternalResponse* aResponse) MOZ_OVERRIDE
   {
     MOZ_ASSERT(!mInternalResponse);
     mInternalResponse = aResponse;
diff --git a/dom/cache/ReadStream.cpp b/dom/cache/ReadStream.cpp
--- a/dom/cache/ReadStream.cpp
+++ b/dom/cache/ReadStream.cpp
@@ -223,17 +223,17 @@ using mozilla::ipc::PFileDescriptorSetCh
 
 // Runnable to notify actors that the ReadStream has closed.  This must
 // be done on the thread associated with the PBackground actor.  Must be
 // cancelable to execute on Worker threads (which can occur when the
 // ReadStream is constructed on a child process Worker thread).
 class ReadStream::NoteClosedRunnable MOZ_FINAL : public nsCancelableRunnable
 {
 public:
-  NoteClosedRunnable(ReadStream* aStream)
+  explicit NoteClosedRunnable(ReadStream* aStream)
     : mStream(aStream)
   { }
 
   NS_IMETHOD Run()
   {
     mStream->NoteClosedOnWorkerThread();
     return NS_OK;
   }
@@ -251,17 +251,17 @@ private:
 // Runnable to clear actors without reporting that the ReadStream has
 // closed.  Since this can trigger actor destruction, we need to do
 // it on the thread associated with the PBackground actor.  Must be
 // cancelable to execute on Worker threads (which can occur when the
 // ReadStream is constructed on a child process Worker thread).
 class ReadStream::ForgetRunnable MOZ_FINAL : public nsCancelableRunnable
 {
 public:
-  ForgetRunnable(ReadStream* aStream)
+  explicit ForgetRunnable(ReadStream* aStream)
     : mStream(aStream)
   { }
 
   NS_IMETHOD Run()
   {
     mStream->ForgetOnWorkerThread();
     return NS_OK;
   }
