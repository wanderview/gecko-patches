# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  cc7d8d8db248e1185537465f25a761165e9f813f
Bug 1273920 P2 Fix register-wait-forever-in-install-worker.https.html to expect new unified service worker job queue behavior. r=asuth

diff --git a/testing/web-platform/tests/service-workers/service-worker/register-wait-forever-in-install-worker.https.html b/testing/web-platform/tests/service-workers/service-worker/register-wait-forever-in-install-worker.https.html
--- a/testing/web-platform/tests/service-workers/service-worker/register-wait-forever-in-install-worker.https.html
+++ b/testing/web-platform/tests/service-workers/service-worker/register-wait-forever-in-install-worker.https.html
@@ -1,27 +1,53 @@
 <!DOCTYPE html>
 <title>Service Worker: Register wait-forever-in-install-worker</title>
 <script src="/resources/testharness.js"></script>
 <script src="resources/testharness-helpers.js"></script>
 <script src="/resources/testharnessreport.js"></script>
 <script src="resources/test-helpers.sub.js"></script>
 <script>
 
+
+
 promise_test(function(t) {
     var bad_script = 'resources/wait-forever-in-install-worker.js';
     var good_script = 'resources/empty-worker.js';
     var scope = 'resources/wait-forever-in-install-worker';
+    var registration;
+
+    function delayAndUnblockInstall() {
+      return new Promise(function(resolve, reject) {
+        setTimeout(function() {
+          // The second register job should not start until the first
+          // register completes.
+          if (registration.installing.scriptURL !== normalizeURL(bad_script)) {
+            reject('bad script should still be installing!');
+            return;
+          }
+          registration.installing.postMessage('STOP_WAITING');
+          resolve();
+        }, 2000);
+      });
+    }
+
     return navigator.serviceWorker.register(bad_script, {scope: scope})
-      .then(function(registration) {
+      .then(function(r) {
+          registration = r;
           assert_equals(registration.installing.scriptURL,
                         normalizeURL(bad_script));
-          return navigator.serviceWorker.register(good_script, {scope: scope});
+          return Promise.all([
+            navigator.serviceWorker.register(good_script, {scope: scope}),
+            delayAndUnblockInstall()
+          ]);
         })
-      .then(function(registration) {
+      .then(function() {
+          dump(registration.installing);
+          dump(registration.waiting);
+          dump(registration.active);
           assert_equals(registration.installing.scriptURL,
                         normalizeURL(good_script));
           return wait_for_state(t, registration.installing, 'activated');
         })
       .then(function() {
           return service_worker_unregister_and_done(t, scope);
         })
   }, 'register worker that calls waitUntil with a promise that never ' +
diff --git a/testing/web-platform/tests/service-workers/service-worker/resources/wait-forever-in-install-worker.js b/testing/web-platform/tests/service-workers/service-worker/resources/wait-forever-in-install-worker.js
--- a/testing/web-platform/tests/service-workers/service-worker/resources/wait-forever-in-install-worker.js
+++ b/testing/web-platform/tests/service-workers/service-worker/resources/wait-forever-in-install-worker.js
@@ -1,3 +1,12 @@
+var waitUntilResolve;
 self.addEventListener('install', function(event) {
-    event.waitUntil(new Promise(function() {}));
+    event.waitUntil(new Promise(function(resolve) {
+        waitUntilResolve = resolve;
+      }));
   });
+
+self.addEventListener('message', function(event) {
+    if (event.data === 'STOP_WAITING') {
+      waitUntilResolve();
+    }
+  });
