# HG changeset patch
# User Ben Kelly <ben@wanderview.com>
# Parent  259bc0e3033f1fcae718611489c3ad3770fc214f
Bug 1255070 P5 Make SnappyCompressOutputStream implement nsIBufferedOutputStream. r=froydnj

diff --git a/xpcom/io/SnappyCompressOutputStream.cpp b/xpcom/io/SnappyCompressOutputStream.cpp
--- a/xpcom/io/SnappyCompressOutputStream.cpp
+++ b/xpcom/io/SnappyCompressOutputStream.cpp
@@ -7,17 +7,18 @@
 #include "mozilla/SnappyCompressOutputStream.h"
 
 #include <algorithm>
 #include "nsStreamUtils.h"
 #include "snappy/snappy.h"
 
 namespace mozilla {
 
-NS_IMPL_ISUPPORTS(SnappyCompressOutputStream, nsIOutputStream);
+NS_IMPL_ISUPPORTS(SnappyCompressOutputStream, nsIOutputStream,
+                                              nsIBufferedOutputStream);
 
 // static
 const size_t
 SnappyCompressOutputStream::kMaxBlockSize = snappy::kBlockSize;
 
 SnappyCompressOutputStream::SnappyCompressOutputStream(nsIOutputStream* aBaseStream,
                                                        size_t aBlockSize)
  : mBaseStream(aBaseStream)
@@ -248,9 +249,16 @@ SnappyCompressOutputStream::WriteAll(con
     offset += numWritten;
     aCount -= numWritten;
     *aBytesWrittenOut += numWritten;
   }
 
   return NS_OK;
 }
 
+NS_IMETHODIMP
+SnappyCompressOutputStream::Init(nsIOutputStream*, uint32_t)
+{
+  MOZ_CRASH("SnappyCompressOutputStream should not be initialized using "
+            "nsIBufferedOutputStream::Init()");
+}
+
 } // namespace mozilla
diff --git a/xpcom/io/SnappyCompressOutputStream.h b/xpcom/io/SnappyCompressOutputStream.h
--- a/xpcom/io/SnappyCompressOutputStream.h
+++ b/xpcom/io/SnappyCompressOutputStream.h
@@ -5,23 +5,24 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #ifndef mozilla_SnappyCompressOutputStream_h__
 #define mozilla_SnappyCompressOutputStream_h__
 
 #include "mozilla/Attributes.h"
 #include "mozilla/UniquePtr.h"
 #include "nsCOMPtr.h"
+#include "nsIBufferedStreams.h"
 #include "nsIOutputStream.h"
 #include "nsISupportsImpl.h"
 #include "SnappyFrameUtils.h"
 
 namespace mozilla {
 
-class SnappyCompressOutputStream final : public nsIOutputStream
+class SnappyCompressOutputStream final : public nsIBufferedOutputStream
                                        , protected detail::SnappyFrameUtils
 {
 public:
   // Maximum compression block size.
   static const size_t kMaxBlockSize;
 
   // Construct a new blocking output stream to compress data to
   // the given base stream.  The base stream must also be blocking.
@@ -57,13 +58,14 @@ private:
   size_t mCompressedBufferLength;
 
   // The first thing written to the stream must be a stream identifier.
   bool mStreamIdentifierWritten;
 
 public:
   NS_DECL_THREADSAFE_ISUPPORTS
   NS_DECL_NSIOUTPUTSTREAM
+  NS_DECL_NSIBUFFEREDOUTPUTSTREAM
 };
 
 } // namespace mozilla
 
 #endif // mozilla_SnappyCompressOutputStream_h__
diff --git a/xpcom/tests/gtest/TestSnappyStreams.cpp b/xpcom/tests/gtest/TestSnappyStreams.cpp
--- a/xpcom/tests/gtest/TestSnappyStreams.cpp
+++ b/xpcom/tests/gtest/TestSnappyStreams.cpp
@@ -197,8 +197,23 @@ TEST(SnappyStream, UncompressInterfaces)
   ASSERT_TRUE(NS_SUCCEEDED(rv));
 
   nsCOMPtr<nsIInputStream> uncompress =
     new SnappyUncompressInputStream(source);
 
   nsCOMPtr<nsIBufferedInputStream> type1 = do_QueryInterface(uncompress);
   ASSERT_TRUE(type1);
 }
+
+TEST(SnappyStream, CompressInterfaces)
+{
+  nsCOMPtr<nsIInputStream> reader;
+  nsCOMPtr<nsIOutputStream> writer;
+
+  nsresult rv = NS_NewPipe(getter_AddRefs(reader), getter_AddRefs(writer));
+  ASSERT_TRUE(NS_SUCCEEDED(rv));
+
+  nsCOMPtr<nsIOutputStream> compress =
+    new SnappyCompressOutputStream(writer);
+
+  nsCOMPtr<nsIBufferedOutputStream> type1 = do_QueryInterface(compress);
+  ASSERT_TRUE(type1);
+}
